getDisplay
Gets the Display object that is unique to this MIDlet
	0:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	2:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	3:	android.provider.MediaStore.Video public MediaStore.Video () 
	4:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	5:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	6:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	7:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	9:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
getColor
Returns one of the colors from the high level user interface color scheme, in the form 0x00RRGGBB based on the colorSpecifier passed in
	0:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	1:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	2:	android.provider.MediaStore.Video public MediaStore.Video () 
	3:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	4:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	5:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	6:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	7:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	8:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	9:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
getBorderStyle
Returns the stroke style used for border drawing depending on the state of the component (highlighted/non-highlighted)
	0:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	1:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	2:	android.provider.MediaStore.Video public MediaStore.Video () 
	3:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	4:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	5:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	6:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	7:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	8:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	9:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
isColor
Gets information about color support of the device
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video public MediaStore.Video () 
	3:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	4:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	5:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	6:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	7:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	9:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
numColors
Gets the number of colors (if isColor() is true) or graylevels (if isColor() is false) that can be represented on the device
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	4:	android.provider.MediaStore.Video public MediaStore.Video () 
	5:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	6:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	7:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	9:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
numAlphaLevels
Gets the number of alpha transparency levels supported by this implementation
	0:	android.provider.MediaStore.Video public MediaStore.Video () 
	1:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	2:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	3:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	4:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	5:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	6:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	7:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	9:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
getCurrent
Gets the current Displayable object for this MIDlet
	0:	android.provider.MediaStore.Video public MediaStore.Video () 
	1:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	2:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	3:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	4:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	5:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	6:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	7:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	9:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
setCurrent
Requests that a different Displayable object be made visible on the display
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	4:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	5:	android.provider.MediaStore.Video public MediaStore.Video () 
	6:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	7:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	8:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	9:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
setCurrent
Requests that this Alert be made current, and that nextDisplayable be made current after the Alert is dismissed
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	4:	android.provider.MediaStore.Video public MediaStore.Video () 
	5:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	6:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	7:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	9:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
setCurrentItem
Requests that the Displayable that contains this Item be made current, scrolls the Displayable so that this Item is visible, and possibly assigns the focus to this Item
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	4:	android.provider.MediaStore.Video public MediaStore.Video () 
	5:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	6:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	7:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	9:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
callSerially
Causes the Runnable object r to have its run() method called later, serialized with the event stream, soon after completion of the repaint cycle
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	4:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	5:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	6:	android.provider.MediaStore.Video public MediaStore.Video () 
	7:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	8:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	9:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
flashBacklight
Requests a flashing effect for the device's backlight
	0:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	1:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	2:	android.provider.MediaStore.Video public MediaStore.Video () 
	3:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	4:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	5:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	6:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	7:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	8:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	9:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
vibrate
Requests operation of the device's vibrator
	0:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	1:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
	2:	android.provider.MediaStore.Video public MediaStore.Video () 
	3:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	4:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	5:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	6:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	7:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	8:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	9:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
getBestImageWidth
Returns the best image width for a given image type
	0:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	1:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	4:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	5:	android.provider.MediaStore.Video public MediaStore.Video () 
	6:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	7:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	8:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	9:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
getBestImageHeight
Returns the best image height for a given image type
	0:	android.provider.MediaStore.Video public static final Cursor query (ContentResolver cr, Uri uri, String[] projection) 
	1:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, long groupId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. groupId the id of group to which this request belongs kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	2:	android.provider.MediaStore.Video.Thumbnails public static Bitmap getThumbnail (ContentResolver cr, long origId, int kind, BitmapFactory.Options options) This method checks if the thumbnails of the specified image (origId) has been created. It will be blocked until the thumbnails are generated. Parameters cr ContentResolver used to dispatch queries to MediaProvider. origId Original image id associated with thumbnail of interest. kind The type of thumbnail to fetch. Should be either MINI_KIND or MICRO_KIND. options this is only used for MINI_KIND when decoding the Bitmap Returns A Bitmap instance. It could be null if the original image associated with origId doesn't exist or memory is not enough.
	3:	android.provider.MediaStore.Video.Media public static Uri getContentUri (String volumeName) Get the content:// style URI for the video media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the video media table on the given volume
	4:	android.provider.MediaStore.Video.Thumbnails public static Uri getContentUri (String volumeName) Get the content:// style URI for the image media table on the given volume. Parameters volumeName the name of the volume to get the URI for Returns the URI to the image media table on the given volume
	5:	android.provider.MediaStore.Video public MediaStore.Video () 
	6:	android.provider.MediaStore.Video.Media public MediaStore.Video.Media () 
	7:	android.provider.MediaStore.Video.Thumbnails public MediaStore.Video.Thumbnails () 
	8:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id
	9:	android.provider.MediaStore.Video.Thumbnails public static void cancelThumbnailRequest (ContentResolver cr, long origId, long groupId) This method cancels the thumbnail request so clients waiting for getThumbnail will be interrupted and return immediately. Only the original process which made the getThumbnail requests can cancel their own requests. Parameters cr ContentResolver origId original video id groupId the same groupId used in getThumbnail.
