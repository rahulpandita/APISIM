Command
Creates a new command object with the given short label, type, and priority
	0:	java.lang.Compiler public static Object command (Object cmd) Executes an operation according to the specified command object. This method is the low-level interface to the JIT compiler. It may return any object or null if no JIT compiler is available. Returns null on Android, whether or not the system has a JIT. Parameters cmd the command object for the JIT compiler. Returns the result of executing command or null.
	1:	java.util.ResourceBundle.Control public ResourceBundle newBundle (String baseName, Locale locale, String format, ClassLoader loader, boolean reload) Returns a new ResourceBundle. Parameters baseName the base name to use locale the given locale format the format, default is "java.class" or "java.properties" loader the classloader to use reload whether to reload the resource Returns a new ResourceBundle according to the give parameters Throws IllegalAccessException if we can not access resources InstantiationException if we can not instantiate a resource class IOException if other I/O exception happens
	2:	java.util.ResourceBundle.Control public String toBundleName (String baseName, Locale locale) a utility method to answer the name of a resource bundle according to the given base name and locale Parameters baseName the given base name locale the locale to use Returns the name of a resource bundle according to the given base name and locale
	3:	java.util.ResourceBundle.Control public final String toResourceName (String bundleName, String suffix) a utility method to answer the name of a resource according to the given bundleName and suffix Parameters bundleName the given bundle name suffix the suffix Returns the name of a resource according to the given bundleName and suffix
	4:	java.util.ResourceBundle.Control public static ResourceBundle.Control getControl (List<String> formats) Returns a control according to formats.
	5:	java.util.ResourceBundle.Control public static ResourceBundle.Control getNoFallbackControl (List<String> formats) Returns a control according to formats whose fallback locale is null.
	6:	java.util.ResourceBundle.Control public List<String> getFormats (String baseName) Returns a list of strings of formats according to baseName.
	7:	java.util.ResourceBundle.Control public List<Locale> getCandidateLocales (String baseName, Locale locale) Returns a list of candidate locales according to baseName in locale.
	8:	java.util.ResourceBundle.Control public long getTimeToLive (String baseName, Locale locale) Returns the time to live of the ResourceBundle baseName in locale, default is TTL_NO_EXPIRATION_CONTROL.
	9:	java.util.ResourceBundle.Control public boolean needsReload (String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime) Returns true if the ResourceBundle needs to reload. Parameters baseName the base name of the ResourceBundle locale the locale of the ResourceBundle format the format to load loader the ClassLoader to load resource bundle the ResourceBundle loadTime the expired time Returns if the ResourceBundle needs to reload
Command
Creates a new command object with the given labels, type, and priority
	0:	java.lang.Compiler public static Object command (Object cmd) Executes an operation according to the specified command object. This method is the low-level interface to the JIT compiler. It may return any object or null if no JIT compiler is available. Returns null on Android, whether or not the system has a JIT. Parameters cmd the command object for the JIT compiler. Returns the result of executing command or null.
	1:	java.util.ResourceBundle.Control public ResourceBundle newBundle (String baseName, Locale locale, String format, ClassLoader loader, boolean reload) Returns a new ResourceBundle. Parameters baseName the base name to use locale the given locale format the format, default is "java.class" or "java.properties" loader the classloader to use reload whether to reload the resource Returns a new ResourceBundle according to the give parameters Throws IllegalAccessException if we can not access resources InstantiationException if we can not instantiate a resource class IOException if other I/O exception happens
	2:	java.util.ResourceBundle.Control public String toBundleName (String baseName, Locale locale) a utility method to answer the name of a resource bundle according to the given base name and locale Parameters baseName the given base name locale the locale to use Returns the name of a resource bundle according to the given base name and locale
	3:	java.util.ResourceBundle.Control public final String toResourceName (String bundleName, String suffix) a utility method to answer the name of a resource according to the given bundleName and suffix Parameters bundleName the given bundle name suffix the suffix Returns the name of a resource according to the given bundleName and suffix
	4:	java.util.ResourceBundle.Control public static ResourceBundle.Control getControl (List<String> formats) Returns a control according to formats.
	5:	java.util.ResourceBundle.Control public static ResourceBundle.Control getNoFallbackControl (List<String> formats) Returns a control according to formats whose fallback locale is null.
	6:	java.util.ResourceBundle.Control public List<String> getFormats (String baseName) Returns a list of strings of formats according to baseName.
	7:	java.util.ResourceBundle.Control public List<Locale> getCandidateLocales (String baseName, Locale locale) Returns a list of candidate locales according to baseName in locale.
	8:	java.util.ResourceBundle.Control public long getTimeToLive (String baseName, Locale locale) Returns the time to live of the ResourceBundle baseName in locale, default is TTL_NO_EXPIRATION_CONTROL.
	9:	java.util.ResourceBundle.Control public boolean needsReload (String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime) Returns true if the ResourceBundle needs to reload. Parameters baseName the base name of the ResourceBundle locale the locale of the ResourceBundle format the format to load loader the ClassLoader to load resource bundle the ResourceBundle loadTime the expired time Returns if the ResourceBundle needs to reload
getLabel
Gets the short label of the command
	0:	java.util.ResourceBundle.Control public long getTimeToLive (String baseName, Locale locale) Returns the time to live of the ResourceBundle baseName in locale, default is TTL_NO_EXPIRATION_CONTROL.
	1:	java.util.ResourceBundle.Control public static ResourceBundle.Control getControl (List<String> formats) Returns a control according to formats.
	2:	java.util.ResourceBundle.Control public static ResourceBundle.Control getNoFallbackControl (List<String> formats) Returns a control according to formats whose fallback locale is null.
	3:	java.util.ResourceBundle.Control public String toBundleName (String baseName, Locale locale) a utility method to answer the name of a resource bundle according to the given base name and locale Parameters baseName the given base name locale the locale to use Returns the name of a resource bundle according to the given base name and locale
	4:	java.util.ResourceBundle.Control public final String toResourceName (String bundleName, String suffix) a utility method to answer the name of a resource according to the given bundleName and suffix Parameters bundleName the given bundle name suffix the suffix Returns the name of a resource according to the given bundleName and suffix
	5:	java.util.ResourceBundle.Control public boolean needsReload (String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime) Returns true if the ResourceBundle needs to reload. Parameters baseName the base name of the ResourceBundle locale the locale of the ResourceBundle format the format to load loader the ClassLoader to load resource bundle the ResourceBundle loadTime the expired time Returns if the ResourceBundle needs to reload
	6:	java.util.ResourceBundle.Control public ResourceBundle newBundle (String baseName, Locale locale, String format, ClassLoader loader, boolean reload) Returns a new ResourceBundle. Parameters baseName the base name to use locale the given locale format the format, default is "java.class" or "java.properties" loader the classloader to use reload whether to reload the resource Returns a new ResourceBundle according to the give parameters Throws IllegalAccessException if we can not access resources InstantiationException if we can not instantiate a resource class IOException if other I/O exception happens
	7:	java.util.ResourceBundle.Control public Locale getFallbackLocale (String baseName, Locale locale) Returns the fallback locale for baseName in locale.
	8:	java.util.ResourceBundle.Control public List<String> getFormats (String baseName) Returns a list of strings of formats according to baseName.
	9:	java.util.ResourceBundle.Control public List<Locale> getCandidateLocales (String baseName, Locale locale) Returns a list of candidate locales according to baseName in locale.
getLongLabel
Gets the long label of the command
	0:	java.util.ResourceBundle.Control public long getTimeToLive (String baseName, Locale locale) Returns the time to live of the ResourceBundle baseName in locale, default is TTL_NO_EXPIRATION_CONTROL.
	1:	java.util.ResourceBundle.Control public boolean needsReload (String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime) Returns true if the ResourceBundle needs to reload. Parameters baseName the base name of the ResourceBundle locale the locale of the ResourceBundle format the format to load loader the ClassLoader to load resource bundle the ResourceBundle loadTime the expired time Returns if the ResourceBundle needs to reload
	2:	java.util.ResourceBundle.Control public static ResourceBundle.Control getControl (List<String> formats) Returns a control according to formats.
	3:	java.util.ResourceBundle.Control public static ResourceBundle.Control getNoFallbackControl (List<String> formats) Returns a control according to formats whose fallback locale is null.
	4:	java.util.ResourceBundle.Control public String toBundleName (String baseName, Locale locale) a utility method to answer the name of a resource bundle according to the given base name and locale Parameters baseName the given base name locale the locale to use Returns the name of a resource bundle according to the given base name and locale
	5:	java.util.ResourceBundle.Control public final String toResourceName (String bundleName, String suffix) a utility method to answer the name of a resource according to the given bundleName and suffix Parameters bundleName the given bundle name suffix the suffix Returns the name of a resource according to the given bundleName and suffix
	6:	java.util.ResourceBundle.Control public ResourceBundle newBundle (String baseName, Locale locale, String format, ClassLoader loader, boolean reload) Returns a new ResourceBundle. Parameters baseName the base name to use locale the given locale format the format, default is "java.class" or "java.properties" loader the classloader to use reload whether to reload the resource Returns a new ResourceBundle according to the give parameters Throws IllegalAccessException if we can not access resources InstantiationException if we can not instantiate a resource class IOException if other I/O exception happens
	7:	java.util.ResourceBundle.Control public Locale getFallbackLocale (String baseName, Locale locale) Returns the fallback locale for baseName in locale.
	8:	java.util.ResourceBundle.Control public List<String> getFormats (String baseName) Returns a list of strings of formats according to baseName.
	9:	java.util.ResourceBundle.Control public List<Locale> getCandidateLocales (String baseName, Locale locale) Returns a list of candidate locales according to baseName in locale.
getCommandType
Gets the type of the command
	0:	java.util.ResourceBundle.Control public long getTimeToLive (String baseName, Locale locale) Returns the time to live of the ResourceBundle baseName in locale, default is TTL_NO_EXPIRATION_CONTROL.
	1:	java.util.ResourceBundle.Control public static ResourceBundle.Control getControl (List<String> formats) Returns a control according to formats.
	2:	java.util.ResourceBundle.Control public static ResourceBundle.Control getNoFallbackControl (List<String> formats) Returns a control according to formats whose fallback locale is null.
	3:	java.util.ResourceBundle.Control public String toBundleName (String baseName, Locale locale) a utility method to answer the name of a resource bundle according to the given base name and locale Parameters baseName the given base name locale the locale to use Returns the name of a resource bundle according to the given base name and locale
	4:	java.util.ResourceBundle.Control public final String toResourceName (String bundleName, String suffix) a utility method to answer the name of a resource according to the given bundleName and suffix Parameters bundleName the given bundle name suffix the suffix Returns the name of a resource according to the given bundleName and suffix
	5:	java.util.ResourceBundle.Control public ResourceBundle newBundle (String baseName, Locale locale, String format, ClassLoader loader, boolean reload) Returns a new ResourceBundle. Parameters baseName the base name to use locale the given locale format the format, default is "java.class" or "java.properties" loader the classloader to use reload whether to reload the resource Returns a new ResourceBundle according to the give parameters Throws IllegalAccessException if we can not access resources InstantiationException if we can not instantiate a resource class IOException if other I/O exception happens
	6:	java.util.ResourceBundle.Control public boolean needsReload (String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime) Returns true if the ResourceBundle needs to reload. Parameters baseName the base name of the ResourceBundle locale the locale of the ResourceBundle format the format to load loader the ClassLoader to load resource bundle the ResourceBundle loadTime the expired time Returns if the ResourceBundle needs to reload
	7:	java.util.ResourceBundle.Control public List<String> getFormats (String baseName) Returns a list of strings of formats according to baseName.
	8:	java.util.ResourceBundle.Control public List<Locale> getCandidateLocales (String baseName, Locale locale) Returns a list of candidate locales according to baseName in locale.
	9:	java.util.ResourceBundle.Control public Locale getFallbackLocale (String baseName, Locale locale) Returns the fallback locale for baseName in locale.
getPriority
Gets the priority of the command
	0:	java.util.ResourceBundle.Control public long getTimeToLive (String baseName, Locale locale) Returns the time to live of the ResourceBundle baseName in locale, default is TTL_NO_EXPIRATION_CONTROL.
	1:	java.util.ResourceBundle.Control public static ResourceBundle.Control getControl (List<String> formats) Returns a control according to formats.
	2:	java.util.ResourceBundle.Control public static ResourceBundle.Control getNoFallbackControl (List<String> formats) Returns a control according to formats whose fallback locale is null.
	3:	java.util.ResourceBundle.Control public String toBundleName (String baseName, Locale locale) a utility method to answer the name of a resource bundle according to the given base name and locale Parameters baseName the given base name locale the locale to use Returns the name of a resource bundle according to the given base name and locale
	4:	java.util.ResourceBundle.Control public final String toResourceName (String bundleName, String suffix) a utility method to answer the name of a resource according to the given bundleName and suffix Parameters bundleName the given bundle name suffix the suffix Returns the name of a resource according to the given bundleName and suffix
	5:	java.util.ResourceBundle.Control public ResourceBundle newBundle (String baseName, Locale locale, String format, ClassLoader loader, boolean reload) Returns a new ResourceBundle. Parameters baseName the base name to use locale the given locale format the format, default is "java.class" or "java.properties" loader the classloader to use reload whether to reload the resource Returns a new ResourceBundle according to the give parameters Throws IllegalAccessException if we can not access resources InstantiationException if we can not instantiate a resource class IOException if other I/O exception happens
	6:	java.util.ResourceBundle.Control public boolean needsReload (String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime) Returns true if the ResourceBundle needs to reload. Parameters baseName the base name of the ResourceBundle locale the locale of the ResourceBundle format the format to load loader the ClassLoader to load resource bundle the ResourceBundle loadTime the expired time Returns if the ResourceBundle needs to reload
	7:	java.util.ResourceBundle.Control public Locale getFallbackLocale (String baseName, Locale locale) Returns the fallback locale for baseName in locale.
	8:	java.util.ResourceBundle.Control public List<String> getFormats (String baseName) Returns a list of strings of formats according to baseName.
	9:	java.util.ResourceBundle.Control public List<Locale> getCandidateLocales (String baseName, Locale locale) Returns a list of candidate locales according to baseName in locale.
