Alert
Constructs a new, empty Alert object with the given title
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder setTitle (int titleId) Set the title using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	1:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setAdapter (ListAdapter adapter, DialogInterface.OnClickListener listener) Set a list of items, which are supplied by the given ListAdapter, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Parameters adapter The ListAdapter to supply the list of items listener The listener that will be called when an item is clicked. Returns This Builder object to allow for chaining of calls to set methods
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setCursor (Cursor cursor, DialogInterface.OnClickListener listener, String labelColumn) Set a list of items, which are supplied by the given Cursor, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Parameters cursor The Cursor to supply the list of items listener The listener that will be called when an item is clicked. labelColumn The column name on the cursor containing the string to display in the label. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog protected AlertDialog (Context context, int theme) Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants THEME_TRADITIONAL, THEME_HOLO_DARK, or THEME_HOLO_LIGHT.
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setIcon (Drawable icon) Set the Drawable to be used in the title. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder setTitle (CharSequence title) Set the title displayed in the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	8:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo Returns This Builder object to allow for chaining of calls to set methods
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (CharSequence[] items, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Returns This Builder object to allow for chaining of calls to set methods
Alert
Constructs a new Alert object with the given title, content string and image, and alert type
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder setCursor (Cursor cursor, DialogInterface.OnClickListener listener, String labelColumn) Set a list of items, which are supplied by the given Cursor, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Parameters cursor The Cursor to supply the list of items listener The listener that will be called when an item is clicked. labelColumn The column name on the cursor containing the string to display in the label. Returns This Builder object to allow for chaining of calls to set methods
	1:	android.app.AlertDialog.Builder public AlertDialog.Builder setAdapter (ListAdapter adapter, DialogInterface.OnClickListener listener) Set a list of items, which are supplied by the given ListAdapter, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Parameters adapter The ListAdapter to supply the list of items listener The listener that will be called when an item is clicked. Returns This Builder object to allow for chaining of calls to set methods
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor used to provide the items. isCheckedColumn specifies the column name on the cursor to use to determine whether a checkbox is checked or not. It must return an integer value where 1 means checked and 0 means unchecked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (Cursor cursor, int checkedItem, String labelColumn, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor to retrieve the items from. checkedItem specifies which item is checked. If -1 no items are checked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (CharSequence[] items, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	8:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (int itemsId, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters itemsId the resource id of an array i.e. R.array.foo checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters items the items to be displayed. checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
getDefaultTimeout
Gets the default time for showing an Alert
	0:	android.app.AlertDialog public boolean onKeyUp (int keyCode, KeyEvent event) A key was released. The default implementation handles KEYCODE_BACK to close the dialog. Parameters keyCode The value in event.getKeyCode(). event Description of the key event. Returns If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false.
	1:	android.app.AlertDialog.Builder public AlertDialog create () Creates a AlertDialog with the arguments supplied to this builder. It does not show() the dialog. This allows the user to do any extra processing before displaying the dialog. Use show() if you don't have any other processing to do and want this to be created and displayed.
	2:	android.app.AlertDialog public boolean onKeyDown (int keyCode, KeyEvent event) A key was pressed down. If the focused view didn't want this event, this method is called. The default implementation consumed the KEYCODE_BACK to later handle it in onKeyUp(int, KeyEvent). Parameters keyCode The value in event.getKeyCode(). event Description of the key event. Returns If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false.
	3:	android.app.AlertDialog.Builder public AlertDialog show () Creates a AlertDialog with the arguments supplied to this builder and show()'s the dialog.
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor used to provide the items. isCheckedColumn specifies the column name on the cursor to use to determine whether a checkbox is checked or not. It must return an integer value where 1 means checked and 0 means unchecked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog protected void onCreate (Bundle savedInstanceState) Similar to onCreate(Bundle), you should initialize your dialog in this method, including calling setContentView(View). Parameters savedInstanceState If this dialog is being reinitalized after a the hosting activity was previously shut down, holds the result from the most recent call to onSaveInstanceState(), or null if this is the first time.
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setCancelable (boolean cancelable) Sets whether the dialog is cancelable or not. Default is true. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog public void setView (View view) Set the view to display in that dialog.
	8:	android.app.AlertDialog public void setView (View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) Set the view to display in that dialog, specifying the spacing to appear around that view. Parameters view The view to show in the content area of the dialog viewSpacingLeft Extra space to appear to the left of view viewSpacingTop Extra space to appear above view viewSpacingRight Extra space to appear to the right of view viewSpacingBottom Extra space to appear below view
	9:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
getTimeout
Gets the time this Alert will be shown
	0:	android.app.AlertDialog protected void onCreate (Bundle savedInstanceState) Similar to onCreate(Bundle), you should initialize your dialog in this method, including calling setContentView(View). Parameters savedInstanceState If this dialog is being reinitalized after a the hosting activity was previously shut down, holds the result from the most recent call to onSaveInstanceState(), or null if this is the first time.
	1:	android.app.AlertDialog public void setCustomTitle (View customTitleView) See Also setCustomTitle(View)
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor used to provide the items. isCheckedColumn specifies the column name on the cursor to use to determine whether a checkbox is checked or not. It must return an integer value where 1 means checked and 0 means unchecked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	3:	android.app.AlertDialog protected AlertDialog (Context context, int theme) Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants THEME_TRADITIONAL, THEME_HOLO_DARK, or THEME_HOLO_LIGHT.
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder (Context context, int theme) Constructor using a context and theme for this builder and the AlertDialog it creates. The actual theme that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants AlertDialog.THEME_TRADITIONAL, AlertDialog.THEME_HOLO_DARK, or AlertDialog.THEME_HOLO_LIGHT.
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnCancelListener (DialogInterface.OnCancelListener onCancelListener) Sets the callback that will be called if the dialog is canceled. Even in a cancelable dialog, the dialog may be dismissed for reasons other than being canceled or one of the supplied choices being selected. If you are interested in listening for all cases where the dialog is dismissed and not just when it is canceled, see setOnDismissListener. Returns This Builder object to allow for chaining of calls to set methods See Also setCancelable(boolean) setOnDismissListener(android.content.DialogInterface.OnDismissListener)
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener) Sets a listener to be invoked when an item in the list is selected. Parameters listener The listener to be invoked. Returns This Builder object to allow for chaining of calls to set methods See Also setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder setView (View view) Set a custom view to be the contents of the Dialog. If the supplied view is an instance of a ListView the light background will be used. Parameters view The view to use as the contents of the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	8:	android.app.AlertDialog public boolean onKeyUp (int keyCode, KeyEvent event) A key was released. The default implementation handles KEYCODE_BACK to close the dialog. Parameters keyCode The value in event.getKeyCode(). event Description of the key event. Returns If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false.
	9:	android.app.AlertDialog public boolean onKeyDown (int keyCode, KeyEvent event) A key was pressed down. If the focused view didn't want this event, this method is called. The default implementation consumed the KEYCODE_BACK to later handle it in onKeyUp(int, KeyEvent). Parameters keyCode The value in event.getKeyCode(). event Description of the key event. Returns If you handled the event, return true. If you want to allow the event to be handled by the next receiver, return false.
setTimeout
Set the time for which the Alert is to be shown
	0:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	1:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, Message msg) Set a message to be sent when a button is pressed. Parameters whichButton Which button to set the message for, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. msg The Message to be sent when clicked.
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setAdapter (ListAdapter adapter, DialogInterface.OnClickListener listener) Set a list of items, which are supplied by the given ListAdapter, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Parameters adapter The ListAdapter to supply the list of items listener The listener that will be called when an item is clicked. Returns This Builder object to allow for chaining of calls to set methods
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setCursor (Cursor cursor, DialogInterface.OnClickListener listener, String labelColumn) Set a list of items, which are supplied by the given Cursor, to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Parameters cursor The Cursor to supply the list of items listener The listener that will be called when an item is clicked. labelColumn The column name on the cursor containing the string to display in the label. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (int itemsId, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters itemsId the resource id of an array i.e. R.array.foo checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (int itemsId, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type, e.g. R.array.foo. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters itemsId the resource id of an array i.e. R.array.foo checkedItems specifies which items are checked. It should be null in which case no items are checked. If non null it must be exactly the same length as the array of items. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog protected AlertDialog (Context context, int theme) Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants THEME_TRADITIONAL, THEME_HOLO_DARK, or THEME_HOLO_LIGHT.
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder (Context context, int theme) Constructor using a context and theme for this builder and the AlertDialog it creates. The actual theme that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants AlertDialog.THEME_TRADITIONAL, AlertDialog.THEME_HOLO_DARK, or AlertDialog.THEME_HOLO_LIGHT.
	8:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters items the items to be displayed. checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (ListAdapter adapter, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters adapter The ListAdapter to supply the list of items checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
getType
Gets the type of the Alert
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder (Context context, int theme) Constructor using a context and theme for this builder and the AlertDialog it creates. The actual theme that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants AlertDialog.THEME_TRADITIONAL, AlertDialog.THEME_HOLO_DARK, or AlertDialog.THEME_HOLO_LIGHT.
	1:	android.app.AlertDialog protected AlertDialog (Context context, int theme) Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants THEME_TRADITIONAL, THEME_HOLO_DARK, or THEME_HOLO_LIGHT.
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener) Sets a listener to be invoked when an item in the list is selected. Parameters listener The listener to be invoked. Returns This Builder object to allow for chaining of calls to set methods See Also setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setView (View view) Set a custom view to be the contents of the Dialog. If the supplied view is an instance of a ListView the light background will be used. Parameters view The view to use as the contents of the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnCancelListener (DialogInterface.OnCancelListener onCancelListener) Sets the callback that will be called if the dialog is canceled. Even in a cancelable dialog, the dialog may be dismissed for reasons other than being canceled or one of the supplied choices being selected. If you are interested in listening for all cases where the dialog is dismissed and not just when it is canceled, see setOnDismissListener. Returns This Builder object to allow for chaining of calls to set methods See Also setCancelable(boolean) setOnDismissListener(android.content.DialogInterface.OnDismissListener)
	5:	android.app.AlertDialog.Builder public Context getContext () Returns a Context with the appropriate theme for dialogs created by this Builder. Applications should use this Context for obtaining LayoutInflaters for inflating views that will be used in the resulting dialogs, as it will cause views to be inflated with the correct theme. Returns A Context for built Dialogs.
	6:	android.app.AlertDialog public void setCustomTitle (View customTitleView) See Also setCustomTitle(View)
	7:	android.app.AlertDialog protected void onCreate (Bundle savedInstanceState) Similar to onCreate(Bundle), you should initialize your dialog in this method, including calling setContentView(View). Parameters savedInstanceState If this dialog is being reinitalized after a the hosting activity was previously shut down, holds the result from the most recent call to onSaveInstanceState(), or null if this is the first time.
	8:	android.app.AlertDialog.Builder public AlertDialog create () Creates a AlertDialog with the arguments supplied to this builder. It does not show() the dialog. This allows the user to do any extra processing before displaying the dialog. Use show() if you don't have any other processing to do and want this to be created and displayed.
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (int itemsId, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters itemsId the resource id of an array i.e. R.array.foo checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
setType
Sets the type of the Alert
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo Returns This Builder object to allow for chaining of calls to set methods
	1:	android.app.AlertDialog public void setIconAttribute (int attrId) Set an icon as supplied by a theme attribute. e.g. android.R.attr.alertDialogIcon Parameters attrId ID of a theme attribute that points to a drawable resource.
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setIconAttribute (int attrId) Set an icon as supplied by a theme attribute. e.g. android.R.attr.alertDialogIcon Parameters attrId ID of a theme attribute that points to a drawable resource.
	3:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, Message msg) Set a message to be sent when a button is pressed. Parameters whichButton Which button to set the message for, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. msg The Message to be sent when clicked.
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setView (View view) Set a custom view to be the contents of the Dialog. If the supplied view is an instance of a ListView the light background will be used. Parameters view The view to use as the contents of the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (CharSequence[] items, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder setNegativeButton (CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the negative button of the dialog is pressed. Parameters text The text to display in the negative button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
	8:	android.app.AlertDialog.Builder public AlertDialog.Builder setNegativeButton (int textId, DialogInterface.OnClickListener listener) Set a listener to be invoked when the negative button of the dialog is pressed. Parameters textId The resource id of the text to display in the negative button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setNeutralButton (int textId, DialogInterface.OnClickListener listener) Set a listener to be invoked when the neutral button of the dialog is pressed. Parameters textId The resource id of the text to display in the neutral button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
getString
Gets the text string used in the Alert
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor used to provide the items. isCheckedColumn specifies the column name on the cursor to use to determine whether a checkbox is checked or not. It must return an integer value where 1 means checked and 0 means unchecked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	1:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (Cursor cursor, int checkedItem, String labelColumn, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor to retrieve the items from. checkedItem specifies which item is checked. If -1 no items are checked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	2:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	3:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	4:	android.app.AlertDialog public void setButton (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 1 of the dialog is pressed. Parameters text The text to display in button 1. listener The DialogInterface.OnClickListener to use.
	5:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, Message msg) Set a message to be sent when a button is pressed. Parameters whichButton Which button to set the message for, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. msg The Message to be sent when clicked.
	6:	android.app.AlertDialog public void setButton2 (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_NEGATIVE Set a listener to be invoked when button 2 of the dialog is pressed. Parameters text The text to display in button 2. listener The DialogInterface.OnClickListener to use.
	7:	android.app.AlertDialog public void setButton3 (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 3 of the dialog is pressed. Parameters text The text to display in button 3. listener The DialogInterface.OnClickListener to use.
	8:	android.app.AlertDialog.Builder public AlertDialog.Builder setNegativeButton (CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the negative button of the dialog is pressed. Parameters text The text to display in the negative button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setNeutralButton (CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the neutral button of the dialog is pressed. Parameters text The text to display in the neutral button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
setString
Sets the text string used in the Alert
	0:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	1:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	2:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, Message msg) Set a message to be sent when a button is pressed. Parameters whichButton Which button to set the message for, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. msg The Message to be sent when clicked.
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setNegativeButton (CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the negative button of the dialog is pressed. Parameters text The text to display in the negative button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setNeutralButton (CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the neutral button of the dialog is pressed. Parameters text The text to display in the neutral button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setPositiveButton (CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters text The text to display in the positive button listener The DialogInterface.OnClickListener to use. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog public void setButton (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 1 of the dialog is pressed. Parameters text The text to display in button 1. listener The DialogInterface.OnClickListener to use.
	7:	android.app.AlertDialog public void setButton2 (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_NEGATIVE Set a listener to be invoked when button 2 of the dialog is pressed. Parameters text The text to display in button 2. listener The DialogInterface.OnClickListener to use.
	8:	android.app.AlertDialog public void setButton3 (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 3 of the dialog is pressed. Parameters text The text to display in button 3. listener The DialogInterface.OnClickListener to use.
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (Cursor cursor, String isCheckedColumn, String labelColumn, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters cursor the cursor used to provide the items. isCheckedColumn specifies the column name on the cursor to use to determine whether a checkbox is checked or not. It must return an integer value where 1 means checked and 0 means unchecked. labelColumn The column name on the cursor containing the string to display in the label. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
getImage
Gets the Image used in the Alert
	0:	android.app.AlertDialog public void setCustomTitle (View customTitleView) See Also setCustomTitle(View)
	1:	android.app.AlertDialog protected AlertDialog (Context context, int theme) Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants THEME_TRADITIONAL, THEME_HOLO_DARK, or THEME_HOLO_LIGHT.
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder (Context context, int theme) Constructor using a context and theme for this builder and the AlertDialog it creates. The actual theme that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants AlertDialog.THEME_TRADITIONAL, AlertDialog.THEME_HOLO_DARK, or AlertDialog.THEME_HOLO_LIGHT.
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnCancelListener (DialogInterface.OnCancelListener onCancelListener) Sets the callback that will be called if the dialog is canceled. Even in a cancelable dialog, the dialog may be dismissed for reasons other than being canceled or one of the supplied choices being selected. If you are interested in listening for all cases where the dialog is dismissed and not just when it is canceled, see setOnDismissListener. Returns This Builder object to allow for chaining of calls to set methods See Also setCancelable(boolean) setOnDismissListener(android.content.DialogInterface.OnDismissListener)
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener) Sets a listener to be invoked when an item in the list is selected. Parameters listener The listener to be invoked. Returns This Builder object to allow for chaining of calls to set methods See Also setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setView (View view) Set a custom view to be the contents of the Dialog. If the supplied view is an instance of a ListView the light background will be used. Parameters view The view to use as the contents of the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog protected void onCreate (Bundle savedInstanceState) Similar to onCreate(Bundle), you should initialize your dialog in this method, including calling setContentView(View). Parameters savedInstanceState If this dialog is being reinitalized after a the hosting activity was previously shut down, holds the result from the most recent call to onSaveInstanceState(), or null if this is the first time.
	7:	android.app.AlertDialog.Builder public AlertDialog create () Creates a AlertDialog with the arguments supplied to this builder. It does not show() the dialog. This allows the user to do any extra processing before displaying the dialog. Use show() if you don't have any other processing to do and want this to be created and displayed.
	8:	android.app.AlertDialog.Builder public Context getContext () Returns a Context with the appropriate theme for dialogs created by this Builder. Applications should use this Context for obtaining LayoutInflaters for inflating views that will be used in the resulting dialogs, as it will cause views to be inflated with the correct theme. Returns A Context for built Dialogs.
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters items the items to be displayed. checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
setImage
Sets the Image used in the Alert
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder setIcon (Drawable icon) Set the Drawable to be used in the title. Returns This Builder object to allow for chaining of calls to set methods
	1:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setTitle (CharSequence title) Set the title displayed in the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setTitle (int titleId) Set the title using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog public void setView (View view) Set the view to display in that dialog.
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setIcon (int iconId) Set the resource id of the Drawable to be used in the title. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder setCustomTitle (View customTitleView) Set the title using the custom view customTitleView. The methods setTitle(int) and setIcon(int) should be sufficient for most titles, but this is provided if the title needs more customization. Using this will replace the title and icon set via the other methods. Parameters customTitleView The custom view to use as the title. Returns This Builder object to allow for chaining of calls to set methods
	8:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo Returns This Builder object to allow for chaining of calls to set methods
setIndicator
Sets an activity indicator on this Alert
	0:	android.app.AlertDialog.Builder public AlertDialog.Builder setIcon (Drawable icon) Set the Drawable to be used in the title. Returns This Builder object to allow for chaining of calls to set methods
	1:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder setTitle (CharSequence title) Set the title displayed in the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setTitle (int titleId) Set the title using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog public void setView (View view) Set the view to display in that dialog.
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setIcon (int iconId) Set the resource id of the Drawable to be used in the title. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog.Builder public AlertDialog.Builder setCustomTitle (View customTitleView) Set the title using the custom view customTitleView. The methods setTitle(int) and setIcon(int) should be sufficient for most titles, but this is provided if the title needs more customization. Using this will replace the title and icon set via the other methods. Parameters customTitleView The custom view to use as the title. Returns This Builder object to allow for chaining of calls to set methods
	8:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setItems (int itemsId, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type i.e. R.array.foo Returns This Builder object to allow for chaining of calls to set methods
getIndicator
Gets the activity indicator for this Alert
	0:	android.app.AlertDialog public void setCustomTitle (View customTitleView) See Also setCustomTitle(View)
	1:	android.app.AlertDialog protected AlertDialog (Context context, int theme) Construct an AlertDialog that uses an explicit theme. The actual style that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants THEME_TRADITIONAL, THEME_HOLO_DARK, or THEME_HOLO_LIGHT.
	2:	android.app.AlertDialog.Builder public AlertDialog.Builder (Context context, int theme) Constructor using a context and theme for this builder and the AlertDialog it creates. The actual theme that an AlertDialog uses is a private implementation, however you can here supply either the name of an attribute in the theme from which to get the dialog's style (such as alertDialogTheme or one of the constants AlertDialog.THEME_TRADITIONAL, AlertDialog.THEME_HOLO_DARK, or AlertDialog.THEME_HOLO_LIGHT.
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnCancelListener (DialogInterface.OnCancelListener onCancelListener) Sets the callback that will be called if the dialog is canceled. Even in a cancelable dialog, the dialog may be dismissed for reasons other than being canceled or one of the supplied choices being selected. If you are interested in listening for all cases where the dialog is dismissed and not just when it is canceled, see setOnDismissListener. Returns This Builder object to allow for chaining of calls to set methods See Also setCancelable(boolean) setOnDismissListener(android.content.DialogInterface.OnDismissListener)
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setOnItemSelectedListener (AdapterView.OnItemSelectedListener listener) Sets a listener to be invoked when an item in the list is selected. Parameters listener The listener to be invoked. Returns This Builder object to allow for chaining of calls to set methods See Also setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setView (View view) Set a custom view to be the contents of the Dialog. If the supplied view is an instance of a ListView the light background will be used. Parameters view The view to use as the contents of the Dialog. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog protected void onCreate (Bundle savedInstanceState) Similar to onCreate(Bundle), you should initialize your dialog in this method, including calling setContentView(View). Parameters savedInstanceState If this dialog is being reinitalized after a the hosting activity was previously shut down, holds the result from the most recent call to onSaveInstanceState(), or null if this is the first time.
	7:	android.app.AlertDialog.Builder public AlertDialog create () Creates a AlertDialog with the arguments supplied to this builder. It does not show() the dialog. This allows the user to do any extra processing before displaying the dialog. Use show() if you don't have any other processing to do and want this to be created and displayed.
	8:	android.app.AlertDialog.Builder public Context getContext () Returns a Context with the appropriate theme for dialogs created by this Builder. Applications should use this Context for obtaining LayoutInflaters for inflating views that will be used in the resulting dialogs, as it will cause views to be inflated with the correct theme. Returns A Context for built Dialogs.
	9:	android.app.AlertDialog.Builder public AlertDialog.Builder setSingleChoiceItems (CharSequence[] items, int checkedItem, DialogInterface.OnClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for the checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters items the items to be displayed. checkedItem specifies which item is checked. If -1 no items are checked. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
addCommand
Similar to Displayable
	0:	android.app.AlertDialog public void setView (View view) Set the view to display in that dialog.
	1:	android.app.AlertDialog.Builder public AlertDialog show () Creates a AlertDialog with the arguments supplied to this builder and show()'s the dialog.
	2:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog public void setView (View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) Set the view to display in that dialog, specifying the spacing to appear around that view. Parameters view The view to show in the content area of the dialog viewSpacingLeft Extra space to appear to the left of view viewSpacingTop Extra space to appear above view viewSpacingRight Extra space to appear to the right of view viewSpacingBottom Extra space to appear below view
	6:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	7:	android.app.AlertDialog public void setButton (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 1 of the dialog is pressed. Parameters text The text to display in button 1. listener The DialogInterface.OnClickListener to use.
	8:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, Message msg) Set a message to be sent when a button is pressed. Parameters whichButton Which button to set the message for, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. msg The Message to be sent when clicked.
	9:	android.app.AlertDialog public void setButton2 (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_NEGATIVE Set a listener to be invoked when button 2 of the dialog is pressed. Parameters text The text to display in button 2. listener The DialogInterface.OnClickListener to use.
removeCommand
Similar to Displayable
	0:	android.app.AlertDialog public void setView (View view) Set the view to display in that dialog.
	1:	android.app.AlertDialog.Builder public AlertDialog show () Creates a AlertDialog with the arguments supplied to this builder and show()'s the dialog.
	2:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog public void setView (View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) Set the view to display in that dialog, specifying the spacing to appear around that view. Parameters view The view to show in the content area of the dialog viewSpacingLeft Extra space to appear to the left of view viewSpacingTop Extra space to appear above view viewSpacingRight Extra space to appear to the right of view viewSpacingBottom Extra space to appear below view
	6:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	7:	android.app.AlertDialog public void setButton (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 1 of the dialog is pressed. Parameters text The text to display in button 1. listener The DialogInterface.OnClickListener to use.
	8:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, Message msg) Set a message to be sent when a button is pressed. Parameters whichButton Which button to set the message for, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. msg The Message to be sent when clicked.
	9:	android.app.AlertDialog public void setButton2 (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_NEGATIVE Set a listener to be invoked when button 2 of the dialog is pressed. Parameters text The text to display in button 2. listener The DialogInterface.OnClickListener to use.
setCommandListener
The same as Displayable
	0:	android.app.AlertDialog public void setView (View view) Set the view to display in that dialog.
	1:	android.app.AlertDialog.Builder public AlertDialog show () Creates a AlertDialog with the arguments supplied to this builder and show()'s the dialog.
	2:	android.app.AlertDialog public void setTitle (CharSequence title) Set the title text for this dialog's window. Parameters title The new text to display in the title.
	3:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (CharSequence message) Set the message to display. Returns This Builder object to allow for chaining of calls to set methods
	4:	android.app.AlertDialog.Builder public AlertDialog.Builder setMessage (int messageId) Set the message to display using the given resource id. Returns This Builder object to allow for chaining of calls to set methods
	5:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters items the text of the items to be displayed in the list. checkedItems specifies which items are checked. It should be null in which case no items are checked. If non null it must be exactly the same length as the array of items. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	6:	android.app.AlertDialog.Builder public AlertDialog.Builder setMultiChoiceItems (int itemsId, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener) Set a list of items to be displayed in the dialog as the content, you will be notified of the selected item via the supplied listener. This should be an array type, e.g. R.array.foo. The list will have a check mark displayed to the right of the text for each checked item. Clicking on an item in the list will not dismiss the dialog. Clicking on a button will dismiss the dialog. Parameters itemsId the resource id of an array i.e. R.array.foo checkedItems specifies which items are checked. It should be null in which case no items are checked. If non null it must be exactly the same length as the array of items. listener notified when an item on the list is clicked. The dialog will not be dismissed when an item is clicked. It will only be dismissed if clicked on a button, if no buttons are supplied it's up to the user to dismiss the dialog. Returns This Builder object to allow for chaining of calls to set methods
	7:	android.app.AlertDialog public void setView (View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) Set the view to display in that dialog, specifying the spacing to appear around that view. Parameters view The view to show in the content area of the dialog viewSpacingLeft Extra space to appear to the left of view viewSpacingTop Extra space to appear above view viewSpacingRight Extra space to appear to the right of view viewSpacingBottom Extra space to appear below view
	8:	android.app.AlertDialog public void setButton (int whichButton, CharSequence text, DialogInterface.OnClickListener listener) Set a listener to be invoked when the positive button of the dialog is pressed. Parameters whichButton Which button to set the listener on, can be one of BUTTON_POSITIVE, BUTTON_NEGATIVE, or BUTTON_NEUTRAL text The text to display in positive button. listener The DialogInterface.OnClickListener to use.
	9:	android.app.AlertDialog public void setButton (CharSequence text, DialogInterface.OnClickListener listener) This method was deprecated in API level 3. Use setButton(int, CharSequence, android.content.DialogInterface.OnClickListener) with BUTTON_POSITIVE Set a listener to be invoked when button 1 of the dialog is pressed. Parameters text The text to display in button 1. listener The DialogInterface.OnClickListener to use.
