%!PS-Adobe-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: APISIM Draft.dvi
%%CreationDate: Fri Mar  6 18:37:50 2015
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusSanL-Bold NimbusRomNo9L-Regu CMSY8 CMSY6
%%+ NimbusSanL-Regu NimbusRomNo9L-Medi NimbusRomNo9L-ReguItal
%%+ NimbusMonL-Regu CMSY9 CMMI9 CMR9 CMMI6
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/texbin/dvips -o "APISIM Draft.ps"
%+ "APISIM Draft.dvi"
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.03.06:1837
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5858EC32B3B2E79D42750657977F
ACDD2EE5A7C9320D907438DBA63AA05ED410FC7000F53549091BE71BE45DA4AB
A315F95B724A60F17C70833E889CFE7EA206A7ABC4393CB6EF47BE3700BA5638
6831391809EF8384AEA8C22735E8062A9F9101ADD125A321FB65399CBCD9C9E6
0F46FBF271B2B1EC80832CC054BAB5CA80D4561DA0A380D56D5CB3D90AE89A19
48CD824EB1E7AC6127A6DBA3E8EA40F00ADD89749D77EC0EEBE26FD6EA5D8CCE
F7239681B3D94898236AE92FF3912E0AFE84B6C7E08134C158B640B4AECAB5F2
A90028E67D33DF31B461A2846F83D90979BB22618E2A17C5D159FB59D5177E12
EDF1320F596E7A4C379329ADB367F92BF2869A9A97398E0C20F5F017CA9DB7BA
B3BAB72B87A7B6BF4FEBD03132F9075C271F2054078396DF8403DC91461325F6
12CF1421F3099CCD799C2C099492C4F071336D985C0C360B2F5A5877FD00B6F9
2E5911DDDFB31D17A60124EE8DA6CBDA94196D7ED42804610E4F730DAF2F2D5A
B767C320C62543E26534314FACAE006BA2064623902C8AC479EEEBB609E8C3E4
1516CE412CB410BD026231E22A9CD0F664D769E4E45CBB75B7341F06D8E37285
BEAA9AB71AABE3CBFE5A348681AA246047CA29CA6B442FEADE254C7582D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95C575EDAAF9896D6C10980A09DB34E
084C8A754E31B618C6991BAA856CB86877044E10C2F189B284E3195A2DB6B910
2574E2461D2FAE65B7321C0093A2A34996C0B77123503E9EDC623DD02C44FB76
3C550840BDF969582D226510EBF89944E59684EB2E2C463E69702266FBCF8D1D
4C0BE400495E227B9CB21C8086F328782CA7294DCF3ECDC1A62714143A4C1B98
E5DE1DD554FBA60571188A58F0354A6B9EF580689B78A0C8515CA05A35832616
7E0A90F68F3C306AB60AAB20872FB167673F41E8E87FF0111F579CBD0DA68B56
3E35D2EBF9F28B104082E36187373EFC7A33F62D3FE4A390B63A76E9B2531871
6BD59861F51B561DCC115192A6FC22D15A5AF03BA09CDFA66B660CF4288E9D79
26E797256659B0FF64BB5D900990C3CB588E1E18810BCB009A91E5F4F8D9DB1A
F2A063BDABD9C3332F4BDB701BB94B4FD24570B440AE74B8D924E48E7C2DEFB0
53A19E5B4DF39ABF4F6FC6160B5FCCA00608422A3091CD03E726B1EA1D203B3F
C44173460B490498EDA3121881EBD21CB5B571D21A6228CC0A1B035EBE97F26B
0B58179BD22AC950EC3A98458051A874297CD6BFE731C5B413819503111F1F6E
EBFB5628C955F5FCAED76F2402CE351F77E471D1C9821DAD627FF25131590577
5FF9335DD28D85A11BF155765632B34A3AA1DF9C01134BD8FE927E0064319951
E2C1D374C9ACFC30932712A5C3E0FE3C7E355E3356E9135A143F1B4E2738E208
8F44633DD9300BAFC770625A64B2BD20D4F672701310E5D1D5B2DD502802539A
65344601924C473B7618F9B87BF6EB49474FE62891097B9B381DFC9DD22F6CEB
340EFD950B74E614A2908EEA7B0D395E15943D0A9072E2C0E6C91D9141C84281
6A59F02111333723DB78C2C287675D73152EE3C63397F5EA6203C707568137E0
12438B86EAD16D71A0A56D00E6ACE9D80AFF646B05D829DCF08DCE2FED1A17D3
83A7C9E7C2A5CAEB38BDA802E6696BAB17A5D1E5D6C51B6371C642D5588A2945
1F3C8B0CD56806531579F7C0D10A9FBE254EA910522D955C86DDD693B8660BBD
17B2B23FEA57AF15B1720E42C6DE537074C071C50C114AC54C45BA2FEE00D13A
2573BB9243648A1BE2569CF68FF78E4CACACDB34DAD918A30005C31F17781633
6B74AF8B9931BEC0C1892780020C1A92470E3AD7F1BB6EF26C835F13A9C56DED
51DF4A7847C993B88B9FDA9A8955D8BDBF6BA773D06645E292CE26D9DF4BBD4F
3D20F52161853827837C837F33425990818B958ADCC3AE79B5791FF04DAA32FE
54050AA9D34606F16C7763DE770CC33C9ACB60E5354D5A27A687CA6E0FD74A4B
5CFFEADF6AD0BA87B906C09201FF65CE6C3F620BBFAACCBE54DA884B87E906B5
F5285D3841ECF78F0A1EE4A80724DA3A4FD49FFBAA66BE3402A2480A6F8FC164
343A369E2B8947FD5F58A4697234C742685421CE3D57398C5ED6F6B049FDF39F
6870236751D9EF2210E680B4D8A6DAAB758BD7FA7DA9680604E5BF85D1826611
2CA08E8922A1D46AC853F4BDCA37F7FE80D2D27854012E4A8F70BD854EA4C189
EA6939096B56168AEB971AAAFE1BCA667137A76761CBA2FBFFCEAFE3E98D5590
DB3DBC44B3F9D4EF0419CAE23086898BB25A222EEA19C1A760389672933EA7C2
8B31025619BD108B79D51D54E23F401F42165F0D513BB2409CE66BA3E83FC000
4372873EB8B4405A8F5BD88CC2F21D2D60FA4024707869C5FD40D94028ED13B2
5762CC7924D100D3CE0DD32CFCA124EC1FCE4CCE8C137070A18F05CD73809449
BCDEB0AC24DCF63679D46AA8B3A4A5D0DBFA9342716619CD3683DFA7A9D6683E
5A7A03DDB47833FDFF8935F2F004F58EDE6447ADCE4FDA1B734C75C52D16C406
9428CDF68855946014584F7FE49B03F896E0054CFFFF5DA4728BF4CE1D892052
701B48B81F58F5EA344E8EBFE13BAA70CB43CE4A979D8225ED78417648672E61
07EB7B31F81CF52B4136288200E640654E83534EADF05301FAF2F3A859772C3A
545FC20429119FF00C259AA582AF4E3CDE1C99769F4E433D9B178EDCECF142AD
FFAA6DA004A90F53E70048AA8D15A26BFCF7B02ED70BC262D165E99F87CA7424
0EB98F3D7FC0D4926AE43C8D322BB9ECA24A4C45F7DBB0FEAA9A900E3521D6B3
87B52A30ACB29C914B06793F19A1EFBE3BE7D0B8E20CAD99D292C315B12376D5
655121189A833132715762CA7118685814F71AAA08B89E466C7468BCA01BD98B
63EC7CC3AC41DD06C5BBDA86227AFCC1F7796B5F878946C135BFA75A98DB1B57
0F38C49770AE23986FFAEDBF6644DF58A252C29AC821F4584B96B5DDAFA9B3A1
AA0EF6D17FC1E75916753BC8C799497E1279EC783EA86DF307CD54B58C2B3EBB
FD722006D127834B089670E5F1E7BA8BC4A0F6181BB4EFBB8F99E4475181449F
2FCB255DA4233F7AB097EF0108BA3FC12CDA0618870EACB9FE4195DFAB182242
BAE0956D09E388D10DA2F940186E25C9926886E9806C70105DC75259FB1E5DA2
675E4E114F84862E6B822A10A9D364B1CD13DCA3D385B83499C715ECD7598766
B215910F002358D592FC36D0BD482EE9CC338378EA1566839526A5783F250818
078B97D73B1D62A1AAD3D5A9753BFEF23F7B3E6D5BD318C463AA04490B9063A0
E83E3E68109B182720D2B1C13B498F8F495661C0F4E6455B96A6A92FF806F1CB
3B1C6EAC82D9A687B83C572C42DF22BEAE31D1239719186F14EF637FE4E7C7B1
FE8F4F1BD8367D76D467BE95C394A818198D922BCAEEEE371FE17E396B27CEC5
F0554778587FC7D78ACDF317A8EFDFC82C2F57B6411B3AB68F96E3E7CD321A6D
4783435056AB5A0095726435BE6885BF2784FB2CBEFFC0F8248DCD594D34B21C
98E67DE50B6876C3D6D4D4CA7CE0B9013EBE754B104DCFC0719A10CDD9985E19
2CDF4E88876C2DD4E79E23AFA70AB5B4758AF32EE87B8415B881AC15C5C3E1BC
D17A5B961EFB3A8DC987DEDED6F28A240D66F004AD05CE1C551E29B45668DB2B
305C9B1AF5CD5388A0802D80F18E0F4BC8065BAF393FFAB9A4D674312C2033D2
7C78B5E9461FB09B9B2CAAAB70CEB3AFA574C89BC620328211C85656F63A8DDD
97C827297327B7980C2FE0ACB1C34866AA3C5D7408E257EBA3C53DE8338BDF96
CB7BA55FE31BDDBF7807148C0A132BDBBE8A2C21A23E11889DA13E429914F7F5
7132936359A0CC65E5993CAF52902F76F75D6CB46DD20A3C0BE80D45F2C746BF
236733462080FBDC8C5C1DBE9781F45ABA74AF8033A6EF2BDB16F7B0930D6B6E
7CA7FAC8CFB2DFAB8C063D961077585D24E8FBB5E0B0BEE9C4509B23361DD06A
DD25767833B9A770780B311F608CAE7ADDE000297A2672211F0DE8CF7F5FBC62
78FABA25D035FE3A7CC3A4743C0EFE1C4A5E9CADF1E05BC7982648D5C9FB2992
4A9EE1570BA2AB068CCE168552299361D62A2BC2C0DA48EE94D1CEDF1E2D29BB
43864AB5B770A14C98A432AB76C17998904F052A50EF845100533BA5CFB24C84
DA53581EC4F2201CA9FDAE76EF365515188ACE4CFC939AD6D193413CA7EE225B
0137F4637F09952213BE725CC7AEC579B2FE85F7C6AF18D70C4FDA0557567E64
D430F09ACA7BF28984977BA0F5849A5A86729D5640BBE4C30B17AB03262A02BD
8EE077EAD7FDAEFD37AF16007D83714ACA07FCF882ADC4792583AABB279579DF
6741F637CDF8598FB5827528771444B0AA82DD5E00E70EDEFA7405A1D8A7797B
EF021A53BA68C7FF6780C94F1393D1745AB1FD7C728C6112766A3C2E21DFF002
9E45A5C5668F8B084F22CD6A6CFB056CF0F402A73B2C02118259352EFF6D680B
877CE3024C37D532C186F3D4A97603704CC0DDB25CAC00AEB4CF601F6FB45655
8939AB962CB9E16A2400938D226056535EBE5707CF0A8678B54E6E3A103B2EFF
0BB7306D7C7C3F523B2AEC267A5F1E3F99208D8EC9AB27D658C26F635C2984AB
5A4D214768C6DC775BCC616838159AA10D5BD93CFC8B2D836EAE5ED480FB6DDB
24253A62A1B798BFA51B068B6888B76D2233B6FB11794F166254CB3AC8CFB650
429866DBEB8D09E6D03889899A4E8BFC9A855EA4660F928D0AAE8247EEC1668C
8E798398D53E52A5684CAA59C47CB38C8F1009A8AA12A269A587593874C2DC78
0BA989078910F3D70211147751E9F7264D6E64F1B05410ED3427BB7D0704443E
F2BAEB0FB9E3F1C1C14B178E716FEB4644240447A3F02211350E36E1A586A042
9AB336C6B44C0D2977294E704E8695B6DAF079BCA033B6BD3485EB7A78582FB9
373716136C63EADBAB3A2577738F553F81135829F9118F4BFE20CD51190BD7C5
17035EBE97F26B0B58973EA9B5E0D111D9EACF2FA54B223C4F40C139AB891A41
C7D5BA5338BFD58090EA727C3FD9D0C0217C05798787881D07CEFE019518CCDD
A7AD72305F06A98717CDA80C5DAAAFC50E3C6D78D2B5D851BEEC46731A6C29ED
DDCB9089DE5CC2DDB696D3B7DE3B67F066527AE22CC1AE6285DD1AD42E0809EE
65812268D28E7105859262E9368A3AA7FD0207D47DE5EA5591927F5E568386D3
A61FCBE872945A272C75384BE1E85B26AA094704715F1957DE37A2FDE2577BA3
85000D0708FC918D52360CDA828CEDD17CB7D625155CEB6931A29025B44EC8FC
3678FA08027B20FB9649D07F01484F2FD2E1746F290E32434FCD4D15ACF0708B
EE3FE9948D3AE141749B47810558D71D592735C1C86EE375BE7413B2CF462660
0B115CD043EDE5612AB895CEE0909DA8D165408CD5C4C34114EE4D7FAB4C37B6
A31CB829C4BAB2DD04B1A7097DEC24C6429C13482667116522F94EDC99DE551C
A693362BE4D277E12829BC466E13D09841B5D9AF504BE4EA59E9C2459EEA5AC2
C678E3FA30CDFC5AB855D56C1AD8374F9769A6B575A1DEE5AAAAB4F716DCEBE0
0FAB8B0B5522294CE3164F8446679FCC7AFF5BF49062CEA58F5C661A895AE753
8891536066F8416FF5E357FC34CC34D6B68ABE2FB2C540A7123BBF90D2671F65
90515B96CDD1BD2C1396BC15503CAA4CCD3CE28E0361801BDC5DA98887B2C39D
B84A0A4DE7859C7DA394ACC497641ECE12AD8A7D62AC5F8E6BDA0577FE64D581
35390A37A1570CB25B23B747B236F3F2606A3FF6E487A78069A068E7AF13A8E9
31545D422493C3E2B5187E26E369F5367687A52D55B1636092FD7EFE7D9BDC28
7FA97D0495E28CC1A5F4C1B37022E32CC045B04A3609BF4B15DC990DAC03884E
79C0D930DE7C4FEC7D244AB3CA449709DA84D1B70D330D4DDD264FD3C7453EA2
92BBC6F33628CE825E163FEA3BE751DD3859C99C38A5817C8C965A593B9D9DBC
5013FB08C673603BC3946900C72DF7CF454503703E08CFF94634679185DD1260
C67D7A9BFC8533FDC27952B08A5ADA04C2768733AAABB6C688F7147D4E7AA08F
1234BEBB4632F4D7EFAFC22A1E7A61DB977EC7BDC3071EA75A22F913E9DA2E06
606371C208D829A6345C5C8E2C5F4107A2A386202C75B3783E0CC6A59CA28838
0AE475674C4F5BF3AF8E938BC8FE2375FF0822C11CAB80915AD23EC75C757534
D4978241ED05052D3576D758319A1EFCD9E99ACF4AEF883D0821A1299BF28DF1
40913D78437FD17519C05FD39DF8E81212DD08638A4D291567D081D4F769B5CD
39E194189E9D5FB2A75DD37A909F53C828A653E838F10B1247010D307D6AFAC1
79F40F6471526D408712B81F76E0E3C276E3A5117350E877FFF97EAE242EFCE7
A6152983F1E3EF18481EAF1EFEDA0068BCBDB28A7FC7DF204E0D2BCAA3192027
1BE74A082ACB55C3009CDCFA0FB2E495E6C242EA7B5C525587613D335148791C
6FB5E8249B918E8AE8B2EF2E39529212B65E7565AC5AF02035E98534BF18BD55
58F69C9F18514A8A08226D2D2DE5ABA373F451FC750AAE02234D73D2DC0AFA1E
08FF5177BB228E38458C0EA72092F5C9AA6CC5FF21FD24A9CF08ADD3D775FE03
4A066B310E667ABC282727E875D95DEF4D8ABCD36B3EDE8BB1E0AE204BCE84ED
8B415E0468EF5A1CB64F0D1582A8AC0CB97B871A2136FFA224C9813C036CEED4
DB0F1AE8C44FE31CEE80C0D8954150DB3E2C7FAB2364374010FDE34C570D7BE7
6A496A58242F51E7321380C9BF8669C316D861B0E313E938FCB34F3F04CF54BF
FA60E26721A2FABEAACFD84E38E27654D2ED5CE0BABB021E47C6DA9DBF0F87E5
05AC254C67BE72449C4E84631B399EB5D3E39F47F7C8E1772E47B760D54DE21E
57537020B189E7578639DF522F1AC0475C65652746BC8DA60831809F86FC2760
07573528C77340DDC58305C150D5D04059873DE125ADE45D605F1D40488CCBDC
A11D1C9588E23F2B40F48823DE6A7971F8773B7D9BA1FC48995AFC745BB441F1
4796F1EDE6041ABA9018A36364CE91AA02E70FD2FCE87B674B174DC6CF1ED0FA
43374E288DC93DA75F4423EDF1E58AF26122C2D5EC52C6DD33357144C6B669D3
FCC4EDD356EF78C81613674218FEE759760BCF5D51528427C96D25748E29D08A
AB4368587AFE128C225F81279AC005E6CF99298ED30A3BFF8285E9D1F7ED8F91
31DB46B6895CE1532562F7E154BA06B6B658C2D8731C6B4659648314E933FB78
236B0C72692843421D5F26AE3ECE54A7BCF263A412B693CFE2209BE7062DCA91
768C2C9CB6EE2741F28F26C0F7CFB1047B9808E7996210F99DE8AECA2629CB78
CD324F756E13FD3D46A62BA1371F2F641B71F07F91A7DC0D09301E4AED065383
AA018EC30B07BAFC346A50372C5821C8961F917288B48033FFC6A43D416C3F0C
CEEE8F5800DC286E322EF470FF242BFC7625755B00BC368EE42A2F95E2C15CB2
473F0B7474DA665DF36A953D863F6023DC689AD7CB4713031E62765056AC9A46
3ED50E0DE0D64B46A66C7EE2381E5447FBF7862A48766064D1699CDAC675F27B
3EAB79866E48F8DDA76AF6CDB30D579DE6823DA18F203E0DBBCC95BC4501972A
82A28C16E4A73A5DE50A3C4F614502E0A0F410164E36CE561E5C0AA6D8C5661F
FF0D4E161B925CBCE8D3FDFA0E6C9A8F13D6EB290DE077DC8C1078FFABDC6778
4C367CB7DDF90F0B10B975B3C33D66DCCF26D4DFBE5464B96C81A85C09163A6B
5040DDEE2AA44362A10F1795E0780C412A606D33C0739B8F29CD99C982B6A384
D3544080599C565CAEA48390E9774D66DD377E6AEACC7FEB7F644ECC45B14F0E
4BB9DBB7294A9FAFFB94207564B49B7607279862E4198D55D731263728B86284
79A237B14E0156778317E30A3D88B9130151535BCE75C9E0989A0590521E3C07
D6484024EC2627C8A75DD7D3EA9800F9797A4B5E37A5157273D86FD65663DA0E
88F23A2E6E8B33AC18EB70C5077E6038849F220A096D9B3D28A4504DA6E68C2A
018FAA8C574919B4EB3FDEB98FD9739D1E3B412BBFE13F408576C8A8863BD543
A1D9E25F20B94555CFD83F13083878FC934D950ABFAB4992345DC05B784621EC
E12479B01052BE1A88C02DC0D7525830D80FE052C43FC48E5133165EE807BC07
FAB3F8E726A52E97733EC4779351D640B16226B9A6275EA1B6D2664A83A2078F
26184C6D4937B77D022AFDE291956361CD8206B95ADD734EBCE007181B65FA82
D22266532F873C66A260C3368E7D23352BD8E943FB7BCFDA4B9804B40A5F698F
11E8786F8BBD02DC11D208D4DAD418461F480307AD5A8FFE7A20698CCAFF1FA2
151081F2BCC885BF97346B111AAD8D130C53469584AE9A37142A3E14CE5AE65A
2C788223349D571711DB3D81E0400F776034AA7370C867BDF8F8C8588BF075BA
4DA424125D1735CD4FDBF371A8F2277E803A310E5D74823D830A3963A645E243
1396E267DA4FEF836742DD6D99A97EDB7F48B9635D0FED665B41D30A61735659
E226564CAE0FA1DCAE4178C4470A6EEE69EBAB9E07186C75084290966E92B5F7
D576C3820F3CE96DE2C464B5A492253F292C2D8748AA816D4B955D889B79BFBC
1BFC7037C629831511487AA6CDA2E83BEB468EAA8FAF9F49F8388082405D6FC5
14EBE8C580C44EC9A7A30044D8D5FC491AD6C66659BAB79F19F2E920E628E582
E2C026DF0705084D45B94B823421903A5F77CAD15F41F7AA0AEDC19569A3923A
A0ABE8AB685C75E4744089EE8FC90F9D4EF9800E546835F9EBF4B1C516493669
2C740D66ABF2E0691B5AC4BF2D389770ACB5A7642DE59921CD09B4F17FF2B810
31EE294FE803EEBB227F65AF7099CF096E78FD8F61E5A0985FD14012C364CA52
111AB12BC2D112DB8F977094E5BA04FB75B3981AF56632228C0A67BA040AF5D4
0BE230F19D6ABBAFBCAD6424D1CB871274D49E54F0C959724CF867108079C212
433800FE7EB884991D52E6D3CA7A954ED0C6545B79359A9F5797861655E86502
953358B0B0A1C419AF62011C5203418C2A9DC4163ABA86D79DD025C50486A268
4A7E60D9990A2062A57BB60AC147E09641C53A94C45174899AB3A9D824CE570B
02C037AA7944AB0472007D1FC5978132A8D4E9ECB3F9E2D44FAEB4AFAF1AC8FC
2CC8723542D52151B2F874A2E242333334A8479BCAEB272DDD92972ED8E7789E
F9899D356C365DC3211967EEE2D1AC50EAB6A0858F98FA558F7C2AF7224CFDAC
F1D190103A1952AC16E3CCA2CD03DD66AD9C72207BC789EEC011E3B29A07F16C
FCD9CF65ABB94A8D3809A6BD6549A52A6AE38C80AFB8C867AF2D6B5488F19E16
8DCB9A85A656F04742245DE9D36F05E1047C092742E9FC445974401355257EA2
A54732BE0FCB9BFF904E5DA8FECDE312F76B3A98D23146ECE5BA5830B9E88A40
3093BAF62D28C39E8FA4E174E10AE810F4C10554FD46572566CCBA2B2B0DFA26
DF487B9900FE186A75B26324CFE84BB798EA96A81F4953770C2F91D082AAD6EB
A79E856FC972175DFF9C18047663F09E3088ED3A0CEBB858C0DD32C030954B83
A6482186C176BDC96FC066A0482E5D677499621A1AB934568B5A53E7B2372ADD
D172ACF30CDF1FE26C575A7B490B0D2AFAFD1083BE5BC20F3FA5D4A0DFE26443
8D44E592A66716517047DB487BB3C458A06503E28E1335FD9D0A8E5865458596
CCE94F08B817AEC750B6193547DEB0F702303F03FBC7033B87072A685E6C41EE
9C9027067DFB66F51581C9885CA8A03167DA7E1F3E2C76D4ADB2D5A07AEE0F75
ADE0F8A9675727DF571C2D1BE76D2993A435D35F7D26988FB8219E306A356470
6B312138FE70396D1106B232D1EA5C25ED26E7A7C7314405EC8FAE6F4535484A
8BB19F8E2AF7F751765E2EA3EBFC4D2DEB7CC2FF0348002B6C9C05180EAFDD9A
293A8E02825E8BA768CF83656DD121C92DBBF1C12E35A45BE5608B8E6D4B4DD0
34F9AB738930EB75A6BB11D73BF00E04542DE83914A33D6A64C5B1A39A73AAAD
8001ACFC1F45787AD1D1B69AC63EE2AB32A2E9C85258E1DED64B0420B52A955E
930B2593BE23566400E1B1EF4AFF99372688A46E6F73A151D5FFBC05962382B3
65E2F3DB650A94881A48CB553F7727CAB5EA16F7F6C20068856ED15BCF2FBA48
D1D93402E63A0987AAA01ADCF9B920B84E040C63C80FF50485B8949049165315
64BAB811718B49099F0359650D6CD00209EFB60C1D34A3317CC733A6E5D42CAB
2CD22107D1536C8F648CC11CC0C374854B1DC44780656709BAC904B89BD943B4
9ABF5404D111CB013C0E07D10730CBB0FB50132566D97E761A3D511CA52FDCB6
34318C2674B240151140B8F21CD3833A0B1F5ABF0D001D96ACA04E3A2FB1E37A
56D2674EF166AF7AC9F56ED6C36116384748DFE007DE4035DE610CDC4B23DAE6
DCD2625D22BEB1050F13DA1FA7997A4ECB1013F1D9C0511A8AEF46085595EC93
5C26D939B9D9A290FE9AF0EE5EC5B3BCB141F43A1D1B5C68449AAF47003F6E7B
6585E5A0466BDBC2EE50109F194CF6FEE6B0959CDB6FC055C5D6087F1FE538BA
E6B6F2583055770EFF67496C00AFD0E4B4C930798D0E2BAF9CC5380390D36BF3
1ECF83D795D880A41CF4592E6B60A8944F2F414D6447F9983F4D09F904AF6D26
E890EFF1D1139D8A35E950F4A22853DE8378B733B62ABF80CF2F289C2DE49262
FD2D8995673615DC0D9503381AC43896991C5968A0D318A9D2423389B4A97BED
DCAF02EBDE2D6F91C728F7BB071C606C0EA91BAA1AB78E1889BFE77D7DA91330
BEEC99B77B8A3A9B056B431D48BD7BFE3627EE75AE32B447AB20B0B705D93574
FCB6CD54A68A0D788BB83725D720DB67DC622AEE725ADD9C2ED70B3684A3EAA2
5F9B2C7AC5049B311F4B1442FABBB301EEBF9A9AA611233047A168FFC27B6E2F
45082C3CD8CE3BC94EDCCB1341B54716DDA9E282359D114C1015DECDE764D6A2
B3B5DF5C4E6DF5ACF320513D3154E07738A2E39D6AC9429F1A35956A6F8E8A73
57B9C86BB64C2A8D1A532A1EBD4C83EEFC201620439587FE9FFCC2F96498E061
6C674CA5960FB3DC6C0C6BB9167136A1638B15D4BC9AE7F57F252FCB0FDB3E17
9BA7B402E60BEA64C8DFF7212D71A06BD7091362875451F815FF783CDE0A5A0B
345E8350B8F483C8FE94B34A933F9098F173D8BFFFD3DB50BE815438A3C46C85
8181D2ECB82FBED648C292D1AAFF87AF82D8258EF286604FF55B23CBA363CD72
154A3962C8F500795C3711F4F992CA385179BA96D4C42B00E3643E8FA805A5C4
4F98915789CF3206362BA966DDE41AE260BDB72DD205842DE204F6FCFD26E4CF
185D28A898B0A3AA4EF3035787044466CCDBEF218B2EC89F69286CEF4CF52459
11C25C6CAA41EA82BB39152B446C6B5270B14E086217DC4B46BEAFC3B1B38F6D
0D6E11B3FE26079CBE4728D8AF02402B2FC220DB25C94A7A0A02E4EB60213246
948C3C994176F942821D2BB11EAD705A9BE41B6D51A471BB45406E339EC90324
A6667A8AB6243AD848BF0FCAB713ED3F204063E1482CD12A2418EFDCC2C95F1B
D831B4271EE2627B8204C1C7E735A3ACCB6B4062E2F220A76990C712DA41F456
B8FE6367C6C06AB90DF171E51DA84EE0AB04EE89A019EB6E6CE5C30A8F0F6355
9892CFB59A1156E4F683F252E49C557471924049B1860F032E844EAC0E22D4B4
002ACD8A06F29CDFC327F58A87186DE1B496C4C928041D1CA723188D82905575
21FE23F4830EFED86917C5CEFF9ADFD18C0FE8D4C503C2E5656DD9F88D7E5B9F
1E6134534A315CF6322F7D1A8EAF5A4816547A360841DF13A533B501A088CBFD
77C6557AA20ABC9AFACE5BA95779D124604AA59F972506BB5C18BF8300E8B9ED
08ACE959392226C2D9AF9F0DA72C4340F2E793A0ED8D143B9CB5FD8950EF78BB
34E683AA05B960B44E24AADF0A1FE48F1C79145B21EBAE680535719F209F34A9
B75C4A2F16CD8D8F60C0C70D08DD95B96AC5AF66FF278D296FB8094DF33E7E36
31228399C24BEA418AD1B5584D35A6E465424B06337662B94BE07195F10C7F10
6B1DFEBED8E93AF49B330AB3DD863F55772B714B5B05FC33F83790EC7D8A8C44
2FBA64C2F38BAA7B8BDB2FF7A6987C4179484431F2E22D36748C06636D177D65
D68A55D4FB4BF4A95D60C7F4BAA6F598CEE115C6F10AB557A620C0DC3E965DE4
A8992B409995B5EB6A885320036CE6DAFDE34697D8BE21936B812CBED8EC4CA7
A3524FA5D4C222B2F41A5B13E9BE69221DB0B0CD83DCEDA756775E9CB19FECC0
EEF805F7A0245A6AC91375AB842C43F9E09915AA863DD5FBAA569B1850139381
DCD04ED2DC8833DA78F61B61AC9877842A299A869222D13CFDF599DD43370E6F
28DB5DE10D6AD51DDD04E44AD3FD17A2C6A56854206D95098E2350C2536F1123
474D93C05C07B8689FC4885699E4BB7663571EE10EA73836F4F70EC50F43128F
4AD2EDD758AB28502665555D81CE61C00B56F28F02FB1F11D7C48435EEC06521
9421EB7055EABD746EC148159823E67B186438143235B1C08B9CB270E509091C
9F1E16BCE7D84470D35A31E800EED4DCB43B0B1969A53C181C52D9DCD913B000
A1D1C1061AE1826675A5F7CCA6B0CF962608E46B430E80F7E42578DC39AB7CAC
D7E2597786D80234B6EECC77D19077E986401DF8D23C5F27C06A63FFA27FDFE3
6BEA6C0806F9707B312F6E03DA735F5DEF3953BE0166768D7C5F5436EB4C14FC
651F7ECF01BC0546393639009DA2E8E1252074BEC77721DEEC293D636A372C49
58FDE38C043E0C6FBB910B766B0D3EE8079600E200BFCEADE1C3F126403EE435
7A42157524D54CD5913F4342D0B05283E6E7B12E72F14AA63B12703FAB13160D
F8B1FE3B4E6396246C02752FD4B73B5770AC7B546AA4550DB20C2619F6A52C17
8D7182873FD7866F5F0451AD1F3E18F8D762B37E2132A4304D8EBDF7B90241CF
D5315AAA2BF51C45816B9AC1146B6DFCAEF2EA9C48FDC5B005A8AEF9189BB946
D1A66FF7F379DAA16E2C969F199BAF6C36A53D513D9D59BFB55BF2ED11C77178
22833192525F8D011368841226C56160914266B1D28D74185B0E0FAC89BECE5A
9295D2F750BDCFCAF1E66E95CD51FD3CA7793F8CEFDF55FB7318D42CFE278CA6
866BF81718901D53F6E6B5B722072C5A99A72019D29CB845F00A177EAD188847
E1D8AADE0826ECC576FA95412E2A7FDC96BBDAF34C4254E3AE6CC6C0F7E5FEE5
45FF0E15A12C958EBBF6067C4DE5534184656D3ECACBB7E5701BB1EA4029C7C8
7BD07DC05EEDED8B45B3B08141DD5CDE391B9AA98CAA4760CF072D79559B321A
CB9B7C4A60080A4C7FC4641A4AEAFF56E9054DBC1407B202F3CD1A97952F15E0
E912CFFD9238607D2D189759BD6D49634981F74FE0DFCA2D32EBE5A63BAE828D
3411D613726DDCB9D439C140EC4426D02D9F38D9366BC725B21C8A95B9540145
8A9F79AC19997678DAA962178BD02CE5154D6E008C066BF6EB9F650931E84903
13BFC7599FDC7A3CF5B6AF26E79DF067A8443B96AD2955DD8B1A35CF423DD8F3
BECD441A5E7C3F6DC4052D3D96A3CE36F0B700EB6704E48BD3E0A0E197BF6B48
ACA8967586FC51358F47B56661DF84FCD8ADD11D3CC0C0042B48793475561AE2
718C4742058FE11B53E8B7035647C141740881202D286AFCC07C9AA58920DE54
199C17D9C926280C366E3242D2030B576F5B789958C1FCB101A40DC768D5535E
EB54678E70AFD52D5B63298817A48C200505C07E64B2D4AC6E49F04947A20814
41FBFE2F34606F9961273EB9E4CEAC29BF7CEB5D2E1A5A36B8759077F46639CC
C81EEEB84B284A923A46A31A784AA5389D701633D3C415CBC4A7D06B2DF727EA
EFB2E348375AC6348F71CDEC9B0481B44E52D0DE2FEBFDB19EB6F670BA5FDBFC
F733622660DBAB749090871FD2316356C3CF06A91C46766083CE3B98E051AD89
07FEB5565164E2568377D3C07C2F3D8288A3C4DCEEFA1F3076BB941B1832E3FD
BFA4EED20078346493080868F56A5A0BE705E9DAE32D3C3AF71DEBDFFF78EBD9
7F40F1B3C7C78221B0081DCEE066E2A0588BE7E2A7D96F6C7CF45FCB17040AAD
4A686AD5F575913E3561C72800157712E85E97349FAC7329FEE9B9D18550F87C
A64CC2F7B1F429FEA2CB9C25A332AAD6309C6170D3154153128B8CDD6F3325BF
D36CBC748ABB70F69B13BBA1A524C2F98A00DAD271E9E629110F0EBDB9187FE0
C0EA7D1C313355DCD02AA0198CD3D27338BCD81021E7A2A4339CE68279AC0C24
9F366FB11B9A9D5F4D2BBB0E78059C6AC7707364CE67E463711FE370AFE52FEE
BE91F921724FDA60B85CA27B1DE24BFDFF2F64B2F490956D2C2F296FCA34D2F2
4D7ADE6A149C050744F50A0EAA453E14075B7C0241B8F03B967091B8B375C0E7
B671FBAF0EEEA164DCCDF1827B773BBEE827230A66C08A01953E6832374052EB
784AF8A4CB6BE9F700E998E13190C92480439E5349FB0C59EE6C0AB201FD056E
BF55DF177FAF6EB082BA9E64F91A6CC65BC310644F4B5CC54754C959537D1AC0
94C5D3E8980A934F198B92F6690838F6DDD2F3868CC540CB1551171CA4E1ED5F
7A997C7065EAEAB61196E248302F5D523ACD995ABEA9E17F7FCCCF8E823D772D
D1188FC64C05C8D2CF9A832AE4DE3131510F16B157D005EC033484F94AFF0039
ED75F9771978D772107DE9C7887D5B89283B44881FF282B19EBAE8F168B52771
8004D94C6F1AEDD8306C9C581ED2570466985E3E7CC49BB4B1A47C10C3E910B5
BD6A8C5B6B57B72BE89DFAEC53D1C609D19327D37B9FCEE63714C79FE661A9F0
87AB3EFD55A9474A4ED0194D85992B0D3ACAC2F9274D1ADFC9CA8093341B8C53
DF6EDC7C66AEB9848F3A1E10DA9ADB66F04E828D323882FB9015D0528821B463
ECAA33A914868562FB908B67A6779AE707C093BCDB1A768FFA82F205410AFB39
BDE1F1D9A4DB5ADD8AE5E2E406C232A124D171C2BE7756EB0C224017E7EDE13A
399EBB0A46A719199B844F4521C755D34B4965D00F5277BF7AA1F6BADA5301A8
74D04140A8C5F965BC5E3BFF6B35252C97404E84992241B987143D82633E2AAB
A004357ADFCD101175C2B1DE05B4A25649E817F56E1415BF4F6D5FD642542115
612D6D98B66332ACCF8FFCF21439C7FB917AD5332A29EAC8D01201D855789994
F6EDE901365400628550A60B7B1BE6058A9F05F359CB44732509956B7CD09726
CB718F3DFC630A39B91FF62EA86774DD83968A2E285ACE63FCB02428C5D3D788
67572EA71506263DCEA68513E72088C745B17BE49452281EDE2B09A69AAFA947
3A9D8D8D18F93FC82314F6C1867DDDFCD945F2FECF2D4580D58B6A831E6E98B1
ED8E265020547163A416749630F3A803BFB78D484EDECE2302721C66B116FC91
0A8E2763B8A5C0A8EAE8D7906B90E30120C9AE1104A37604865252CA9D82FBC1
0A6FD16539814A32AB37C02E120339A12CC0F428E549F4D7B15DD6864D4CC975
07CCC7DE71B4368D643CB7D82B3A8F8E55675D850443A17A81F3BFCA9FC2C83B
55667900CB6290E71E0A66F60B63D3B53857785DB4448132FBA5E082A73C50AD
A015A638D63EA4F83065887E225F41538A407CE58362E121DADA8515F041ED0C
22C09FC66E2C58A5CB694336732534CF6938F90F26450BE06E3864B2FDB58FF2
7E44B49B12425FC7831B3FF7FF8D9EB38955ED8B0D261BD614F12FA7AF2513BB
FB281A8EC97FAD356E02CC50E2B164524D848EAB23585FC1479C44682EF59AE6
22D44509ABE429FA52813DDBAB905F15F22C0B30CCDE2369C2DA31FA997BD59E
01C5CFF5E3FAA816CF617D5F68B657CAEDC6C5B22FA5B26BC28BDD3DE5A29DD0
61BBA51492233216E26028C74C18B1C1BAD6D42E79B1BC44CC83658EC0E12A1F
49B901D8D1113B4BD90773F9E14AB4461A17AB11DFB34B036B7A197908ED4D50
70F920CA0C63E577224EC5F788E46EFB2E19BDD67AF0874F0CC6A513D3A6C47D
7812DCDF5C4D6C2A16124F6D3AC184BD2822D5A8FD745B439C320A151F045E07
C5D2336D9FCD4E317A141BFBC3BE5D4A6C953935008F85CDA743E00D3C5B1798
57FED990AF6200C39861717DBA8F6EB5A0607A914120DE5A2D95B1146C55765E
7131E99DC921249DAC6269F75074A85A7030E78A9998258405FDB291889C1372
3135B59D60065424FA53005D92E755233134B50060015511F52873D75BD4FEDC
2BC95E7BA9DB3F0763805556BDF996C3038AC83987228AA786E356ADFC704865
78D0DEAFC130B5A7BF799FCD29499EFB2FA914E4B4AFF7C252DDAE57325736C7
D8200A3D4BCC6F6635B53A21DC4EB88038A397EECC75972A5F6AAED1717FE00C
9096234EE83EB1D9CF05584DE15EE10E59C110EC37227F64C28E2E7F63B63258
C70ED414681D0FFCE193BA0478F55EDFE28E2019E6BCB82A6D703F71CA5732A1
F551AD6F030380824AF2984ED8C58B5CC9F001B76D541740E8519A1EB1EF3A05
1A1EBC2C38C523E2035BBB3294CF7A690EEDDF2DAF490E9E5157AFA36ED9F7A8
E5D9009D691B7BCF2F54AEC62CD2A6258F8ED801B448D7F0D0B65D64E40E60CD
23C1B7B3C6A6152F5853BED84D6C6DD16A1B225554E5E3F9E6D6626CC108C5CE
435106CB2E3EAD344059BB6344AFEF82AA2D6EAA4C2C3F91912C485C5D3CA3A5
017AADF99603CD8D011742BA164D0B26C9FECE4C8BBA29ECFAE464B628050C2B
2F7725B6292EF7694F70F1AB76D30B3740350205AC504285F1EE85EBD066704B
9E653A4C27C33BD901AF4EFF93321547EE664D9483C2F8A05E5BFDAA53846B57
BA19B9E843763785EAAB97EDBA6470C559CDC7F7DDEC619FA73F40B1715B2A67
6BF993C7970A0A8671E933757606C39CCCD0C43391482849F472A5C9423EA5D6
9CCDD51553103A1DFC01EA7D3FD229CC02BD22F9333F3CFF210B7CCF8FB55F85
C5B990FC5A8AD3CBB0CDFFCD77F82E27F65D0AA636C4860FEA1F314D5FF2891F
5AAACF544390709AAAF689DBDA6F25E502DA797A142EFB827A78F1F0364B5234
89560792DB6907BAEA7A0B6268CE24C94BAD94CD3CDE33E95F477A15A585A40D
52653A27662677C2F3090F88585A3929B4A8B05D63747A84D8A092AEA74AA09A
4FEC610AC7C95307FB9360D05D5BD9E403F23BCAC1FB7C6F42B853E39F5AC93A
F1D937C64E658C8422F5E4AEEFEFC61900A67EABAF6BC1D8AC43872A5EE4761E
90CA09B0DEDA37F9769D9E0E6574548A88AFD555C4FE6EEB265B0DCD84972053
B84A13F1B14B9F234F4BEC8375A09E39337F40ED79677FD5AC0E942220E1D946
8FAAC94A7FE2C79C51BEA7C16AC9677B8BDEF6EDA54EACFC0721D75A9928C1AF
34298C49C45F41CD9D503354C68537CF9042EAA00F19CC71A5DD56519A5BA815
11F77C2400DBE0BCCEE9806C8611721815E4569F2729A3A42EC1FDF11EC883DA
5DF6282EA1D3142292F9DEB58E85A91D17185E4495874CFED7C05171B35297C1
C2FA382BA54363EED955BE22E4D6438F5970AA0122676306DE5A64A1A0064635
17E344300AD9245939BDBBB589AF8F281287F1F21808DB8412BA8AD7F2614E0B
78462949DA67A0958E0C9F48FDE8D853318E2566890EB59518F8EA6A174CFC38
B3FE035B837A2922254801310A5AE1181660E7EC92610D9F4239FE27A8B9FAF5
55DB405B08C76B6C500D534A675AB6621AFD3E686C43ABFB6748B455FC639A74
CDEDAC97104179B3D48F3AA1BE8F7AB1DBB2D31028992CEE437743B97114CC32
90FBCD0C456F778ADBDEA2259B2FBC52122E79E0CEEC2E5AFC79DC8F3A4030DC
49E848CE8801E74A6537EAB931894995B22B79041E1FEC2F0474494721BC924A
D9A0E36CC940B42CB3B216CE9EAC9EFAB500A73DA3620694351E146052AAD265
AB1520C5546E67361202A3C45567AABEBDBF17DD2F5491559D27DD9ACFE356DD
0666914D1CC50F2AC033A7F9759BF94C66D5B41E38C59C157D3F6666003FC31C
CB2BC832B79EBE7A0D4755E7B06095437FEFB8A210F04158390D6D7333C062A6
D135C73A31F3B27CD02D3EB99F268AC62685F701F8A6D76BBF88B8BA4E8402A8
9807A17E0C34F2A365DBDEE3171B4A9CD19626237BB91E516F509D51A2462622
B57655CA9E56C6BC827DC461FF982E001C7C0D52A2AA6C140CCC2A9A95F679ED
E0FD883BCA789B125B151554C2074DFF70DE3C56BB70EE8469FA6F8F73A0EB1F
BE7B70C8CE9A5CC70EA399A75C214218488731952812BD593D14F8304011C3EB
224650B9FB58934E7855679981AF5CAF722FDB3F1FD2EDD012D6306A593BB8B2
AA02E0DA5B22A1432E6D11A0481E75C168019855D551D03A4270CD1CDB3AE007
3C753E172689604D56FB489573106FB89992B082063BF0AAEB1C80925B8F64F2
93AC397201AEC04FD2B82E0AF16A8435D22FA6C837309FC6FA3A539CCDEAACBB
9F3C76CE044CF879DAE5D37E96F058C784FB49E022871455C8221253252B9B3D
849ED1ECC23E85EECFBD650882AF0DB6E557C66E3376CC9921015B961AAEE47D
018E26BBD2C9E93537DE1ADD4B2C5711459B55594B8E9E987748795B485B1267
D0E3B6A627A1B2F883A11D3903FE3359DB732FACBA7B5CF26F8C6A61D487FDB1
A5571201B66E7F1CD04EDA2820D3F7364BCF0B174EA21D07C4D7BBA33E17988E
83DB6E9253C9B30B817F45B5417725FCA26669C757462D5D23EA6F9883D888DA
E4CE69D17F9496A7F48F6E0261FFC3998747D3C1A4AD6B66E6FD04A40B76ECFB
CAB497C585B4BF2DEB55E3DC0CB7643CA24BFA30332A075B1E3AA7E89F58B452
D09F3D445B18BD30D5CE7C72525DEAEC7BB9DE7A5877283888CAE4E30AF9699A
8D163A6C3FA6B1DA6FDDB5C84F3AD43A5E1B3046452136BC4A9D14F96694AB28
B161514827082CA941EA5070D25DBDE97CB39B5190B8571B5AEC4C491B986BB1
22C669957CC11ADE340D8548A645572A3D40A0C5DC9EA3FD7758BACDEA4679DB
E6BB21F9D54BB607BAB73B0B1046B6832103579143B102E5F7FD9B1D24282A9F
3E730B85124006B220B251F541EE15AE09078EDE9B769E922CCFC9C51D20AABD
F073A951E0198632CC739EEB8ADB0D473170D53FD53900AB70277C94216D9A95
2A7E001EE30447BB19E02540F758CA8C61F67615AFC9581CA295D84E66F6B02D
D32CAC651B0A86C5FC2899A97F5CAF6C3DD3D87BA29F54BCAEA8C7A20ABC7AB6
7511BA43CFA692E985D7CBF0BDAD1DD548928BDDB46DEF470A99EB19B0D272AF
5293F7DF5F398651A2F0F5CB4E9C7F81656D233D138087A10D0E63C5406FBA45
8CB5CD3AC5A8C731720FEE80C43A6B8A7553F271DECB19A0F533A86EBE1145D4
ACB05DC2FAFC7040F9D80C5B47AFF809754E57A7CF16BCC2F5B289715E41C6FE
43F6A1CDE374D91CD454B67871875B785F92D520E0A2EDE3815677B9244AB64A
14D553038297A0DE74E7B17E583EC473821E16FEED42B4162A6B487610EB7BCD
B14437EC3D111F41831835F9BC60B71F420C1AA95AD9D191F0E2DDE35B27432E
0D533F0029A07BA8C929E01A762EBCA122E37F752F8C0711E73A8E02FBCED3EB
AAD080DA0CD80D8DF75E29B622F0DBB1C619F5365E1975ADE9A430B40982FB2B
A3210EDADE29D28FD28B80D3BA59CBA841A2A0248C1E39AAF062A9547DD3911B
6B34602C39047FD0BA65AAFEE49DAC21A2CD12AD095E1E049F67ED46E4C61918
26182486AFA6618501FA9F9879D1794DCA7FFA47A42E196161406D6FE10D81D8
2A3803E5A83300EFF7842979D5EEEC9A5EC05FC6770EA2DC682BE583AA9CCCFD
8E11542E4FFD2F1262774E07107A57D9EA379B3B0913B1FD209F2DB0C14A1A9A
67AD38E6EED887DF75C97DBCAC69CFF47CC0BAB55E27704568CF2950F3C70488
BF4AF73074469DCACB0044473E549762B252C00A27F954C248BE4C56EBC3D4FF
3A0780189C787EE66AE855EC5584FB37F06F3044017AF093236D00C593AC5294
CD935112FC3BBEA11040E9C45EF8978CDA6BBD38975492D31E8B777620E5D067
D63D26E542004BE795EABDB3885C15887149F58C6A8F736A43BA71437DDC0474
D400AD94D321F77649A3DF723822F78946BD477DBCB7F6E354052F7812BF9638
168EFA4A9A1660313C7DA973BEBED0937432C179ACC8132DEE1CB69E416AD654
E7057B04A4AF9370E78D238832FF49C7040EED8AAAF0B5E94293722063C55596
5130FB7C2ED965870AAAFA36D321775EAAB5A32A1B268FC2EE2FB43089325FCA
A74F1729BB8E05C54EE11929442FCA481735E4C88AA802D2A379CF7B57F9540C
C98D0B9B14BC227B210575A07DF6AFAA4ECCF11BB16311FE0578E265EE37DAAC
9581EB4B4D1D9AF6E298BC51A5C02C74D67E1DDD0BFB15B0AEC86D91157D62D5
AA2A024803EF7DBD6ED4AF6CB801F4798FC6992CDFC95AC34D5A1588A3B9F1F6
5748869D6E36852F63FD3DE1E0948D3AE141749B47A6CC2F1B3F32F2CC7EDF14
13CC2CA62B83EE2847E52E4CF1A86B267733EEE15CDA5D24EC402BDFA2864F1C
35F64F3E826379E49F98A4D657900203492AB0B6FC306BDAE4469B13C027DFA4
AC4F29D4D88D997E7B186DAC22C44DAE29C260246370D81E0794A2DBC3C7637B
63EB841C468EF0FB3CBAC4829DC63BED1372FAF686AC991C55956BD0049112BE
B6679F310877AB336694378E59F7DC3B13AAD8E7D39192AF4CAF6624D6999020
E13EC3385584C81A31F60077922713FCD33B624D556CD394577402DC24D64C1C
01D44242C5C51A1F045377968CAE4188A4284B6102CD0DE83A89CB97C7465B51
5DCBF75337084816A276E1BE63F61449917397251B77F99D048AE5C46D37C3C1
DC0555B433B1F070A72A825E6A9F1631A77C8E3414C6B1F7DFFB45CDA2538850
0B2A6A8208785BE6C8E28E93C1E89D12F79413E6803D1735C824364F73E76941
0B82D698A8AC318AADD13C6A9D495FC94E0935643DB6DCCD01E054EF53A7E2A6
B3D75944D280A8CB3AA84FB057EFB55F013F2E59D09BA77EEFEDE7FF10C48E32
F13DBBBBE0828F30BF36908125183CB351FD2C58BA167E075E8561A98F9AB3E2
0F48908C99397EBC4AA53AEAF4DBDBF60C63086F5E4935235142065E3F21F91F
C007463CC7E0C529D1E45BFB8FF7F6AA7509366C66B0A4F561E73A5AC9694D47
5DB5E3CFA4938823C7F9C1B8BEC75703D15F27628EDACB994656662BC8F838E4
3EC4DFCEB19CF17CCF339070DE232D40ED8B3B0E866001A8ED3E92218936B755
77DD990D4ED8FB2965D17F1602B7C239247ED869A21B47E702B0C128CA933BF6
82A134B9A2DBC90A368B2CA3EA991DAF00F4EEC63E8BA9B7702C19435BD1ECE9
6EC13D5D41F0749B813BFC7F6F39658FCEFE9C45C81C3DC062312B84BADB489D
2FB92BC0FDC4FE6FF61693FAF103AA7DFD98FA1F351031BA6993615371F97C07
874716A61AB96B2C1FDB0D4CBD3076305489AD843373B8CF1EA3E96051E802A3
58F1472C439BB2A58F2B7EA9AD19F282F6951DB333900E5BDBB653C847796BB4
C5C95BC9E7BF5E0FA5AFB2774BC05357CDC86E601A4AFB0AB64218E615FD6316
C70A663A5060E83D0065E36DFE4EA5A0EE955F91649DFED4F63E4FF3D84DB896
149D05C9A31C17509B5699195E3251A9164A886E178DFAF0A0829375589E0743
57C23641D62B7A2EB36D0CE9FCA6A851F0A8F5FE6B43415864B06EBECB89C4BA
1139FBE5064812340F626B986FFCA61316C9A4017BC2C9869478BB6A4F334A3A
176B7420BD0E23D0B3AD4A55DB485B78BED142A3FA6ACE622EBFF358E63D3F4D
DF87E5387A3D3E8A7E13270C180A4596AB71252C18CD822A7F1A5A0C1BE8401F
BE84BBFC03C582B8FAF385269303EDEF04A56C874B3A3A3D14039B95DDF5F238
807652D5D4BB2C62C18252DF8DDA108EC53DECA8450133E8A7B28E03195B7BAB
D6F4EC8192F1F7E82EE780C1C9437EB1C9A541650242DBA66255A7788927A8E4
43C488C76A2C9E24A58A77658CCA0D4AAD44CC97B2DAF5748CC96264353CCA41
058EBAD486024DF5A3C1D3C92F992FDB3751199D3884FAF9810233B404046AC1
C775BC77AF4B6D4CA994C062997F9163CCB746D055015EAE64DFE743BEC81F8D
B4AB39E7B470BA2978156647DEA025A2BA11B0EEBD5D71B5929DF191E6E3F021
732059894E522FC5BAD9A27CF8CAA87A45022C58A1709881A42BD225D322BF31
B36E4CB24C98BF1C1D6CC83623D299D3015FC8B56F6FF15369AD537A767F7B39
04F72F172960A0DE3A47780A4BACC6FEA5C163553391C8D3B00AFC543A38EA42
2FFBAD0809DEC7D242D73F05958FF436B01AB54EE1061446DFBC9A8AADC32CAD
9BB2DA761CDEBD3C340FEBB20AF30D36AAD55E3F2398F01C4276E593D92BAE19
CDA4294AB1A8CB83018C98EC9BE9A9B33CE4334A8920F0203CBBC09191E98486
912D95BCC616E3939E87C8CEC34D94FD12E6EC17098386388678A163B9E49AFD
F57DDEE5F304F4972EED6883B22843ED2455B58AD58F4CDBDE5845D244C2A33B
93CC3A030DFA22272BA81ABD5C5C9CF29730897101921F48C6B248ACF5F76106
7B1A71343DACC41C1E922F424626E0C80F0EA921F31A8168F86B7326ACEB4E1B
89ABC481258020594D448878AA5EA219FCDEB86F1ABAD084940C99E3313678AE
96CDE520108930996A4BBF608DCE65701FC39904C019BFD53F8E76251A55C166
C03BD48038DC921DC6855F6AA16030E50B8A612B6638DE2961054590B46238E1
0E2995B0F8404C956D9C825F1082863FF2526FF4A8F3F042206BA89D7CB997B5
90A489843013B89E156A034013BA6725D8E8B82F64AB4E17B698C93FD172DB2A
7AF3D050CD60564ACF36151E992A192F7DA72904C842BA9AAF570C3AEB870E34
468264771E9492578A73C2CE6F54AF9A09E401189810F826E3142820E0D3F4B0
5FD128BC5074682E9EBEC8170557DCAEDD3EBC73AF1C90CBDA10459A8F61C9EF
A1A96E19391AE4148466F76FC90D2AADCF849DC876B0B9D4F4F50FCB2FC1C615
95B56518FE362CA6B772E8A98104A8EB6AFFEA2416ABC68DF801FA595EA0F1E8
45908919B4505379E7CD3A38B4AA11DE542A55B7EB8ACEBAC9903F948083959F
D12BF8911A5F76CE0AC8193AB05B057E35B1BEFAFDE75C2484566C2B8C83D910
79EB279E98FABD7054DB73C62EC178A3B7B5AC2FDEDCFC13AB0D063922F16C48
3D0CF81FDF1712D5DCFDD74C031D6B6B5C406665D18A83202398D984CEBB552E
AFF28D6EF19BEEA05432FE0303F929AEF8AD7D0418C30EA8EBBFFF9E395DA29D
89FB9F968729214C68FFEFCA1995921433AFE71734F1CF1B471B73600E78516D
3D86CB9407DCAA0AF8CEE2FF08AEF2872093A37CF76AD598C4E2AC6F8DF521E0
6BF58BF8816C4DD95DA73D3EC52E50D0F2879614B3A0D2A985273F8D1C7B566C
6CA51F3638B86193F25B749C1446E8B9531502607E6C716F779B60AEC1E432E5
BC0CC49BA293ADF4FAEC12C0B1A22F8B84B6450BDD689A10FC40848AE58ED1F3
B7926168E54354DCD965B4DD05BFCAED331D63A33C6C95A592ABFD1A434098A1
2ECF812E1423C305A05D036163F6959AC1AEA01309C435ADF5406DF136E73124
3A9E4973C06A576AB80A5B86EEE88788E11A4B89E45DAB0A4848457AE09B04C5
19959AF92EC41162D2DDD0C684F64217E34C7D37F4B44E004B3F6FF6618C25D2
97A9256E84F5DC22D1FE8BDC44A3CF90723FEE2061FD21F3F2FF2C53862ECDC5
587451CE710FD5F1497424CAFC9C368DF5EBB059FB82FACF653EBB267199F8D0
AA2E6619452B76C3AEE162D119259CFDC6F6DB7C4BC5CA5724AAE193382D8580
515262B0EA1A059940DD477A7DAC80AF7C82F92F75F1147C212BF32B011B01B3
399820E848932527C93AA3B84F470E76271EBC332BE70A366609A07291003C4F
FCDA2BD93650CD0F84D94EABFDDB183F68D2C809C2B239A4BE66DF04F1D6201D
EE00A1E2918BAA1C152543E554D504CA7586F437AD9BC6B171C89E952EE88DA3
4AA2690FEF450C5B9B21E0FADBF4C3277A134195CACE40D85534736071C36B9A
88C68B9043740852B408A4D01B23FB8296D54FF11DFD6463B19427DE65623213
73C405369995B98E22F4167CBCCEA7B72F29AC64AF5B641929C72611EC74542B
877651D911D98E046DAF86A167E575FB9E064929FBC8348B055A7CD22EBD2A0C
FAA156926384259B9C56EDB141E95084E6D6369079338BCA33B72D9896CADCA3
F2A06AC1A00F0F1715B611605024FCEEEB959F1F5C7CC7B1A7D686625B18606C
5F3FF450CE0D97825D658779E1F56C5D8A9C9C6C45962B549B691D1CA855E6C0
CA95874C5F5238A8A6FBA6715EEE4AD36A2E3FADE0258BF10ADAE2B6EC8603B6
D822D4CE878481E3C87789D899C19B3E69D4F09C5D2F644C9A50D33FA5367AC7
00C1AA733145A16A51FBC10F2F4B505C9897E1ED04F673216C6F15F111A1531C
666F0FDAF2DF39CFC61A235A21DFE01DB263AB0AC36D1211AFAC271F9581D95F
D3C450E5B3B661EDE822F9E01187EFD95D0D5D866D7975350A270CFE8646CCF7
05322E4CF610CF77869248BEB42D9A62A3AF26936B3F1F5BB0E1E6DF91811AD0
BB44BDF0047280C2B8D7E957756B3F3DB28466A99A59AD5658855DE25D1C9B46
5358CB702F7E93F1FA7DEAA8DF775528F29D29176B1D5B004B9FA5C4A5FEDD3E
6B5980D328500A1BEA9D318B82BCC1093969640099F4A4E1755D220A11688BC5
20E3939A94971ECE0D11DAF89C31ADE2D6EAF799AA58EB8B83A73E05730DB85B
011E171D4D53FB97B25F4168C48096BC6DB2C56407FFAF51E4512DBA7F37E5C6
052A7D2FD681F2B01468FE70AAE50D5ACDCB216371A2A42C5283F180CE7D28CF
7DA0E773A592FA274D27D77B5CC83460E3A32F130800899F88B5BAC78257395C
0DC861F8E7AB8C7770A0E6B5C0DD2272CD7F7DC11A88C51CD195F0F618166505
949439F946245D3ADE23CD6E9E31C11CC3EA666EEC048E729C6D4F125D10DCD1
FAAE6431CB79D3F51657CF5E1A8D66ECD1FDEA5F055FA7CCBCF9B0024CE0F280
CABBA90E20CA49FD39D505F0F3475425F68EAC54E99CB3F3B81312091EDC74B3
EF554FAE4F33322B774988FF07D090D43FC56A8BD874CBF7D673B763DF508B96
A6B03271205712D6014ADBB79F5BEBA8EBAF0257052E257DD836EF3D97A23244
1928AFE6C0D68B4726444FAAA4B503587272A4766A1D6CF18889DEB342EDE4D8
248C316386150B227134A0828D35E0418038B00DC6956F8F21679736117B7CA9
8AE5591524F4244960B07FEE4F4F874319A2A088BF4CE2193DAE3783D22CAA73
133A7CBDBD761ED14CDE86B5483C266F04B72D1297FC351A0113AD3D5E560C55
3CA87365E0A0D96996091783F0D8F7AD2D13D2ED080BE7AC8D3E037B51027ABC
28124CFEF7A8DA90006F03CC07CED4C80B3A952891CC4900EA6F2F50F8580B50
21AAFBEC200FB4B8FAC32D2CEF61D9D8DC0D6446F5643C55D6B9484C02104D5B
95305A6F2A96543BA6F23290A674A72529BBE4AA187844C1D112D342CBFD1024
C88212696DED35232378F39257665B14ACD8E129E7B1120E865CED746D2530B6
84B29EFF2CA13219734B9B5C7B9BD77966D8A8AF0DA39927041BD1F77F62C63B
177802FCF4BBC7939877ACD3C36B5949B2092A0B4116899D8CE42427BBC36B5E
277A9D7F9BEDC6BF13F8D760D504A905007B844015EBDFF3400AC025668D3B0A
8D2EE4C1D28EAEF3BFC3816843666D891FB708AA46CF7F0116846605C70CA7D7
2F4F7DFA54461735D8E36DF346CAD55B0BEF46CD1AF759CDE1B095F500D623FD
8530A1CF2F9788F451E2A979AA2D8F2E6F48815FA31002CB7CA45397B07BCE46
361F49BD01AE974ADD76EE260B5F3F3EB13C2F6C513B9DE3913FF1FBF0B469E7
13DCFF06B460C7D4667806D6E90A1A5ACB747611BAD5C2673B2B7C4ABAE87E34
FD8496ED09B7D0CABF7BE4E20ED077380347786112DCABB8E457DD8D1227CB08
A5614BCDCBC1EED16D9179AA5BE60CF041A4D9CA98648825EDBD98F35084E575
91FD05899C2FE90DE51FB0041FE5995A062F8592F5726F4DE915072646A40E2F
992701C29F43131B1B72D1980F13FF5393BE1943E98AEC7AA065AD0CA38388BE
30F3D04B9D7D81B4C771F05402CF453FD7B6F7E49A3FD7CC99801EDDC3218484
9240A969E1A4C5DF3317B5991D3A3E9E413B271CE134C6F216482065CE86FB42
F9E854B7330B60A502A1BEBEDAC0404E0AF9A3A5A4CB6DA29C383396DA38BC21
FAD1238383B4B6621206C8A300494433CB6A08B3F347545410419B73311146C1
6A4F4DDC8CA5F43A205C55F81A671DB10D74D9502AC87A79236E91B8B451B208
490E88C389E031BE398C3AC52C716A990225906127EBBE72B0EA91CAD9335081
5B3F430E0264E57D1461185287666855304C29224C43C3944438FD70A6420A75
F8B7B774A73F26AC3467F07027177F36797A85E923F200CF331A8B5357454C35
9353F9C0A9E2C47DFCA68CD7221474A6930C9378924877DC526ACBDE6C68A526
63C21FA2B4E8D77FAA1FB15D40AE64AB9DDC188307C4A37498CE715730DEEBB3
E6F98130DE9C2D3A7CA364E08F5838AA1ED0751CC9AF00BB55731ED1322402D2
4EE66B2169DB6C22698C214909840F2B23EE4996E56230188F4A62DD2C5E3BAF
4D8550213E0030AD6C425CB2525D0E49718854B764A73A5120F1F01E338A31C1
8F72657323F4AC224B40CFF97F42C63DFFC69EA76511A0492B2B2B2E41727705
8DBD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 104 /h put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1B8958E2220FA1C68EF82D
01A2B3516F320EE84950A6A54963ECD6F606EB5693F6A0BC74CE2B5AEF26AFE6
7BF5D5357C3D53CFF50F60599F2165B6E742A331B47F46D977FC721867EC9CE3
7E9BFA2149C9E3A47AF0D0EDBF29C1E6D92BFBBEB52F816EFDBA9CFF83AC072C
5FD264F8F24CD5A1C0F68399FF4B29FD77C4A54D82965234120D6C0729362536
D15D42DF49C81B451A7A77B7A4466E3099EA853C2BD21FB9293BD31B0C9032A6
2A6C25685EA5EBF595727DDBB167F06DC0882BAAEAFC14F955D71C3649E0E3E0
465C5EFEEBD0F7FB6351B7E204187285E2BEB85EF57911A22496320D05F0501C
8824A766E3583CCAC48BA225F6EE7C22647624ACC07F07457E03E0877F686291
C0FDC921EEC9E203DE3014D2D0FE8F24FEB5F33A5C493D6139C601BC1B08EB11
7808C9A469AEEC6AA2B883EA86DFEF046556BBC322C9B2BBB0AB5472EEC5F632
F58146A6DCFA9B04AA1358F7D868C667BCF9AA73E1D2394FB54DC6F9734CA081
1A189914BE380F9F551500674BDD5C09DD070ACD2385A26183865775541F5E12
93AF92320EE27729251E258494077C4184CA5445D5B43E10C4ED34706A74DDE5
6C42DC8A3A25E4A6920BA2D73E20880E0D4D662294DAAC7DC56D15FA32F8E360
EC4A7D953760F90AE8314D8CBC69A55B5C850F33DA4AC94776826F32CC9F5ED2
E86B09005EC1F77985320D4A5808BF050F60783B3C84357EBA901932ADC88A12
E069D56D002CE8FBDC842C1BF2ABAF7CB763D100381584345130D2068CBE7547
A0D7E9B93D24AA9D206448CDE2923DE3F45AC4A614BD9C22DC8350392976AAEA
2E68B2C424CA7C3761C4892742A8C9D1AC33BE097D3E9A2F488583960FA7E63C
B7AB6A8D4601B4074F94CA24D3F803EB96989B56B0F822E073467E11AB74A552
07AA43F5801D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5C69F2669DF1364BC06848F7F903A729E2AF299C26DCD463822846F7E4679D57
E8E44C4064381314CE489528563694C82A96520B0032BDC94E9FA02B68F80792
19AA89F0EB25699B9028C7BBED09C7C8FE6B649E051F9042F32A004BE64C4DBE
FD7F9A354A8C3592B6B7C3BD820A744DB480B7F6AB52178878D13A29DC83DB55
0C5E529AAE2798E2B373D705A0D868A54174D0FD160E633EB1D913F3FE734B04
B03D4460F5B86A55239472D3A621E66237C097346ADA2D9DA3BF81CAC4C28FD7
13683DEC1D5A269C47A6E1D6F84DD53E21DF54F9A3690D8C3B62166DE3769805
B88F92F372B9CC5D02FA0DFDFDB226D7F4D666D62A2D77B247486C51EFC8FAA8
F823BC7554CB5306B45514677503ECF27B795C43154FD617B58476E6667511BE
7641F1A989ACBC7B54393387E3185491F2849293956700F5A2E4576D93540E89
0C37971E76A14023EA6BF31F02655580967FD01FE92856F804AD63DF749D9324
E56D04C624DD786DAD31AB6548A66DCCE2C1F04CBDDD15AF14062761A42DF696
FD5D211B776F92D9F76B901735ADF07E93CF02451CB7A954C9DC9328FE417A61
A17B3DACCDAD2C91CAB22293C79BEDC1B2C2AFFCE52F11E6369D13F15D202F4B
802CD84CC78CADE426535D1B73894AD08A839A2025ECA231AE72E42566D5754F
3BFCC695EBE23EB8B0426559163873DC25482FBD96A1B3101EE35088322A84C8
9C6D5D400DD7CD8B7024070AFA8D65C9B128888B8BC47BA9901066A5233FDFB1
654B21E389A759C9A0B990A95BD1E3037C69528F078B68834DECBD8FC965EBA8
9A2B868ACDBA935E7E663467BDBDDBA382334BFAF996B63A39C6CE7FCDA4D223
7277B471844EDDFBE2EB61A39AB9B17371D4C87B6956593E6916F606FFEF7F67
947AD2D780C9A0C3C368438BB4A6D7449FFA56DC370EFF709AF29B88AD5E6F36
F1B07E025566A636D379070A8715272A3DCEA9CA77E4B24C5CD5E021CD4E11EE
47C123FA6F59F54A75615231088FE12680835FA6B05F4DE09AD1CDCBAC861499
79641BDF16EC35A1BB3F6F0B8D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 18 /theta put
dup 59 /comma put
dup 60 /less put
dup 77 /M put
dup 83 /S put
dup 88 /X put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 115 /s put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D8211BA44AC3CE67694563D2
841B62F8110E87700E6D1522A79EDECDA6C59DC3004C4C3CB2DFA31AF1544E5A
4FFE7802F51C8402B2991BBC188AB976B4E85B124B81A226930F5F80E1D34658
2C2E711A080DBC1EC1D661782A37A121F9F469BE383F47BB8E249300A4E2A660
56BB18F8C35B4B830993FB73790CF101C3BB9BFDF16CE498196B69EB18BA4DD2
95682F6E109B03CAADF1C109B7FBAA515F68E3D13AF1E8067FE8AD1D722E59AC
028F18A90A93B0A8092E176ACF53A13E05692A45910501C4F0C4060C40434A26
B014245EFB211DD41AAD932109F364CDE249E47B2500A344D3B45DC41704F107
F9FD70DBCFD768F531C969C8F2C743E993A9064AC89AF45FA0EE8466189EF286
59BA3CB358D134D3789A40B5359E84029E48F594BA5C5DF179176109A85170E0
4A2753C3818A40D52CE36F3AB8B526FA6ACCA04314585D7D7666D5D9CB098D3F
2DFBE4A9EEE9ADA8D4ABF3F9276682525352D77E88EBE2B5963B26356D2DFF42
54DDE345D3E769B055045E7583CD07D201E433E8D15812A4E70A50139378D24B
F2F351ED3A4A0D1972D9836D0B6726319D793FC6ACAB23CCC5096C4AA9D52ABA
1AB2399A01AE284741A9C3A0E2DFD2C2F9479345D2EB0979A8436BBB1C1AE790
78E093BE88787CB9A141EE1BDB1BA0C0CC65740DCF6B06053E7D533D78B7A824
405539044EB45C8D5BD7AFA5644A5D31E514EA7EEF930D9A69B14B59D14D4F30
4A1DCDBA4A477EDE8814B09841056606DF312C9D53E8A3D94173DAFCBD5E91A7
A99593A69FCFB024A7A3BA502202440A98AB0141BC18E9C7C3AA0F4A29839430
05773520D6D5DB2D90C98C79E88929B29FC58BCA73F842D373F5778483890B8C
254DAE763100E42156125EFB0D30D1EC8BCFB0EF79E5B3B20F69379BB73F8985
47C1BE162495BD7CD13968936ACD00F1393012A5F9351D4BC6A04CC095A903C5
ADED86391C1F3713105805B1AE6CB7EB6252A02B5C558138DBB235E7C5A64E58
085DDDD1911ADD0D5FF7C9EE5BAEF2F01232FFDCAB87B303B94D8BA281B3FD02
4FD41C68D49F06E6B47DDD1F33365D9887726D078634A6F98920F144B96A7AA7
046297CE3F337292BBF406BEEBFD0A2558762D1A0F2311735A7A8CF531DAE7CC
2EE73DB593FECB3B3DA3FC12B84DAE41B4A3AA539D52859E6EDA3C10CB20DD1E
9480F2B31C4902E65FD7AA1B73887053D40BB0F25320F4A3490A99804B0A6506
8B1E62933E71FB019F0AAE8FB55E2AABDEAE798C2A0EF549CF81AFD6140550A9
841D6E190239A30832C91C17948120B1688ABB3E42FF1112DB67A833FB564F96
6691867FF80604397E3A791E5F617B79BE3D47AA67A0636D1B1FD31E70BA721A
C2266C1D62AF81338BEF9A240B76290C8F30614F0A88652F5A1EC55487ED95EA
FCA2908E0C424EE672717B23B96C2957E61F1407851B37C66815931A2598EBD9
1311D225C0C0AA10B8CE4E4C6864E08C53AEFA76D5FCB93C4FFD5022AC4E4C3A
87114D2377E234809F92D76B133A11F9E4BB052FAE783CFF31C8DB5E6BE3E940
5B2BCE6C452AF389B69BF018B7093DF7F68973CB3FBC74E88773D130797F7261
19010FE728035E19BA0FE45F1D039D07F6BB8D5F000D9EFC5D076C51EE0F8748
7D30FF5004B4777E7BC4B732EE1082880E3E5B9A81CF2C14EB92E2F97FC83EAB
E98F359DF6F66EDAF4ACD0BF5D52E02C94C5E94AFDEA52100540B88155228A05
0BB864E9244C49582A034E2CC1FA59980E1AE7B1F9D6ADDC3BE7A0D36884E752
75C2F92A44A5682F19E47B5AC0295AC40AB4A0CB0DC32D5F7E3D55D7C2140D7C
3D03E732E9F6DCE068F95BB00FC9F1F97A712734888E1E73C915FED0A480D3E0
C14CDE2410167D56B08F009B23DE712815A25D0CAD734CC7F469F03512DF2EA2
E520E86BE4860A61F39B181D3444C67036A31AAFA49735305FD967DFA75F6B41
8227AE8CB2F2A1F67FAC36C1E6122F0A7FB5A85555A536A9573F490A1FC615A0
802607D05E9B59FD004A022F8C59C728D1CB92DEC6308B4BF233A79C2ADAC5F5
8EACF8FC0FF6BA055FA31F8F97B5DB8ED5882E3858A3AF85ECF4F12AE6B89A14
17FD77EC0C2D3AAD49BDE3F2FC7F8DAB898191E431E0A86FF2D92C6D9A8A33B9
9317DD01DBA5CE37DA77FC8334582E1743243A6C78DBFCB3FCAAF2BC440177BC
3BDDAE1253A048A26F15DEE69ED1FDFB1E2CB44E02D25FD4AC04E77A8646BD26
E31736573BFF0582677D106B3D2B9DB4450E832EAAA5D29BC6C7B201744B0632
934DB70B3D2D5224118088A32C04C8692271661FDA7AF9F17FBB04703EB9CFD7
34C686198CA21862ACC10F2C93A6A851BB3EDDC405F312678BC0EEDF8DA2B580
2A05B37C6912AB7DEB4C864BEEF08F4670E2A6BE30375475AA71FCC561B47DAB
D4F0C0C45CC7291EA45255AA307E15394B94ACCAD536B87307C25B82188B61C3
9B0F001DF0B9E19649C457100CE28964C5B5006D0B1DC5A4E2A344C0EE84BE84
5A9006C74894DB7E7689A3DA8B16BD4ECE312844FFB8EAF1BD1E2E263659E7A6
F39AE18830EFAD7263D0A4C288E29C3AFEF801E0307F71CEE1009DBDD5BDBD40
94F8BE7AEC7FDACC9381634895AC520385D5B3A47BA301FEDBC47851BB41CE00
C87DFD1361A1035ECAE590E200B7C24EC3EB5D8222D824FA3A646592910A3CFE
ECBA1EEB73C2760543BA9CD3E90FC0182A24863789D0DD6AC0541B860FDD5BBA
6E85E3387B6C18A120980B1774F031034765EC1BEE2CECE8063C57F064AE1C23
F279341E9432FF3C7D5B24960810A5AEA1191169380804D606553087F4CFF1F0
0F2F426CC83201F51F669EC3BE303B6A07A353EF1696B16AB36FAADEC21E6CD4
7036ADD4A9457C8C0341F81206EC5CF25642A9A7BED3CF6501D8822C56295AE6
20E93FCB7D26D42B832FF69698D224D2FC250BEC58342BFF433A43A16CD65839
094216E1F67425F50BD63BBFC302170428AC8E71411BB3D50CF2406238D3DEA4
864A8DB03F8944DDE8846EA5FDA8D29CD3AC8CF823876D26DF4B5A5DA762532E
EC3161250EA89FDC0B48D26B08AB455CC23481BE768DFD85565785E04038D64B
33424448B866D18C21D6A6E4A13E017C97DE773581BCDD6E74463270CDAD358B
C840CD166927CFBA23AC76388EC9012015AC77DAE8E990C3142E794D9433A638
D366FD8BA6F3D3090AB5DD9039C169DFE4EE3ABB60D8155AB00BB1ABAF007F7F
BCBC4DAAD0DC06A2567628F5A3661C091D322D3F844A65BF91621D4B769A9067
734BFFB23BBC52B7F70EA89FE63FD3D5BC1B790B072D5A822AFE9A98F064A113
44643BC716A93759BE1A81DC1F78DF7CEA82F0F026D7E93571618944A56AE69C
6DE57DB05BB04392230912814B4CD39C5CA39F176E60722BDCAA18490C019A3D
E948F1C5B8E7C95F60B5B8D73533960F699DF25EE1C9794912BBD221D0BA5AA2
B5D78CC98B0CBE468528515DF4E573684B7A2B0AFFAC5756EA57454E7EDDEEFB
9EEC50932DE7077B8651DE42B4184B93B33D2387E5DB3084B6FCCA80C30884C1
DE2F7C8B87E3621DA9BA94FD5A03F39169D7FAD7C74FF62577314042193FC3A2
CC19F832A6465EA9DAF6857CDCB1E63BAA99B11DA877F78B8871B89382275913
D1AFB9B14FC2E4A05B13FBF9FC89A15191DB9567A5CF9D3C5041CB232FDCCDE6
A51E8A0CC0B962066AAE7E407FB93B1AC22F25A917DFE37E5981E62090A3C37A
7A834CEC576DBD307AD064A9951C8501DED32D241E874828C4F832BC3E18EFC3
C1F1EE515E967EA0E140FCE582C913491D3E9B8C7EB47FD03A45C406D69A6278
8704A6BC570AA057C7A2C62058EAC4A4A4A9CD31E390BD675DC7953A1B19C164
1549420A7DE4689432A44371D6BDE774E3D323452F413EE5E25C4A0664FF516E
02047F49C1B493B40ACF6439604D0E4A964D71C74C43E8C95D7DEC873210EDAF
C4EAF42FFEB592C62242BCCA9764B6283B2714A585B70A59D217389129B63F52
1279A24B82C0C3F13C7844E983C07AF413DBDF7677771EA8A8F555857036B810
E8452F784F81A93769BB079DC6834FB3FF5DC6FDC817CE1C4A3C4019C731ABC4
5551DD19C38EE12602C15D893E332301FDCDF96A92CFDA6F6DF540107D1AB31A
2D0A803CF786E8C412E19120160405899FB3BD502A770EC97EB17667B854CCAA
73CED16A22285FDEF70924DE9EC255A4B21A666253B4720199709DEB11AD6221
ED54C438C0C2D7322E8FC04785AF84383C8E319931420975E519B1C081415716
7D3108BB073CDEEB62E87A9B79473D40CE93753022C0CFF94256C966B58D0523
8F53B5565761C58DE4A526264FED6A4E1B4971BC4BB69E9739E8E5C1DF3C7A1F
E22DE4C8A3D46185390CEDC55F1532ACB686DDD2346A5F4B2839E458CF1771C3
ABA9F981220B96EC42CD70BAB67EE3FAD8BBD02622E2B00FCE548D9AE14FB45C
56CBE7F197D579662290CCE347F694C64B8061B7B91160443819E08F01A9968E
331CD51639AAFF6F221C4779877E4BC5996C95A6E5140EAD2AFFE75D51CCF6CF
1A364597495D3DD0C35C42A7F68D39AE1A9B9D1A233FF8BED349568FEDE9229F
64AD90BBFD39C805BDBDA5332A3DA0F6AE55DCE6984F1CFFD78802DC46EE1C7E
87FA566DCBA56A326605037F07C0E0FA63C4B2AF4AD95C85DA5F46B93BF4F89B
3C3510887F8CE769006AC8272334CABD3105FF17488ABB4C79736A2C4EC400C9
9717E9FD426D7F1ED718E3DAAF2062992994801234BBBEF386F604585147A6B6
9446FDDFE9B95B0CA95CEF3866B9501607641E8BEBC523BD262545858DB54B73
F5BCFE57834D5A3789FAAF9089E3CBB0658B08A1ED0F3C69E407EBDF728C9DFB
1E6CF29924ED451533C46054BEE77136823C26AF34CFD1518C606D95ACFC5D6E
8AE1A0724E8B86E2BD3F8BA251E25B22ED67B895A21FA79A4CC1321056600C7B
FFF829A4A1B2B48FD099EBAE8387D1FA3677817C6E5C0BC9713627D4E399063B
E44490F20973408325113F80F1827D6BCEAAC02AC95C2F89BC91C099224F0E35
185A6DB3090AEDB0E80FE04DF0B424EED6F40EF3FDC63B90DDE7CB635B04548A
373D340DB224783E27DD6728AE7836C9D19294B85DC626CE6B5B0FDD7C35BE3C
EB97AB2FE6CF0FBD235EEA970839218363A42632426E42111676B6000C22448B
03E3D40D5F483DDE61B8754D2EA88FC9189F81E5411224EDC18CDE674EB5ECA6
A546B87B289E3143FCA12CA27FEF6A07A668B54E718FC9E347
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463BC48438EFFC3124D2B687E0179001442
3B50EC14A43279E027E501524DE850160B6B644BD30460335D0C09F10557A475
D84C286D85B64D265113BBEE89C451BB69C75487F8602705B834E9B0399ED401
4521FAC8D9E2AA0F906E6097540C5C81A8CF53AD642A99FB4F329405E139D009
971E20D13D14FBDCF1824EDC1DF652D9433B7FCAC6F300093EBC766596B2CC9E
DD9422F77B27BE6D26D24184CCE5D9186C5A8FF1C50926FEA57A14EFF9B92161
489D7CB2C290370E48A40AF2361F12D59818588632C21480FDB6BD9BBA57D9F4
8294FEC2D22B0C60411849BC89C842C7AA5E4FB15C1942EB897E4DED8D7E1362
E0F473FC9425592E2E45B8C16834E8479E68779E5A24BB82B024E2065EA0CAA4
C62509A49BD69E7E6736A1BD7072A987295B3F424A673DB0BFCDFF1823F3A9A8
0F1F7E8F7CA7B20F254AEFBBA0F344D7EABE7118F71AC742574049DCA75A193D
C6A2967BC611E1A0E232A0FF57D067A939EF67645723D143A8D4D74D8FE6C0F7
7B08D4232C67806307127625D2616C2571B6413523BE590AF5861B20E7699BC0
69A8BE8F827227EFB37969C2356F93886272C38BB5ABDAB00E5722E22BCF382B
F892C767894C021B481165B32528BF3209DA0DF713EF4751FBBE4D3BA3A9D81A
503AA8244A272C16CAEF6B64CDC70B85BFAAE1BEC4ECFEB38C54549BF4C27D2C
9F792B326AB6D012B6B784F740B8E0B360808C984DEC73EF5731C96C3233AC20
FADB3505BE2B8C29DB3630B72D102ADFE5B8BA81D3DE3CD424E81DD04D75FD39
74031EB23AAE56CA47762C1A267CFB783BD889067DE6EDFAEA75676983CED6BF
6BF8BCB7776A6020E0474D96EE77A6786D5C6A106A315138CFA112E05B771B26
5EABEE61FDC9AB160791E0E8581E4D058AAC65946F883D36927E05012954EC22
69DAAC2BA95CA0545BC92964A0DD04E50F5C82B2BB5E8F3A073EDCBB6CD5E7C8
C131C634F4A6767064EA4E5F469E48F5AD2885076AFE12E1147CC2855C94FCC0
2CC2B29CC5E82788C070EBF5E28B2574EEE5E24784012053B3D0781482282E4D
DF67D68214B348BA511D8FD2695286EBB864B0ABE9386FC4E753433995E972D3
E9BBCA720EC558E7E1939716F051C9F383A297631E09D739FF5F74224027D20A
81AB677E2C1750E02DCF8A09F8DA0EFAC7EF17D24EECC5D8E299FFAB91B21E40
DF20003FC12C96E66D061CCAE96FC89F2006746A5C082F958963CFACB7EECA80
5A8ECC05105A4750D091A144CA7580597A709AECCE99D77310FCB1F0E944D7D6
AF6A8E3795473E485BDE79C61F414C4C20CBD819079401CCB0DB05AFFC585551
BD5F3DAAAE92557BB87982EA6B9AAFF3D2F9F34EE42C18A25413851433A14282
B0040BB5FDF5C2B28E76198D96FC987CA0E1C26B104EA15625E8E80E1325797E
BEE1ABCE4EE7AE904165D158FFBB3426302CE4E08F80AFCA1663E8E72CB38CD4
9B7994106DE8BA410C6B716916DBEF52BDFE5438A92E50E90552EE560CEE48FC
65148CAE4B008CA3C7C0B7C164ACB45A7F12D8A7E2D3D13DC23611FF7B6FFDBB
1D6B72C77967AA05FA6E12695E73E63BF4D510C4E7701979B23EF39FD99184AA
71EBC71B33F0B065EBCC731CB2F06F856541DAF495BBFB7A9E435270B17B9AFE
2E8CF2667EB7FF2A628865845DE5781CB557D0F48AAEBFCEDB510A80A1855635
8ECD5F0200B52CD738C66710CF3C89C124936E7161751007AE9FD414A8CF09F5
EEE46E32FDA053C2796454DF24EBDFDFF74A779F7D3B4C690BB091F386C50BAE
27B27A17C510E93594DC60593CC09B3350E40609D1A3D08D948B41566EE2BB22
9D402A7D9B5B3417AD77C899FE86E5BBBE329BBE05CCBAB524D8A7D94F9C50A8
0756320E70B2CAAB1ED8DAE9642AC30A60DA436D9978E281720702A5F1CB204D
3A58F947F8C623ABECFB9EB8D99170D428E917CCADA0CFA222425BE456F25824
E00C8D756578B11218BFD7DAAF8E7E4BAAB9DE55C8366B7853299DFF59BE6840
50BAEEAB1893860BC643B4EEC02BF0E32A9F659FB58F0E9D3F3D68C52B226196
87991BFCFFFA471F8D0292BE5E26D1E262B15C3CC49E13BFB45C117A3CCEB142
9F53DD199DBEC3EAE40D0A6F36AA70AA174D6F1EBFE75480202EFCF126656768
DAF900C737367F91058BCBBCCD7D08D4341D7065F5A0097D310F85ADE219D09B
7E7E49FE788AEA675F6E027AAC8B3D833599D63A658BC928DB0DE9BB0849B45F
4153BC6399F503C795E02CC61C6E632B01EBCCE12DFC18BBDB6FD96D53CEB809
BCEB184AF69E0C55CF1C7B04436F5076398F44159AA77D2794F0C1A6CDB74B47
9EA63CCC96F4E35B7DB8A8D7F3E1C56F041BFD53A4280C835E316588269C5083
9E791A86818CA3D536A6A3152DEA4672DD1B5328D668F2AC55F33A1977AEB5DD
B859B5D7684B5B48BE74F0DF68BB7611D0C8CEC37E9C82B9CA35CF6D0A9E015C
C486B4EC483C29F3AF7A212617F9013D5E5CB1ECDAB8A409F31F9DC22F527CE1
999ADE6BA8D958DAA7859047CFB3BF98B403FDC421329B3EE1F90852241C849A
56E542F55635A848E3A9FFE99C37818642CB05F8D11BDC703845BAAD6A9D336E
CCDA82B1EF961F89449EF35A440809B6C7D61626E53799824AD73CACF6EA93D6
25B96098EBE0970F1473622C6324425BF3B56A4D1ED7C692CF08BD1ED4E66D70
202B80337D8D9990B929A6F2A6C549D8F732F742B69EF5241CE5AA02000F3955
1C85030C1D8972300692E2AD0A8B58A1057E51DC26F80AA9D0BBC2DCC9B984AB
01782D8CBEB216E0E3980AFA77440C07C795383860D933BDF6E22D6F24D980F6
E5A74C5B275DEEBC159A0D23E5665E0EB3FEC7D481799C3694918DDB27943BEA
14BCD7994C99AAA1930733887BDE6CA87CE9E3B204666FC8E7C3F4C4F55BD385
36292084B3DB13EBE73C8FC111AEF9B73817BD9187EC566EBB4B9F6054E7143D
0B5E03A723CADAA154996A65A1606C0E1387DD54F5C8BD071C4E9F7C1800BA18
A9437C91EF10F19C2DCDEE1EDDB0B6F2E6206C1608ABD57E5A6E99FCCD4E9D86
7A7520BCBC2C39AEC4CC7F1EDD5CB4F89760B2E3AD1888AF21414DD875C10A07
E25B7ABFF7C52969832211540173D763FCFC95483BB2A3A1D5AA11F2D67B7992
50CA06F399888AFB35BFADB0BF90C79695491CD056E65B92DDE8F5DFF8D8E41C
7432574C9D6C1E2C803CACBC3E2C9954000E7CE3CF3B5D4CF69CC07F41BD4DF9
C131E1391CE80414023379E312C43A165B703836EA52700746CE5274775B87F5
1AB5DDF2041BCC6827E45A0370F0F2D6FDBCFCB5338EA8CC01B6818CFA9D57DE
81F6D86FC17A30DFCA93D8F5B1DFDCB271329400CAE5B90560D4FC5A165595DE
B9D305ADD3F849D4A867BA24B083E54D9021FBFA2B95ECCF029A6B18A512D30C
EB0B6ADF80F97CCD5CDE798B725558C8B741341F24E8C339F174862732D99EC6
250B2EE635842201231CA58B99CBD64FBC0CF5301148D3FF60C0D208A8233A02
00CF7F8E6C8D7F0FC79D2860EE1031DF1081E83957FE436005019B2517FA41AC
D230B1E0CE76E289C42EAB07B0F603A42B3C72517B86514F6952862F207136E1
E16B417EB4B025ECBC0C3844480A8AF0C5F838365E987F97631EC17CEF2719E6
0C35CDC338F99F4B23B8CEE602E9075C5E509F3093FC051ACA4C1E76EB9CD8AC
59AE55F0F7D5F75A65D956A9A02706558110DAACFFB506183DB6DC3EBACAC528
744FC9A89B37F45B43037C40E0F9DE9385F7EAF303B1F44F6E8B4B5184D8227C
7ACF48473B39932CE9ABE59C5CC7D7B06FE56A942385770C6C436C939C4D3F6D
C46EE17DC3B379A85A987A8AC59B3050099D499C98E9516AF7CD36EEC4EBB586
D245B30B973484A7473AC03B7F1C365676A87CC055F9E924A3A96E8A26DC906A
483FC94222830D1357E3B92C348918E4E27B7C7CE545CACE972128CF29B179D2
2CD72013AC09C3EED00DA7F6CF182109BD3B67C0D2D206F4785A5266761E290D
9E1774A0955F7A1770C2F25785DB6BD43B5B7F23CD96597C5D225B4C7A3FD940
B5B7DAD71554042ED8855F3D5E9ACFBF5A658832D462D39FD4DBDAA0598AA85D
1A40DF5386E11E1547205847E957C05BB71CE21A3E9C1D1AB20BD6C6CAA328BF
57F4F8413F3547D36E0DA51E215709FF69322D42C893A30E02955E5671C075DD
53A5A82FE7F773815B2AA555BEA8F9142D947AEF115AA3D597D94A23BAB91561
D07C94392ABC25BAA1ABE59A48F46683AE927088B156ADD87E1AFAEF79266015
8797BACFBD7CD6FBB41FF7BE8A254E401D4C2912B3FE793C6BC40C82F3A7EBD9
5373AE14D431D216D9C57B7B8A99DC6A5D903B6D5C7A1AD90C2E6ADCEB16B34E
E0E57E0CD0B4B58826FFC06821AA040297C80939840A8C9C7E6B5A7AE4F0748B
443F84071BCB3FA82780691BB952D29ACC6130A6746C3D451B69246E1B040693
57CC21D8439789FD52F7B089CB6623C51F41FE9A5F6D3BE27796E51BE6945760
19CF3B4FA53EEFAD1832756B608B6F0319349E86D0DCF900A758AF40EA5FAE1C
1EE64F5C4A36B6D297D934C7F01C903D9CB62F77B848D7E070955EC40A831ED1
A0DBB3EDD9B9CE5EADC2399DD1166F41387BFDF3B2DB2D2100BB260ECB594F62
00101A3987B4C796CA7A7C8A242510C55D3952EE8DF6753A15A1DCA61824358D
0CC3670D82BABFED72B96D3466701360B64A0E68B3E4ACEFD98F22E80F81F9CE
6986ABBDD4EF0DF8D274A5B7A04B57F2471D3A379ABF6C1794E5B4C81CF3F7B3
A8BF3DE4AF43C73948C51DDCDDFEE4064184CC0FDD226DD058F6A11945DDE2E1
3197268AE7BFB7ED2B10E80B057941CA39AA6DDE2DF857526DAB7E1F3B2B1417
459657731BB039AB97ACF1BFD19FE47DCB4E867B2A5EB480B6431AA70981E77A
A5BBEC7D580D28D8112C8E9E5741322B75D070BCE108ED69384663499751E26C
BCBBC16045CA1B3D7358FB05E0FD1CE327DE78348BC1CE9ED56770CBF4403523
64C3D2424504FB4E6BF81B0EAA0A7AB2C08EF6EBBFA02752A65E4950270B855F
1ECB063E02A0DB98DEDC781B4CCA49E14694D9A7D52D50E819364CA43F62577D
7A9BD6227FF31471F0FD30AD768B5FA4D88032F77398E55C03B1D0FF4DFE8890
5C3729CDCB0DCF6FDCD74B204772FB06379D3A469D9AB505B94F2B82BC63104B
B15FF2DDB076BAE2DA3B6CE4CDDAB67A81831F25BF86FA43B36BDE7ED225F361
BC0F86A2596F5FA43B87668C098CAD6271E1F2CE7EE814B92E55C2FFECBA7442
BD6C77F2EDE3503A4493FBB41C95A5537DD09FC02D303B27586D6C2ACA50881C
6381BD3985C21967D1974ACBA78F78D88BFD5558F5AD4B108B2417A7B9DB605F
98912C7251579AB9B42981BEFA11AFB44BE61E01EA5AE7762522EAF8C7767764
6F39DEAE8D919C8B9D394A944BEBBE20D5795B41C85D883A7B825C2C6C68FD5D
719274A5CFC1B744936009E3BA379F07CFCD4161730EAF61A9F2DDBF8EB048FC
1A9859B8B925808E57CB9660483561734418A4A802B852FC21598C5CA3E47863
97CD6D7ED216B96AC679264FC5EE5C8F074CB7052405731C46A4D0877645B930
8183FCBFA1F1E2C35FE990E4C034914017EE213875F61A63D72D6E0ADB1F7986
05E59EF0DAA6B5A7A66796AC5B92ABA0781FB7DD9CDEB846260291DDC81F4ABB
DC14536EE7B04F4E0B405403C8C7F3AB484F05926185CED1820BC8C80F7A8F69
6B8B1876E620C4FB8E75CDD1CAE31C03B15AC58E3734DF5CAEF9A73757FE034C
A7061EA8A92854BD4420F32309F8341AF436583F4F735C4DC8BA1B4481A2725A
9EB2CA3756BD580B38206E3BD4237963F7130A5EABA239DDBBC5AE92EB4C0126
F1F2E2CD165C58BBB1441F582BF941BC5AA0890389AA63998026ED198564FF1D
04B0A518775A504968E8F503ED728775CFA577FABBC47EC6DFA952B15D8A3E4D
52FA66B08A05CA6F27061286EE87FC83F71806374537097C4E2FF8EA202B2938
C032D95839AAFCDC95EE5FB2B366EE1A58E05D0427BF6B5E9A2EBC2699F110FA
3130AF160BD12FA07DF0B9E3900BD08EADBB9EBE4B1D8BF45B2A9F922A4995E0
83622B36DEFFE1A6AD802B4C69C77932518CBCF295C49DD58CF10B322634A4B9
ACF5325AF65C461BB8AF0E7365683A9E231DE1B45791CA39FF12A6C27A35965D
6C0B7D7E03BD98EE97FA235ED82BB744233FBBBE62B096B5B92CF8D96CD86973
E93E53228E68AF03BAD4FC7A8D7485441866C819D9CF89FD6B4D902C136CE67D
4AB1B3C383F0EB7D72DD2D9BC53BB5DCFB32E443E5DCD1B159FFDD82DDE7C10C
03C812F8978A464394EA84D4BBC317C58C3BB28D26B8F817CF885D3D55D4478F
EB79B44D07EFAFB9C0229B500C5A53E765E4DD3B35BF99893700F975BC8EF0E6
A960999548F58D4E1EB98EEBE97CDC5D6D23572943FB64EF33B2FE48A2B76FFB
35F082BCACB2B99E4297887C58064903F807296432A98009CAE553A36AC821F3
F62FEE60DE0B753A536EB11332C5B3BAAB9E03972F03D2139B371C135787DFF1
6997CDB1B867A94D553D3D5F4F47F4702010AEF1533E327B9FE0B9AF55F1D7EC
A62C30F447EEB966CBE2391B7DE34C7C955F4DA5C4B6783C993B1CE10C267408
67542B6CE2794B259E5F2718990831562DF28E43C9B306831A0D4210E21FF02B
15D1EC3B7DD5E2AEE34674F140F8E00E847B6249AC955768BD46AEF80A764198
5B2FE440D7EDC6EBCDA1EE117047362B9EEFFE8B8CC1BDA77B3402D11CD481BB
A04BFEA9B1A78173F07E3FD7A18401E634ED102705F2167F9D8B2376940C038F
DA63E3B18D06D121E390EF805136620487BC212EEE5CDD971D7314E29CD604A2
09032E4C9BEA7EA3B1E9CDC98F9E7C3A88238A7ABF8BF987AB320ACE43981CCE
9FAC5C8B6CCE78CB5D59BFF85288F1BEEBD85C8A2EB58347FBAAE94B4CD2FAD5
4DB2F0EE08F7E1856530F14650135F7D35DECAE49FFEE44F3E38E3381454C328
441305504B6C74D1B1215E2152A68347420C34003BF52A79FEE880E52204F5AE
D278B50FEE232FFC3090CA19DCC03B7EDEDE210874F53C813D9612748124B409
4996A87D805149DF29F2DC26A396E2A4A648BBB4F91FEF9B469016DD0296757D
484450BD94E6D20C5800ACFD32DB68BC37E36AAD6ABCE53969F713027301D54E
815AD575201DD864C03D668BB381B837F6667720B4C4C22FECCE87D2C0D18EFC
77809D8BCAABF543E438072C9B0E5AD04B0BA175E035C9C243D359CFB0237F48
15CA118A1F4C2A02BB2484E83C08AD158AE3ACF55BE4890CA7F2EFD589707743
6A8BDE59944B07AE07DA5112C35651395E03113F77E6B22FA03754137EF8AF2A
F2679C794ECB47CB9B8C8DEA43EF21B2D6DE0197C5D6AD69FA176B129EA99A79
B2FEBBFCCE8010B2B8243D6219D131C6F03EB4828F985504ECEFCB04DF9175D4
A42D4957C4D9F1CDA3C05B58F3997FF61BEA2613C058763B98A9868D1F57D52A
AD143050E4D8C3549334479E9362F3302DBFE170438FB7E45A7A7ECE1DDA5B9C
E542AB5737AF5144FF014E75E6F7E1E28E59BDD32D9262FB9D3741CAB6DC6748
2BA8E121428815873AAF72A0A46E82845D720CD9A33A1E88BEDF8B54AFD478D9
E939D0D495684660541A50655E72F1359955E433247B04159B326EE0537187D6
A182ACDF7D3B149F2ECCC1B1C909BBEB1FA1FF7EF8A910890DBA7FBC02555C20
7BEC1A9E304B9088856F352E7905D5C44F94D32CA65A101749D11D5484EC1320
81198330535E92AC3184F095291EBFD551C5319BDA31716D8873B4710C592F25
C6DBACED31A524B3A4A3909E0184124E579FD1264FAFC8F8F46D5FBC662B5150
F3576CDCD4F21408A12E5F90DA63277A28B6891DDCDA1852019EF8DC77081CE8
01CF1AB4DDF4392B7D3E9F864976C2CC711EE6C273F43F145E6419E8F8FAC519
7168290C6C0F0067967A1A3081A850C3BB08E365D92A33CFB8F484DE78BFF18D
CC4C15DA3968133AC8D20F54469E7CEF46B450B950D5C4B54056E1FD8640B2A5
883E06752F44809DA8DD8BEFC34526828292C8CA3829D61746F9FA1B1381D598
D3A67D38D8FC7BA5D095226B3E9F1772AFD82557D8CE066309A9276FCECAE24C
89E63F466686B2E3D2A0D9CC81F94C56B73A95A80E7C6CBAAB9F4194768E5B68
448058B7E1A5DC87353C32FD7F471AB9536BDE6AE05A2F779352171839067C89
4C6DB5473D7501D387A76D5A1EE5FC2F6236BE0F0B598A2B32041AA82321D540
7CD33ABDA7E803F78746E3B85230BAF04A06680D81C64C56F5985A63AEFFDD58
607F50C15E06E5B3974622087D43E2B674610B3291A41F8340EAFAB8396DA5CC
B3BE2FCF9E0B7C65979E189D2710B5060F079817102D153A06A7C4D9FBE6BF99
0BD19CDA59B0D6AA5886DB8650B782D9CE21DE6F9A5A1CD20828CB66DD6D3F2C
81133DD7CB24B1B1D64E27BA1FCA3890CBB771B422D07E20D3FEF059F1FF028C
B19036E1B79AAECD513833EBBB3CED375DBC282596413DCE47CA5977CE98B018
C5371EE810338E7B485BDA3C891EC3203062681DFB3A2BEBF5913DDD852CE7E5
25A5E4BC2591A87D0CE5AEDA30DA4F11EEEA1031376182EA6CCDF7F981B9F838
C1352A05CEF380FE48988629995D066ADAA0169B6A38F6E8D65D483940C97544
F888EE39E721FCD11E65FA0356054FC5F9B0C2A769D94B8CB579FB9FC151D02F
A1999CB88E2DE0AC5E43FA363DCA07A10512D3ACFA4092C08DD5DBFF32556ABA
2DEEF3D6BAF0296B6C6DD8082D3E37FE60EA8F424A82680AC5E77FACBE854B8D
8CADF514917BDF17325DEFC70DD24166AA85CC854C5C3F903C8CDD9EC745B71F
9D2717491568968A216C408F62EBFFF25BD72D21119DE293FC0E8347FD712F7A
4F96E095B3D916E1306A0452DC1C4316D0888852FC6A4E5DDF18AD86CD9A39D1
D809911F91C5C3E64080F276D6C72089E75CFD280CA767EC7EF8F34D00DF035B
7ED2E30077811C4C595B812B8406F0133DA80CE65A75CA26236DF9E5BDF16030
4DF468BE421CC531EAE4B3CD2473C979D11C11BEAF1DEC61593EC32F0C344B0D
F25879638250E227FB0D6EEF079E42B7F676EBD85E5F21FA095C1BDD305F557A
B98027330B98BB42BAD91B4964F6832F2946B0FF1707BA43A5C5BBAEA96C1A1E
B92AE681289413865BF0135D299968D339A3B929414B1B29ED3571AAE6391582
23A5FBC13A379E56A8319A1EC5A83FBA355475568EFA4B7EB6D57CDE999352CF
F70396AFF8C5EB6CBCF5BAE2EF19FBBB4501D0D81C57E3711CA641EF5203F3FF
413723BF3F476EEB2544728174ACEA54B605DA2A22B2EB6850D430BD48CC8A11
890D9F5C9C50864C1053459D6368BCB4152454BD9D5DE9D002DEDF2FF6342EA7
F096DDF95057F1A668F7137A0C348F450B13EF02D74C3469105986B02AEC078C
CEEB60B82C63A9A59097FA3D83E4917AE9BF26B73B17B6635B2D5FAD5AB886A2
F997DE9F5360A6D605485F0BF1801CBE17E8C0415318BDEB94FE8B9E0FB988EC
E7F414F09E29FF55CF4931AEB57470C816629C0D4BC6325B8C959BEAFBAA0D75
D8D6B92F86979F67F0F037296276FAA0316B59B669723240EF44CA2637C3F3A7
BDC6A6F5F6AFFD8F05E6C0D35AE05E9664B9D23E40724FA9C3DCE3C2B9DED6CD
9D11622AF8502CA2E8C6DC5C92D22B2474AEA49E3667EE9AEE7129E39E5E3E26
329C3AEB150A340CF2C6B6E847062270D7478BFF5EF9428B6B265A63F45B5C9B
3AD2350058593A2A3BE66B594BB6BD224F9E55B1187997532BD69AAA72583A51
E92DFBFA783B47A38FD1B0ED7F6D53F76F3056C324E107FE7B8A181D56098BBF
17532C933C63DFD34DE703372BF2B9729D821A95E113828FC83BAAC642E71DD6
15A9D2E305965AA02B8A67AEB04D915DADC1B84A531895C3076661D0BF5541EE
BEF456FF9B867B6994E2BA24594243F63B1C1767A866F1F9B4B27B64CB3D4410
84818BBAE715381BF247D955C5D6C8C269359114E9D71F4092101A5A71706506
E71315B27AA869B9E2AEF564F09D4D46D4AF3FE8E4A61F72B56377153D0B8909
71A824918D56D81EC2CC7922A49B5B4D0EE87A5E4FC66F834E0FDAF22066E255
AF31114B3E5CA74B49758285BADF331E56AE59F47D7E1332AFB3E320869D12DB
A2BEA04B1A82587373A6987922E0CFAC1D888D4D5BFC730ED9B185BD48FF4213
E70141D990465E84EC54E446A631F0AAEFE56FF0D7E382EB33B07C4688BF7CAB
06D6046D047BB53A376CBC741F182A24299AD32E960DE2CF2E3C9CA94D43E219
F06892F307C0CB5B20DC64095D442198D9D530581F1C40D357CF47E5F0AF6B7A
776C63DADDCDD47EA7CC5A25C793F811626D36519311DDB3D1CB66837C2964A2
DD0D34A23DDD94A8880A35A7F8190B6D9FD1922C8DE2C7C501CF19FD83433F9B
5EEAB01EA2E3783E06B4B229FFB653DD37744ECDA6D5E61B5B11D5B16C646BFD
7EA160518EC3FAA2FD409D7A576AF244D8CE0D4E7846701ED90AD2994C7EA41D
9304CBEB8AF6D8424C4DA13336D668A0E51C6854E1809ED63E5A5B28D1819F09
B28EFFB75F1FBA1FEC64829ADF24347895332518435A5B47D3302EE8C0866CC5
1774415E82D3E44419505809407145D747846FB6A3E0AEB83390B62E2A19F97D
86772C31390356973E51B882C1370DEBB7598A353B6017D90EAE14327EC57BB4
61C1722804D6F3F83210F1EB0E1AAD2B9B4AFFFE0A8E3468D6D0054BB0525573
663BDD0ACD6191219E6F3F0EF3E1812CB43C67F94DC2FF20B1987FCF66345430
FC0E8B466E4E91C9BADD8ABF5076A68BC9FF38428EA8D3CC7B832AAF61645013
F1E7855E597F3E0E7C17E19ECF77CBD7E6B5FC680849084CDE5724C4AB07D6BE
8923F9A88ABAB589358B21B14C4CED72E160FFE31C5197B16E598F97D16A7B2B
ED369619F16CA4C761F772FD789F2832F9E6F3773F27610B80B577FC26F578BF
185D22F26906D52456D8D4F74EDB3DF81179C1E75CEF1C2789261D59129F733A
8FE9D4AC9B54243127DDCAD510A1772ADC5E7A088F3AFA879235FB380C229714
C80C79DC71ACB9B24E83BF20E1195B1AEABFCB8102C1D5EF16805F1B778107A5
241121B9AA21F9189313994C044EE3046790B833C3BB7189BE2B3A569326331D
BA7FE5DB63ED05024FF7CC2D5E49B0996A84E370873F8AB7A7AF41C32912D6DB
975AA5CC99AE5FA6731BB0290E8CA389AA91F39150EA00AABFAFAD88A39F5CA0
F6849E3B4FCDE810C7288C29A4F749D44257C04F77F9829FFC0EB6BD470688BB
0652A35AD55148C8427062D63D17E43E793434DD9495EBC27DB3D56605C13C26
2EF6C78E5391948DB75C2E1D8C2C4506ED210DAB988597A624F3AFE4FDA8AFBA
9060EA847E9D559B3B46119E4E910FBD87E0C58ECA521B8E011445CBF3C937B3
06FDDE15E8A15FEEEDABD6B58877FF4447D9F70620290797A003C7BF53ED3AB4
3A4ED904B1BDE1D8AE4F10A48F9AC64AD4175A53FC0DF48F7E132B1ADED403CA
2CC4216041CAE3C74A034A795F9B56A37AC096F23ECB1ACB4147DB6B8B48D997
5C207BA50908DFC0BEE04EAB93800C047A0F4BA92486DE3DA9434E0DBBD4B130
E3CCCEA5DEC33C9CAF2A6E2475169F4F6007770871467DFA53654223C32BBDFD
DBA149C172CA1CDF84A3FB7CE24B0E90F29B550F4F1EAA914356C90458B15038
293A6DA190A3AEFFEF3195ADFB103CFD94F1F92E55F2D7C8A669391C09EAC3E2
48FD81391ACA4E48A6119D9A7CFF6292A8AAA04C27C76C93D4975777238B7A12
C328D89F5D7613956F130D5AC822EC5653C94857081F485296C069A8BE8F8272
2767AF07F1FBE53C0E98861FF4297FDB9B1A123CDD8FE0F6A3D2837288757768
73FE3CB14A5752BD9CDC11C7B9366348E50187D7C07F110BB9E1B9579BAB8B32
F20C09A6459B527C060F09DA3A81275C824B3A5DE1D2676776924099B92C0AAC
4C8E0C1A01A6C2211BC7018FEB3DCCAB0CFFA2F0722A9C19D640E13A74D95561
AE61E3A6ACA839DF4C045958C4B35DB2F756E0CA919F86C1B565539142D02383
F7AF4D57745B3155618C2FC77F87F453688A1AFCD57C6A04AA941FF8B33BE82A
A7FB4170C60ED38306755FF42CDB4108DE69C241A3F26A4C5994401F1C42BC3C
BB3C142BBFF74C518C72887D5BB86F8AD3301C5CDAA640B2469BC4A3308436E3
E7A9D61D3972975A954594715570827C61FC21C575B1A93533ED4533D57A17E1
744FF2CF048ACC3E66140C5A149C342302F33365D5D09600368A4C36EFDF29FC
8E52B3A84E63EF8482861E2D5449F39850FCA6DA12B7D7823891D1976765A1FF
7D1F589BAE8A86035EE08C53C5E43C99031146329A8B2A5EC47A152044C593CC
20C4E243162F80434DF3781689A1099AF1EAB36522982B793B2BDF6A3132983D
AF7791DA75CA6548C0B9902C25A4BF21EEB296880F16B94234BB50C49C3682D2
A4882DA67FCFD89F0BD0968FF8241EC6436D37BC00153F73971492D0D3890883
EB4BEEB57EA1FB776466FDE0987B22EBEA8D74D15826F5F6BB62539849460107
BE59897D64577A48228A5CB75E14B9A86D70D3A111768C520DC4B0A56F8B43B1
8EEDDC445D4A201900704C5C60190D1A572A209614AD9C6291103A8CBC6FDC13
28C326D0AB331A0EC73A81CC9AEFB52A9373E94EEF4B6AD220CFDD5BF56083E5
8CE7C8AB704916AE5B6E3A2D629461953F5083B7F02E22258EC172C8AD902168
EF36827119CF1E30A6E774696C25881297C464C509A522FB079757DE8C092AD6
9B085B02372F115C1C884CCB1E1CC4CFE6EAF05A0E2E91E57533B74F380351E2
C214F53B5BE8837EA00B30196612BB5420A52A02CC40CFBD963C6D2536486B58
3C444048782AF2B763E8954220350C128AA02AD51AEDC1145B32EA56CA72FFC3
9195ECD5B4FB6708183F84F529EE72559472C15056C2BDE4E2BC5B34443B3DC9
F4189AF8E7984A73772BA3B5ADD2374127F2C1D69D0014EEB1077089F57A61B9
981D28BE65A0E64370B1654CF0AC6CE8B4C9483C42E6E1234D556D48C47CD03F
B724AEF7E245719281DDE7EDA445CE73B73C9D11BFE15A256C9DE8C921F90733
C708B381A990E3B99E03E117A041A785CE98A236C4BF5FC241D8DA27EC988596
93037B3EEE1DAAF3D70692628FD5E348C148A95D4C2FF18AFC0A147DA93F7D29
B78E5F0AFB05CF1F77E3ED35F1A334EAAF478E80AC27FC6DC4C3A2438C2E49D6
3C3E2C57EBFFD480CEF20F853C919E808477890C9C1C47516B4F661214861AF3
7C47B6966543B711C24B87569847D2A7223AA9615BB241CBC080FAEF63CABACB
2ED97F9695BB77FF54F014CC8B27DB0882A244E5869A1481606CDDD71581E368
793A4AF692E07EC8641AFF7F261B9B31450B0C52DD13D8395073D89C8770D748
1022EA9EABD50E1B85EBCF6F031C9D47B48A4F0B4CEDDA1352EAD8DD0A78B883
03AA789B63815871DB8115ADDB03626DFDAED11BC471CEE722FDB2676E6A56B1
16A6B433C061E1EC8857404A4B644F470FC65FC2BC667C0CE2591F215C8F5519
4DA6E2D3A6C5FD00DBAC30912C17A3C38B2CEAF73679B4499C39245B7BD3E2D6
C369FF8ED752999DDC76CBD213C5945F9C6B529605B717679620AC543AB7D6C7
A59F1B30DB72D79EFDE1BEED7A470423A8B6DC4A9F0432B4055ECA3745CCFF56
22D958AAC5B11FC6914BD9D0BED41B2EBE007B0D19E4C09BC0D9030BAA58B149
5FFBA7FCAD3D867ADB2AF26ED3CD2450014360BEE8A8423A16F3A72F127C74BB
1BA15D63CF9D1226368BFAEE365C5320E3187579EA43EAA92F70709A76CDB169
DB0DBB5E50238D145F7CCD433EB9063963F6AFA2BAF9559D53B79EB5C34B4E7A
911C5BFD9BC6E03D5EE91FE662C28AE4FBF4FCE5D9691101BFE41FFA5C19C233
3B8FD922C18ABA603CC05021F99B6232692E5319BCF569950086BE943F27E67E
5649EA9DC338E9F0DB8C6B5CE36E2C63DA87795111D8FFC5344692459DB4694B
A15EDDB79A044D0074F36E778DC6E944FD3995AD86C7156E57ABB0E1FD23793E
65F2611986AB0878AAEBF04F0B3888ADF9784586D4FF43A41EEB26F556EFB993
23A9156C7D7C38D17B4FEE9DE36886655B5E2AD9D33A0254259E2EF8BBDBFAF6
22E3FF89352258EEE2946B5254D323210E0623CEF0A2E3F5F5738501498A2CB8
B2F06FE3EEF5281B1B1D30EF2D15AFF19F60FE987B764C71E8B2C862374135D8
63A036F901A464DD481238B06E671E376B37D5266AA0AEC153958079B3C2EC1D
E524474CB8755FDA5EA462E4E9B9D8AEDF2EB0B93CD1002122D756EA0C8CF8D6
48C6D982B908FDFFF247EAE390B2AB6AA6F453546CB78286EDA94A6BBB7C6591
0325A2483501EBC46343594A3DE234436FAEA8D10D1E04BF18A4AA935BAF3802
8DF641BE783C532DD20DBB12EE55696B48B8D44FB5F42ADE6C6CA3DBAE8680DE
009978EF30A7892A6D21483E7088572F4B3F15D4FA8AD6E956121149D23F17A7
0B69406EAD14D5A81378DC8D0CA1EF5CCD3740F5E11A72CD6FC2C2F816B3FA4F
44152F53FFF6BF765973561C044D2D26F75777AF47E6FD46A8C0D0914EB2967B
3A93FF8C45BF2E5ABD540FA77079DB92B1F9B0345FDB71128756211906763CB4
C94B7846148CA82BC1C1B9FC3AA4CC73F1FEA0B9507B7A2BA75753933287895C
593B0232EC1944B97C702C43D92963DDAC46DE844726A222F8E7C43212F52142
238E099A20ECB01AEBC0DF1061EFD7980A89D6E5D8E384CA3C4F4E5FD28D6847
243C6D9D6B26C0F52BDF0DB1CB4073028F3949D0978F51107F8579C5920AA108
AEFCF38865B3EE53DA2120E0CF6D610FC9E6A604E47644F7531F2F488FF20C7B
A7FA6679726D22EEE50833A7E0CB507967745F85591112260DAB48EA4FBEB335
FCD82D6D6855D0D035F0BAADD07F543EE2DBA289C383B65B94F0E709D5A07682
A874DBF3A5B2328EA6DAD4FB594DB9AF6FA4D48DA330C86E39EC6990BFEF834D
E3B82E604D9AA484B03C521E89F64B9B4D40B53FF1E0AF9587F874820162D6BB
FC93C17231EBD4A7CF6CA1DDBA47293BE60C9B24D78DA80BDDEB603BD3106E97
D60B3972BF0771C29260AD30E60C967E7BC6434113961BA940D3DACD7A3B7309
F03C9F33A127C1B8ABDAA9B33F67AC6C133E1B4FEAE72524464E3501537AB522
64C6CC188F8385E00C22E746A13000A791D75A5F828DB21ACAB27AC16F21A194
4ED45BE5EB8F4DFFC97AF3E10EC4BBB433DBF7F55865A06491EBAA4D253BC9BC
AE6EF0C4C4F04C1A170FF57B34A7C75FFEBD9F8D98AA894DFAE3995CE4E23C56
B88586A6608B34C6A96CC26BA2A0BD59F20456933FCA64CC8BC7025D9A488E47
BA8EFAE7E836FFF2F751DB0CC561D79EB760C8F0114D196F09031E9B24C57C29
B2DF3AE656E56D17C695227A4C86F30F9C2FB8C376B572D99B5C63C11B76E3D7
AFA7E8A3292B2DAF4B2ED58874EAE5B6350F8194910480F0598F962FC64EC524
4D87E3E636F03ABCEE5FB6290E32F406629D84DD58D12DE8BBA18AE40935C225
9B7347E92A2A87F06C64245BE953D957CF838B7FB738A343B6B77E436EB2AA9B
DB2403F699AF2DA5C389C8422CFBAC2079EA5DB6174FBB0BE07D630D3BD85F3A
C0AEE12A62B652DD6A39F8464433C8F15D13C5896F2950D68955A8A5F2281636
F4D5CEFE787157687FCB1B88F841B20A657835F5C7D2782ACAA90896ED9B86A1
F2D59F02FF1612BD6400EE0DE215BAA1925A86BF7799B3A9A92A29D9F077D066
95D348135C27B404B1F1A4B6BA7CB98CF99B31157254EBF91EFEE42430729E97
5C593E064476BCC38E84759749A0DC4895775C2FF580954DCA286DCA75356608
D6C53BAB96E9451F7A02D78FAF2148020141004C680AC6D07D9F5043995BFC29
158602F5BC0D2643D201D1D632EB6153254C1344A4E18E8FB7C1C7FA123CE412
CEAB4F8C9159DA4CCEBDC6C071584BE65D9B9145A7E800F9751E06F7598614E0
4A61692FF0B3769B667D2EE5A3E9C9981D69CB981C4BC30D212828FE8961206A
FAAD95EBBA855C7C2194A220ADA241C25A89024820CB420D2522D6072665DA0F
CC8C78A81F5CF318BECE9297D53301832D8CE7596B6CF196E7E2417E080C44B3
0875DADB20ADF9830F28ADEE2C225BE79258E0D264D6135F885FA0B9B322A45E
FB42DC1A9A9C9C75E7F1281C6EC6CFA841D997D68F858B3C128BBC6C4D0E4DA0
0AE65EEA5566DCFEB6458F2F60F6D294F2BAD9CC8A0169293B7D02BE3B44A0AD
6D2C03EE90854DB1F85D141676343889AE3CE9F97B781C475FAB2AAE4122283C
A1349A39CB6BD93B8DCB92945F483F0EE38BB85150BDA11CB0D55159FEFE5DF0
B7AB1BC8DCE695CBFE6E522832D82A0DDB11B4FFB5272EB7828C62E05C1D37A5
38BE590B9C745BA1B152F288EE9F7B84148DAFDED91486DD0F88D795A30EDFDB
FD44F979C47969FB7091CAC1A67CF3390A61574043AAB91CC09117B91936A764
391CD2AFE6173536683AF8CA90DA25DC12EB180348010DB18C5F567482B4FAC6
D4718D1EFC4777B8EB3073B794AA75AE3EFC8BA6766346E5662CBF1366616BA5
A68E6E198F920C45237EF789C03733870D99BD5AD7B04622BC7AE6DD926DC3D6
116863411DC0096DCF419F94C6BE94C2AD117FC73EE00EF07A3F39BC1DEC8588
81FA21B6D67C0EB2404801BA8AEED059E21CF37890AD372F1799DA1270E9B4E2
E76E437CE82F8C915BD95CB67D0F3516B3F33B275E60C84042DFFA73B72B9F2C
951B94B01348CD7C07A2DB1C4069E4563C8BE70FCD93A1F1CBFDF5C4A2D5B89A
732C833AEAB5776B84D755638CD5C94C3C4DA0199F4813B0DB0F377CD545ADBE
DBE9F6AC940B2DE26AC7C813CB254B71ADC6CBE2D7B65B878F4E1DF6DE0DB0D9
B9DA4A39352C9C9ABC974EFF40B63A0555D01D9AFD1F8EF88F7EA2BC70BC3D82
FFC2B30FEA0D09C567CE1145237F8FECF6C32C5FF4146A7FC69729BF4E006F30
3EADF165BE5E249C0D9E9D2EE445494D23009AC258633E38E70DB4A9D1158C25
74420BC504AA52A1A6B7EF0B338FE7D931C2F15F6FDA4FD97192477FE91FEF48
FAF991738813DBDAB6A43F1BC2B6278D7CE71F90A4930F07F4927C4181A1BA8C
EB40D09F3C9DA3E7FB2869D759DC5790072A5341D0FDB8863A9FC06E026C58F1
005C738904EC9830F20F39CC74AC3FCD4CB41598006DCE83073773B00EACA28A
5C4AC1A6122D48B3BCF4E9B0748E7F0A4A7B9A862E70A90B62FEADC610867727
3FED62FA74FF9C3EA490FF5693731C0513A20ED79291479EFE4FD1B5AB8A4310
05E603DEC5ACCCE87A0D1166F2F5F3F3BF481C23005D2AF1ABE965B889043CE5
C0390E7B77714B3AD0085793ABB5129853D678790B66C913B6723977596FAC73
6524E2B89836A474FBA4F59D82729C6285238CAD806E5161D8B58F9C35AE9C2D
59B6096CBA609EE4E06F5D9DCB27A8A73FFB909F98CC85DBB09B6B247E29B451
BB85BC31F795942D5DAABD63E22F5A3DC8883F4792BA4E63A4F2D0D0D7AEEC7F
716740D5163D0E267B0F550254C213C58B9A13C87A66E74AB6E9485AE5A98F70
07EE3B0729110562B0C1A7BE4066E1E9410480CBBB679F8525B398C4EA04C035
E88DF8263E985B85A6AFB4EC7F4B6A33DB77E3BEBB48285EE5C83C428987DA57
BAA915D115F5D4DDA003F4BB9952E5E2704711069D42B98405AA1A3E87E89B61
D13D495D301C3D8724166BF01D8C286422EAFD54ABB65C41EFCDFA5CD8CA61C0
3636A546F392F4FC70B620483E1D6345A44E2104D659EE4CE273A00768DBBADC
3FDC8193FA15076D0BC82C747A990BA0DCF598CF736C992BA1CEFFACD5DCBC8D
789DFD6460710671D7519695435BCB58AD3ED6BA7F318D5167E0957F11A69003
D531FC88C75AF40F64AF445BA747B8F77910412C757810F44F9336DDF87B4E09
D56DCE64A65B36FDF7FF48D6A6A74D9CD197786C76159C56F8768AE1FC685402
646E09AF1EFF6AD60B6DBC04A1D5F913F0A6111F64FB5ACEE06685E31EA2002D
E228FE48DA7291E9203A55AA6E5CFE21595445A3EB7B6971F995A218DFA8681B
5FFDB41D279DDDB1CB8E1D94B543515988EEC210CFFD04129F025C1F9E99BB05
36578EB417637DDFC786B5D8DE446A219BF4A62C91756D62E46FA67E5DB3B14B
5BAE576128014EF3F2B74EF79149B30822FD71981DBCF775B63425D96BA43F59
8B62206246CDE5222DDC53F30A562822D8E3940E9FFE78353F7F6DC145942155
6DBB6AAD446C50F1EDE12722F9712F9A8876BA08DF93C63062D09B20D587A6B4
AFFCB48091BBDF0C2F372C2CAD0E5370DB23B4211F43739EE37AEAF740797DF5
80DA0E0A4F9FBEB4C1471632170158DFEB3E965EDFB5788A4ED8663F5F311AD7
AC37969190BE9BFDD25AAB97152A605DB1DCF114004963FA1BDA542787065C71
62019B2B277872308CB6ACF83DBCFB129809AAD407393824EDEE53456982EC17
4DAC7D3EED7438FD987EC0F798D80CAD97EDB9F6C76D08A1B75747FB022A701F
AB10CF309A831D4A8B32046A6017D844F816D7DA7B0331C54B60084BAA537E4E
C86BF1C2660D9663759E2208BD499DAEE75774054AA999E13D1DB9DABBD9ACCE
351295B2DE7CFA3A0FC4DF4956D533E0A067F184E9599E7A32BF6FB74B4372F7
92B53ECE76EC24F01B0682DF750770D2D1989AE4C7C601DF2E3B2E973658A1B6
F3A6AEE274E095EB5AE58A4F1A23BBD4CD4815F9AEB36E7B34C5A7468AF67184
EF78E867EA2A34611B6954E1ED1BA0E3778676CFE440574BA53074737F9CC0CA
39359C32BAE8C157267668A760032C964E082C3EC3A4A4B531064AB5244739FB
DDBE50F563E6E298F2ED4FE1E363F34B96F32786AAC4A2333689CE439A848530
2135C5C7FD2680F5E4D2C05D5DAB2890E634D87557841D4E8DCB75E90B92B860
34A3CC529EF6013D466E430799341AD02F97F82155E6FB8DCF7DB3E193A7FE11
5A42F54DBC5D6FB30722D05E13484FC470F6A2DBD64B582D92244E26F974B151
C2C61B924612C160DD94C4763107D3AC0F6C5FCA99C338AE56376366879492F7
E319445B3C8E91AF3ACA0556E24897429D4BA02850223F360ABEFB00CA0E4AAB
71AA02C34361B7A982FB198CE99E6B6D83E8AFD21510A1015E62FC890A7D500D
746C54AB612CA3111694728D9B85206F0B1151FF9D36C1E1A0F3BD7A11F99E7B
4033A23419D9398D67EF68861AD2C15D62D61A636245AA53290A3A71696A9D36
33A61AB37A6A904BFF5E437117ACA86B49E983827939E35613998246B5D94A36
029B2A74A1F0AD58DB8C3986EDDA40EA07C37E0D3CB7F3CDF56892452203CCBC
A27D2BA44B36D1E39162533AEED4793556B98D3CEEE4962E3E77D71518EF927A
DA828C3A623D7A1255D162C58530E0C6D01937C803225A1847C8CD27AB9490E0
AFA9161595BA6E0296EA151A6F37625716D5BEC0B7A2C12C7AA413E93BAEFBDA
EA5890CA94FC8FC1D835D155C19A6DA5EBEDA77EC9DCCB724B4DE3DCBE9300AA
361B1F6DAC954353AA7D3AE953FF82CF9DB038A0CA58644BCFFFA12CB85022F0
2D7131D569ACAF0544724C11EA3312DAFE93317C6271E4F8345FE60AD1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD8BAFDAE0AA6B50EF
8231DD2AF57730FA7EABD3D44DE5C2197CA778FFC85BDDAD152563B5FDC3F629
8C4728C9DE9761D7779EEDD1B150262BDF03C3F60D09B87E6267D7E5E43705D3
D364B37D06E4C153BC0F8F8B032E5F26D2DE7CCC0E927EF7D853D4E937863F0F
CCE5F79063649DFE6A9C36877D0B777E6FD7DB119677C74E3D0B1335C6106BB2
2253EE29D6495AFABC530EAA092BB709FCF1D2F4A32810A3DBCED812EE19D10B
0E690DB204C2CA3B5A07FB9A6A1768CEADEE7B507844B55E4CEA9D3179759BD2
0CF8F5B58D1394CE6906BD2ADF6260EB9A2A59A536E483B745488A5A82E16393
CBC17F406328F383F2BBE3B3B2A6AA6A1FEB26D4A1B4461A009DF7C2666CBFBD
B5B9834EC15C047FDCB4E0CC99AC20DC2E5181FA219E49C2F4D2C8EC80D9E187
F9E15825F5721D388B5A56C9FF8C4D4EC2F469549C5E2F6230337A4F7893FDDE
E3C61F3EBFDD15A822138A17ED1C6B430CFE77568235A193F57FD51F202DE629
4C204F576397053840C0109C325E5820D3C9EF826C2CABED7C5D4C7454D57F36
70A11457E550B1E5EB5E4E06836768591BD979D642FD47D7677CAD5B82B4548B
CFE806EBDD7A96133B2E41002B812F8E1AE5C8B8A9DDBFF5124566BC16EC1798
9C1052F8E184590223348E583C314D27C43C08B7B723B9BC4EB7C9538A2F8957
45068B89BFFBB595EE95F8BE4F058CCF35A29367992E5E5777F048D317210A67
91D432094998B144BC6FC564BA50B10D8896713764599CD8634344DD66EF6667
3C1CAA75ED1BC7113F02639546C046271577CDBF8AA7BB7B42666551A0531739
7690661D7B3C6CD036635AC005964C989FAAD34A1C94F15DA238A58F1FB3061D
B6B3DDAF549AEC049112F2D95DC0D89B3135BDF2BD8ED2281DE318DCB1B5A6C7
99895F16D274E277A7FB8BFA6DF104F63B78774431E6906CD36EAED81B0BDE7E
973C70180E1D12848546C36223A3B17A6E2AD43C7E98803D291EA326071309DE
0BB4DCAE71AF8F7727F737D807E2CB59BD01C1D26808A158461AC96DC36352B2
536CA59253CE658C0F03ED3EBA0348F6096EF7753EA539F13239B3DDE5083519
D0D34869D2E42BA1351FA7BC47642A19C1AD14481B2B51A267F1D2DCFCB8375E
856D321E7A99529CECBBAEF4879B8F6116D120DA29220155085322A408B5FF20
CA2AAB56C447B58D3C490777C30476CF9BD30E76E0E84F5F401CE18E37E72DF1
0AAC77E7B114286C3B68D4AC0396EC2B127C2894B02840EBCED897D3E4F629DC
3558E7DFF3379A0A4D590AAE63A705A9D11DC2C1CD378258728D59BBCB3FCD32
C534F0276C074DACAF2902C20BA118C90D0ED27006A83C04069F430855DF1F08
3E739CC9BE938C121E305B83ABFE4A1F3BD1B8490BBE80F6E45E346BF4C4B8B8
77F6778991BC0756A8B09EDE8F6C30A2362BC7E5656391E6D986BA910BAE371E
4E724CD85BBEB3817AB6AF0226603D6AD584EE1C93B805A2B40E883572A5A463
C0C8F74EF8C973BFC0C8B9F1996E9BB66724E0CA78ABAB862AF1D7550E5E7E67
87ED19E2F71217C246E6322E3D05B4A60CA6D94748EB6E09BC32A065F42AF72B
FBB45B9DF9B9C671DFA31D602CB719532794EA313841163051CDED4D8E41D46F
36B33E1B2B0FE4CDB6A6F516ADAA1123BD889A725FB835D4C27FE8D5986251B9
32C9E97DE2ADDE82CCA64661AB409E37B7CFB3EF9096AE49BE13904D8EB67A97
5BE804C5563DFC3C67C8166A935E2DFDC56E7C761DC1D072CD01B49DAA9AA780
1CDB41A857C054757ADBBCDC087429A3D69116CA81623F954A04003E406C8AA1
33F7AB5AC3000F952E0666AEEB60489E43D04D61E2BA368305A9155D12561B4B
D1F08A57C19D69CA6B3313142FD4E4225717717DBA723C4309D78C7A77864605
65035BED5BD24979EABD04B0BA1865C61A583F3BAA7FAFC3C309A8B200F0F29E
B692ADE586B8E56F0407F1F9DDF05CC2B68AE83E5C71A6D5833EF5AC57C32EE0
2DAD0A58D99663F85BE8F17A3B89BE9609E857531F33227904D8D757B2D3D157
CA6CF67E7DDB0E5570A70C393231DFD028846579AB2CBBB8A87C0939B7ACDCEE
DF545652FD0263765A9458C6C16660096EB128A08CA9E1CB491AD747D7810658
7E5944FDE7CE54852D947D57B5CB220926BC834B1646B70235BCA2E89C00FE1C
5BBB67140F327E10C02B8D7AAFDB3E2C7FAB218F58439AAE1170DBDA9AC3B337
48660AD735F13DC9AC40DC159707C99A752D3FC809DFB4A1DD266A5E734914DF
FF559B73B9E97EBE0DC8DB890D11DED31215B78DEA1708E447E0C5D78AF5B29C
3D9E18A27FC4CF05A5F078CF7BD2AA43A6F26735142CF561761F69E4FBED1827
5E45FF2928F2456CFC3AC351A3DACFE29416A9AA7E3151A70A57909EB341DBC5
23ADD4E12A3308A9887E9E7F77D6E344B4029236250C21CECB01F560C99A5F60
0C1712BF9A5E2351E3BADBEFFA219CF7E9B6F0477934A009A070DD833BEFE931
56F545C40DA56736E66D332AE7AE9677BBF810EBCC680814B3D59C1ECEF77773
82B772E494919E172018B0D73FCCB05924B33DF8DDFADD039C0627468E4BA725
E21021B82B84B88D6331C70F48BA02FEA751D326C0A25FFA4F3241FE1E28E0FD
B39562BD225A48FBB40F3ECDEBC19A3AD8B321553D81EC5AAA31A6791A559A80
3CB78491A65FF7D3A2DDD0677A75868D7D4C2B29A63FAB2184A2A1A77616F16E
71DB01855F65A727A3D570B482AF112883EFDA45CB16100E899C770ABD7AAFCF
78B5AD044B844BDBFF78EBD97F40F1B3B4DCC4B2900D0B4C3E6F89363AD5D292
302CD7DAA18888C8F8AF39449C06D6558A8DDBB3DB0C7D5F1F41C61B5D12547B
77C35A1D617BAB3C6DA0E60696C499C3E9ABD27F163BFEC9A69E88EB691CE39B
123A85001A74961A17FFCC364A06A5724A252400D7255AB3C88C0E9A014EA43B
39904AC4A1A00B0BD3607DB7466631822AF1BAEFB301E6900AC2B65FC35A57C9
03FB8CB1FA267164F4ADAB0D574488D4B9D678621BC73C63FC2D8EE1B1D3F803
1F677CFB783BB39FB24F9C16AF1CA3BDE9706880F3B59DD762C2C4444FF6D0FD
1A4881A34FA24BAD29AB5539707FA4F66CA2DD0DF116C44E4AD80A83201886DB
B83F6FC35164F4F663C71790516F77D4DA319B068F896B3EE954F5A5C0C971CB
DA5DF6A215D767D02EEDCB86711BA0DC2B193419709E52E6A095114588EF23F7
0562B13817D749424D3104F86B8285C10A35872FB7BD0966200D45200A85D27D
90A7BC5FCA56EF493269B070A435680C1F9DBCF3A067277802A5DB62E9A2A18D
E07C819E94F8715C4F184CEF99EFA20709CDB2404B733506E7AC12B9F980E959
908E1E9E3FF3FA019E52E4768CC208D4D5EDF68A5400F08DE62A8BACDC211A5C
2244B70FADDC7800CF6118D677EF4A3E9A6542B4291D9CF9B60ED1A5426572A0
F2E2DE8C013FCEEE2EAD0AE6BC9EEB6AEC573E7C2E173BDD0A4632BB24801994
FC6FDCB351CA1860BB82A162DF3B9B7F1D0A9D11C56994104CB4D353F747EAA5
D47FEE53720EA2953436862018BACA21C7B5BEE249399FD08CB1586C5032BEE7
0B05F7F43C1FBE95C64AF7864CBDB80DC12A4B7D1427772A54235E011367B4DF
CFF2E1D062B1B3CEC59C08C296AAF9B518E0B620B2604A0F02C3D059DBEBA1A4
DDF347787825DD49D11DAEFFD259385FB62DA200CC203D15AE5D01B5747EC15F
6E5BA686EB8295A282705BF1414AA87E10E652D2009DC386682938DB4B1EBA86
93B1481B4F32CF7A3505D4A2A876EDBE856EC3A82F34810C68ABDAE536D9DDEC
01178E42CAD202046019A1A67C9A7F757B4ACC3149D3036119C2C09BAD4A9C2A
895889F9D505B1556A38A0B6CF7E1243FE9BCFB3DECDF4620C91E7A1654F2D89
AF7D676499F23D26B47B9CB5B4171C6FB0709098A8F08091947EA1751B1F6385
32CA099977DFAE9E85990ABF2E14210890DE24639E116756AD65245610E87023
F1C0B776AD5B2483DA0BACB63D5A1E5762A219778BE70CE880B267FAC50E581B
2DEAF6AAEA5CD7E277B10D2D2DC10721300057C54A9E923A24C9335691C39E3D
79A6FF2FAEC3DA6CBB89A262DD3265A50CEBE46429B371EC7E46B6E9DA84BDF5
CAC71F4E90EE0661E9284998AB98F1DD4E042B63E257256BF0A7BCABAC49BC4E
D2413E58486776B00AE3797BF8BDE5D7CC3F8237395F6037F0180333B6DDB494
2225BD45F6FE01CB6C10015841B66CD6BF4C715C9F106D609D03E27B458B4CED
0D370F9E9BEE72029357C85DE0838FB8478B1B94A3F1AF5D53AC484C532C38B5
B60B749DF353AFF7F47BDD61C91DA2DBEAC05FC1086E047F043F4D780E9A34C3
E671B402F789CC1D1C0BCE37431DFDAF370FBC83FEF287B3E4A21FA289D04F0E
19A725568E617A5712CDFBA57001DE299223DDBB4AF0ABBCBB6E98D65B9C832A
F14A4F48BC1ED35F486642B1E5276AE3D72CB17D9A6035C6D835B0D228B5B6F6
33400B07640797685EE4F508E2D17CC39C6A7806AF9EE37F2AC8310B01E2D168
E07355A914EA12131ECE5ED99936CF709C8A3949D0C8CE4B3EEC40735342750D
453A14CA49E9A661C67235265548D43EC1DD3C9E08CECECFB5F6CBB15390181D
330ED60ABD9581F439C49D14BEA637CCD068A86773D55E58D5416C8AD2804C71
56ACF5D74E66F11F3A1CB866C7AB583ECCBE6FE0329A75576C15BF0A537D38FF
2162B2C27458AA6CD35186EC4B7318A60AD493E6DC26B83665DB71DB9A480D80
703C725064A6E5EE7F960BA25C294762580CF95CB8BA8EB4939E9875835511AC
6397594F8149D46E38C9E5F803E0E1780D14C57162531A16AED4911B438509F9
99C499367FA0E0FCE10496DB9EF16D81BF51E71CC594B8E794144A860558ACDF
9DF1E160BD70782C6538E8E3CDC85BFDEE18B469E7146C91E45274748C65AD4F
2DCFCD521B2274A869792DEF712508492044E24FE224A14BDCA9C8A97289C5B5
B2A3F2505070BF0E1FE4B60BBC2102420DBC2F6F6F7B9EA9B498E23B56178B25
1BBA1D812A10381D0456CC203C348DD73C1D3BFECD712EC46352ED1B976706A6
AE560AD6A82C3B0C66CD40D03EF76649A6AC929DCD3FF06B9FBF62FB17E52CBB
C2EFAF3B7F0B7478DD477AEF90C0AAF406F5049889DCE822D58B48EFD185C651
E24ACD1D0A7FF74689952C838623B68519D11ACB5A55AF22AF3C69E25898FF63
90D4F9D3AB952D812DC7EF545B8A2B482868D2A9E4FA7FBD5CE49A470899F4F8
3517B5AD2EFC4B2AA279B06EBE1DB8826B9C0A9C6D69412B72CC0CD7177C0206
99005F6C0D10D78585740BB798449CFDE209001F68B04377E9DAD87BCD6759B3
DDBACBD0B0D742C6CA069465E5A64A0E8A150835751C717DAFF655F68920F678
B5C4584A1EAB39443FB4126192FE590A0632416E2316A739A2703A399BACCB0A
38FF9D6A22E66F10354BDAECB0ADC7DC3FA7B24303B3C291B173D068F646C9AC
457A5099FA95167ACFED3C707D5771C74A5837D993CCC2992E444218A366046A
1B947C681186DE1D3BD3710A1EB1F5BF62B71CE33E468014DA1E445EB52B2BEC
F66696392E1B71AD0FBA163635704071DBFFBAF1675780138ADC47CE982A755D
DD349D56513BB6521DCB5B18875046BF8CFEB3A5D0AC9CADD46DE48B2BD2B51D
7A4D3FD842EE498596F3D15995DBCACFBF885FCBA160DD6CE6A7A490C010E401
7AEF12AAE3D45E10BD736BF7520641F485F51330A99079ECBEE429138DC66B96
D6CB67FC2F45D36B651BB1C908D2103181F00DF8DAC3BBD7148B437B73C9FEE6
DDBA443FC0AD87BFB1ED2F7192209B95AA058750DF7E7961AC02E369C920DA89
C300920143A620C2D3B44D3F90F59A766CB6063DEA3688E60428B2CC42D69618
FE19D81E3E19A7C96EF9C08116DD8F50F132F8E84B668D8553E048EEDE577A5D
54966A664A240D7FB8F5EBC8488E3385FD6CC94B32A556244A7F1526D78E6D0C
65D20B898D4E11903C37DE3CDB0DD546C8D2E81805BDFC625C5717D4CE3E694D
40620979205726FA57C6450A6EA03F60DCE93729098B15814D6B8746375E4BE4
34590D1F8326FAA1085B2B7DB327D6D4AA9F887D96DE53F4A2C4AF684E68040D
4564E5A47434533AE9A2134E2262621DFAEDCCF13D2B27ADBB254F03D7E57334
35AF41AB5AA1BD5C3AA3CFE0580FDAF7BAD0CA2AB966D475DF71852022024A3F
966175A521120D55F0EFA152ADA7ADD918D45A1AEDDC8802374028375D32CDF0
4E98004FD6E50186F11C5AEF48DD6BD9E9151B4B704964E5695E4E519B8F99CE
6966EF22DDAA97A2315EA8C071AB63EF9CECFCEE020C7270AF0954456C6920F8
891505A3F0D710AC71210359989F6E41A0ACEE38A655AF0D0A563D38ADD55AC7
13D204AFD65A7E44E106EE0AF417C56C378E8C16EACC72C00DCFC9413A4A09A5
5D76CF38724D79DCEBA0DC5F0335C770ADF03B54407D4E675843A050076676FB
C638F830B211D979B7B9BA270EC46983AEA2072A840862E9F3775CAEDADA0690
D2867E15C4C86957018D427D725F48CEAD8BF036B382F73BAF1F52EEBA7A9186
709E264269259176DE98C0B81A75C78A77CE2BB4CA891AC8B6BF30DEF5F3A5CD
26C6DCD44D62EEA6B5033525C1D286EF116C277C4C208CF264E97950923955FC
C90BF3485204CFFB0FEDA09991D35195F787EC032345FF5F13462F4D7B345C73
0E7559809666F79951A9F9DCD1BE4F987CEDC15DF8804F8A82B131363328DCEF
6D653A038DEA61359C5EBE9F735FC5D0CAABA3E6E27059E16A91DED9543E130F
44806B12AB7E1A6B17B15FA30B0F0F0E993FF236FE5B0444D631147FB95D1B21
F8B1B2EAB432715BBFDA58999084F9347B630913D8288F0419735DF90EBDEEF5
6F44787F6E54B6AAC17266664663386CCDD036E32974665C1EBD1FC1B90EA0C8
5432454F1594385B2AF841D9A43016FD85CF9289DF78EE12F3DEB4E33DCD967D
167E99037EFF7EB6CBC34FDD4C97AFC7CE9441475183C8221AD466A9C2B7BD71
71591C710366EC9E9E9C1D03E2D3F5E2EF72DE51178166EA60855627B34B0D31
E35E38FA636A0921FEF84FB08AFB198CEA92EDD3C90F88943A5D20C4D42F2183
DE74034DDAFFC890CD8BB912A1C704EC14ECB88F9D24D202865939AB8DE6E2E5
019F48C3E3223F9E340C65E7A99EFF163B7FBD24DFE37E30E8FC47F6D30D0CE4
C5E6DC22B2F397C1B7A68ECAFED136682183CB86E49BB5F3896887F0DB0C1466
2CA0DEA1F18A4979984605F64C282842E2ED8FC597B470A42CC0388738CE4B29
55A9C7950E80F92DB796238C985A124A3B38F7BE6389337CFFF9DAF1BD3504C7
44F5E19A7E7F4D8F9B18E72F15F0A5CC39F66641FE768D7165A2C7A2292E4DBE
26E76109D539C7B73D54FF1B0E1C626B0F86AA71C02EC7A9A57E7901DB58A0B4
11A3952EDBBA3BFE050160C51E38C0C751DDE67D9ECDCAEB8AE755A41AB90F0C
EB9B96FE8BF50099CD74D28179BAFD3C8162FDC7AFAD395E9973BAC93A9F5E95
E83543F29ED2C0E7E2EE6A386F7CC94D2DFF834567C10D3914453588EFA50D47
8F58B608207A786D5B4983594D80464C24F7AB0FA91DBBAF0DCAB85DE7232525
024FC893BE554137FCC3D181378141593BADC0B6FA3628B1EB9EAA51B861EEC9
48584C8D5E4321963198FA99C53536EDEDA50ABB2E531A24D1567E37C3046F1E
7824AD632A4F12434D63EC5A3E0ACD13B07DB2B87F22977BD7C720F24E9D390E
F7866AF284F220372CF101D2820C4B919D08D7F4CF121C933B7A25D4963D227C
4262DF8117E481179DB35F59A5657B02F4E7CFF254D5C9957684C77AA4F6B5F9
FB68071F03207C6DB3AB426EE63D2647B8F925AEBE62E9900BDC9BFCC27AF278
5D069A19BD7C05754EF0BDCC8B70ADC8B47AA85F49A8C83174A9AE49F2269083
E8425C3739504F93587C8CD3328F0DC964B24668DA2312AD7B497CE7CA888BA8
8D6EC9E004BBCB58562AD60AA8B272C0149E7E4219CB3835F4A9782A069A9B63
DCCFDFADA4053E2766F605A34BB73E20645B7A61361022372E4C64AD401D1C68
D4C7921E7891CAAE491149F05398A961E709AC213988AE1E6FD9D5449B23D8CD
8F1C92BA6C2802FD1A1822C71F58EBE55A7EC3597827FC29040C0C3F06835537
8CA104CC80EFDDBB781D59E88127C87FB94D1E0B609B99EAB171FD8E6B12A890
3055D53313DBD1DE6C8937D66B3714B8E90F7E19930E724352B2DF600A22FCCB
736268C30F74F798B3EC272FFB4A01969BFBB8C47A097279C543276FE99692B0
CD741F6513A4C596C3677C57AB1E920F32BFF91B2C6372E6F0277D8600AB7DB5
17D5BF5D79A01DEFD54B2F8FF931F1C20EDC6CAEEF7CC88C2D4583D5CACA9811
DCEB013ED92EF746B60D5411A2CAF037CD201430A9E6809A5656A5968DC170F1
FBF0E7D6E9929A0E8F1E6FC28B9BB4771494E73522C4099EAF7681973A349475
ED81D15A26A644743B53CF0CD7FDCF48A0A9463279CFFDCB82FE9730B2D43F1E
A571D30159979693734B16AB45A7BB793871DAB143C8E3DF12E0EA44B99FF032
F14D316DDD5027A67AD13FF34C837097BB9CE6169E0FA0C438956782496AD85A
11A5A060801815AC31CE230E6DD78ED0BF2B97A5D04136F429E128E6BB9035D3
61EBD801DCD03716586EC2A715E51FF0F344B58CB933AF1949307A201864D1F8
139A94680FCE37D2F442059147876AA4FC5142358AFC5B5EB34FBF42A45EF326
5EF16B3E6DA48B07068F8F0C4D6C5DC31B97CACBD16A7AA32EC49EA31641D173
9B576500ADBDD6E417841C242D395273D98D7A005395D8821E2A6B0A654E7DEF
B583E5CE0BE12F318FF2A7412E2CDE8951BFAF7E2D9A34F9FCF6324AECC25726
B851879FC6D340C9839D58A343A77354FE9CBA5BBBEFDF46CB3A5D2AB2CBAB83
3DAF3DE7742308247D755726675DEB1BE18F5E9785106B0BC17F2566C049E001
A92A30A0787B15ECCEA3B72D0C7C3AC603C44D8AEA1F9821E0124F9AE3E5A1EA
6D1F97CFF4001BD0D721F7363F042E35B40B02E56CECC8F35AC4EEF07A5D6422
EC02E9D32B30E64D450EE00DA53AC215405AC422487A8E9B4AD73F4A1F36FFD0
7328565672AF14B0537579016EBDF3B9FAD4EDD7C8727762E782ADFC4365F9DD
5FBB5E4A42C9D98D720D7EAB11221BB27EA7DE47FBF3966C5068968DA1203591
57A7D56E104520C5A5C9E0574E31D36273C2DCD9DACC9526929D38D59FF6F7D8
D8E056F558C1891093A9BD8083166F10B1C68F7DACA6099DA1C94C1F56B90977
CCE5BE60B3AEF9BC60C1BEA9DF0505C07E64B2D4509D1270CDBEFF01A02D9031
182E2BB253BCDA0B89BA1436D90E16006762D512F706D690CB0BE3B497473473
197739E55C66E4B7C85F08B1FF6D94E602481654E5378C8D137E3A872753CCDB
398624867731416D6C47683F3A0F55818B8E0027068BFFEA6F7D24C8D6E6B127
A3809F722AB70CAF1EA3BD4A15599BAA261FB35AE3BEB5DD0B068D6CC6DA5088
48F64802A82227ED893709CAE5C386CA0589D209581D7BAA6C56BF31F4584EE9
B294308E209ABEE7CC71F8F7DE2ED314C382F3339B550C0E871C2D635643CFD0
A3B6BF54DA82FFE96C0127EF538AE30297EAD23237F19552EDD28DF774ED1571
948278EA9C45C38FBC00863EA9CAB8FFDD1DE410C2667F4A82EB71805B8D37FB
9AD971F6898F072499AE66D09F4EE52F4B02A5C2504FA68800E09CDA5B195BF1
CCC99B2DC8150969F0CA0EA4803105C475E5D473CF3CC630343F641B0CB2CFBE
F104EAC29BD4E6321C7AA2EA4029C7C87BD07EF5F7408424993CB5D9CBDC8F85
A2C24CA6A9E6AFF5F78981CDB19273A5C172F57DC4971A485D1907DA81561BD8
66436AA7E2D23255904EF1C504E080559CA05541B04921F0B535C66EDDB9645A
6145863EBDF0C4AC4D6A5A79F8546B054E69C8F10DA12ABDF5C63C5B1602823B
BFC0C03B7A421A836ADAD0AD5DC07343C220FB3EDC22E56DBB5C5C335F34ED7C
C1BD20C7AC37A6D9E49F46CA0B3AAE98A934A36A6D12C8E9A6787E86813FAA0C
5F1ED2BC24B77548F1E6C3D186FADD7D7ABF910EE4798D537E8542C599D4E6BD
FFA503E32448E22A58D3AA008B2D94985A319C61569E9A7843EB1546BA7FE324
09951CADA934F8896AA603702EB0E302764D00203C21F1D051AEDD11F65FE0F1
4DAB924ED02ED194C16B0DDD9A95990FB45E3B2D0748BC03C738B25A2A6EE01B
5A0A6F29AD66A67B1F48D6F212306511C9CF98ACE7F8A4CB9C06F5A2CEDE9C68
F323E4BEB6A684B63EA0CB7C9786C3BE9F3808FC75BBF201A290A90AB4398224
D50B111990D1F4436C860DA78F1A51CEBB0E63A5EC278081506796D4A5CE9125
8B1C760B7B2238D2EA8400601397AC6124220CA8F7CFC41A0900036B4EC9C75B
6D3B831E529B512E85E0C64703179BCDE498C4F428617BADEE85508F32ACB42E
25CC41D68310BF94BF14C091BAD0A2BF9A151AF0C80289B7B56A51D65D864AA6
4BDBDF476FDE09E729672FF35872BD436B68669787534262EA1F054D8C429DA9
7009309F8FF436B01AB54EE13E747F63BF5EA22B181FD5598D181A89C6A256FC
5FB2E6BF0AE329BD9E9393DA2CAFE45B322A9DD2A9B8A201606B249F1313845C
905DEC350B1B040870B95BAE5B6E975CE783ACE9F2A8EC2DB98FF0DF78418269
E285216D71E78C341331DBFEFAC07D2DA7DEC96698F6EEC8949C19C52F175EAF
3B7101AF39500AD4E955AFB7FE79F11FB59B0CFDAE2C9D3E76CFE803EEFA0A95
1F6839AAAA92BE85FE2786437E6FA70BA42807334C30BE14037556D6E9C3326F
8592F1A8E23E12340D6D9627573F609EE0773F559A2CC00945A1C0134494FB14
D782FEB01B4C39C37DE56BA2662E21344E73C74148C1ECA9B351631DEBE79B37
15AD941042EFD4976ACCE231CE259606B6D6E9979556CFD400721EAC67C16221
ECCD01B9125DFCEE38C970B22B6E51EB375632C6148404D295903E9537644EF6
4DC837018886835EFA848106B3E7B9DFB00967E31AB8CD5C30BEA91D1FF042DC
B7834429E57FA4713C65620D09F8EFFE7766EDBD7CE06A64C2C1488D3C0DADC3
61309B09C897726DC616466250AF195D30EC95E1EA1AEC746CA2670A1AB63F6E
EF2B51E687A799BAFE7739382EB296E6C8B20081C7787B17C4355E50196ECF3A
AD191B3BFC1B7DD6AFFCE4C235D8970A557C1FBC7CCC7026F32A3ABB40633CBC
2FD632625A2D058F575C0471DC130593C9AE67ED2C7F3AF3D38DBEA5BFEDCC42
37661291146E427215C73BEE72583C3E61106623EADDD430C9F56DF134BD10F6
42EBD5D0D2346DD674E1A2C2E93E324FF5545D8C50028DAC3A26429CA87F5206
9A461088582B87D00D84B6D0D77694EA79B24F9D04CF52CD03FE17B51A8448AD
576ED95FB703283EBB87A6B251EB9FD654EF767CCE894518FC17FF79588A0DBE
F3074585935A5EC620218AB3D93893F5145517C99F78FF51438E523889DA95C7
D05181869773DB9DFEA02E8E476DA2FC0DD49685D7F1292614AE455A559B87FC
D64872DB778E6032E32434E974FB408345B5930509C92F6F64E38BA8E3AAED78
A741900C9DFCC0F7FF810CCBA0676FA6D96B2B8B455E102C47ED8A5B1533FA6C
857284FA455B188BD262EAA22D742482D323E9CAB548A54CE03A9B65195C436E
FD3C8CB0AA58116DF288D6E8E3322E1DDC8A33BE6B634A1A283529BCCCB72FE1
CA257A66A8A0D0924876CB2EE13320B971BDF3F017445DF7E2504458FE0E4F8C
F4EE7E28EBA16E69F11AE68D41FC00EACDC65E3910528202FA9F634097AB5D3F
6A1F4AB71324F1D7BA363C48EB2AF2C257931CA39EC615D544A14C90AEBCF65F
7C1BDAFF8FAB9E9D073020033A9245B601C7FB6AF5FFBFBE60B009B4E5ECB496
6369BA17FC4B2D4CE62D938505ED09C4F4A17C79BC01540BCE1D420F1B6DB7B3
EEFD6F15BBCFDF72B48E7035C4F62B83750DD08D70A392BE91F8D48FAF8024F7
A43ACB8F8BACA88420D6805B2658A62B5459627E90E18C6E36B26043308DEB1E
203ADF1A585A8CF26D5DC4A3E3A1CCCFEF640B4E3BD27BFC2B159BDF2686AB32
1259BA5CE5EB169B3C32265E3CCAF3E0CEFC7DB05EA957341C6849A03C57FA27
52E5B573AA2F2DB064650C0437603AF960C18687A0F99FD361ABED1A008ABA1D
F5C3C012829FA69B8F3C4C47D13B7A5DBAD1FC6156F5745DCEA783F719FD803E
6856AD92A1D0D9DE251CBCC61989BD6FC3B633179417D3657820134BBCB2727D
98AB779BD194DF3E8D00DEC969F6D476E7FF6C054F9FCF3C786A74A81E67A819
D186B5AB303B9F115ED9436E32F7BA1DBCD4FB460A23F1D4681D2E9E439B66AE
6FB3731800856BB4CDBBDA146DF27056A6FB24077B1DC1CF442A6B20D7E72486
5C4BD367CD95EFA0AE8462AC805C156D3ECC9161B720F3CCBADF5B6E41231960
A5A211811A11FD1EC88F9C00D81295D562314C392697BA520E686CAE8E165709
C2989342F71E631322BA089F9EBD195155B4CE2CDF5E8CA5B18BCA4A829E0B74
7F72DA5414470705440D7AD26369835B33D75B4FA2793D32C9FFF9E979D08281
39A315892AAC7E791DB1573FFF2A1DDE3732436E210C340BDCDAA614682DD158
7263C71A113B015BE80AA3095566C4CF7962A86B26F3ABD288551EAB1E80A908
52BD1D615D7C13715A3CDC486758B49C4B75E970B377127004A8901C1677EB5D
CFF1BFE1348861DFE8BF8ABE6C65104B2BC60D5F181F79CD098522BD0C65E770
94C778FB648AABE9032A56C806D6B1B7189188B61CF1AEF994F45188A6912DAA
31CAAD432D3CA676C09DC693197E568868C194D519BB154A43C811198AE160EF
BA2ED5754F320156AC7CAB9BFBAF32B55FA9FEDCBBDBF929A260996472109B60
99A037BDC2084A7226F447A67C4136E2A2687F8F1415387B024B7076861785DF
FDF64C141D4B24B3459EBE0A96C90FF8A2FF881E4C77381AE42DD5295CBFF163
CACF0F5E67BED6EB1F67CBFC861ECB77C4C441D0C9D794B990BC68C3AFAF2764
92992BDBDCFD1910CF8EDB2F6CBE2246A9602C39DBDE76583D5287B773C304BC
7CE95AAEC6572D9D148A81B2BDA6DDD8DA8EC981599783CC8E352EE7E2981323
6F81B2A10790BABA0E8BEA9EC61B7B5E0DBB3427330EF382F3C5864E489C9DEE
E4CF13EA3B1FD36E6DAAC94947361E2A446BBE73A00B97084C9676A5CA6DD87A
71CD4FBDCED13DE92648DA4CF1AEE0B143ADA4F1923A0F7AA6FAE574108B149D
E0D8058DBAD6EE9BEE719D20B8E7745A9F147AEE836E1AC21089A40820CC55B1
736EFA8D41187648168BCBF5BEF225B9AA80FFEE14BB730826568733E7D56FA7
B7228B80EE6AD25EDC9F0988E0E1D110D81DCFCF13FBB86467D6E2D20342774A
D2C3C8373CEB2CF2E0E3903D4F6E3CB5839DDABBF49F5B6234AEF99CD646E592
CF9DC4E503618A3EA23EA8B6C66B87749AE514017D7CD767AE50843A08F6F457
F3405E20379B0F192DB99189CAEA7FBB1EF722DD86A572F60256832CB83F4B7D
B1C2E95F88292E53897B6474787C345F170DDD4AA5592958C64EFE50170A2B82
985C86E6D4F7707FF787A7AB9320AE49D3FE7B47F024783E27537375977A4B03
92CE53FAA6D1CC6741AEB056D041B5F2C74A612B46E71D6BC95C278653482FA1
FCA2288444AC2466609302CE6539BA5138B20633F5274959D820966B12E365C6
E1B7C92F26E3DFE9ABBCF4AD6EC17EBC017E2C3958BE732B8EBA399B08D89A53
6F41D6657228DCD6BC6CD80524801D9DBABB173FBE14015598C481CD48C64908
9719D58FA8598C55080A93E9F97147FE094CD58E256025E9B9E6ECD27567D469
F6EF67439F8B12EC4EC9626B75B3589E461B88DD9704CC2289A0C8F18471D95C
7C6BD69406CA00BA396657DAB201F73D8402E199EEA861ADFA79AB24D20F7025
861B94B9F0479DC7AE994C06E66113977ADAE1F04A9DC94E3A6245D5DF935CD9
748EFFB6BD5FDA041275172D8137621BC5D068C54529A469B8DFC020288A7482
F0728165AA5DCED50D5B88CD656B874F78767901E67943792FE3046650A9A911
E046693DC45CB0C18703BFA0804DD150C127BCB97128EA0B55FFFA5E400D148C
16FF324D929FA97E9F075C3DB8FCB44E60427F3D466227D9145E4D220F7ABB51
E280CEECF9E30815579F10FB7DAC69FEB0A0A4A9B5878438B7C1BABC2F7DD729
F5860F24D2F8F78B4C54445B93342883A2F649A7ABF178B359CC590E0B8BD9CC
08C5C9785C936C6D2AF320F16DA2487F624AE4502CADFA2D48A047E8268C2795
C3A9421236880B20AFB985427F7BD193B1ABF97AE2AC2AF6EC288D7CB28F3AE3
98CCFCD3F0D44480716356866F41D87ACCCF21119319A96A36999CA1CDAECC0F
FB2CAC85C8D109FFE46D17D9477B6CB5FB06B746A8CB5DAFC6C5A5AEF4066A81
8D2C9E8EBC8090BC78A655349072BBF34E7135DB8A6C98B50FEA533FD7D95F89
9C14A81F8ADC0F8497219F1CD9588DCC076B97FD13B9C59787FB74044C3F1637
DA972844A55BC290A3F779A7A3884E30EBF313E41C20F24FCFF3B864F17BC379
2553C95CF63E5E519F08F1DB31251792060197CD075EF9CD4108831D7D2D35DF
A1F04A7CB01D3EDB066334963B2C695FFDB0B1EEC92162A1C00EAC1D2B109DDE
DFF024280652EF0D4EDEAEDF97A6ACE49BE65A86B26578EF2EC4ABEF54A4ACFB
EBCDC2627828F6CBA98C6EA9F8EFAE3C8577F67EA9CE57A607C6F2EB0C79ACDF
7CDD9C11F63F124B0F9446B84F2FFCC96FC1CD3D67BDB2559D380AE05AD80079
0707DB39C1D41E6F861E85A7025AA71093F105A4B893DC257AA3EBFCC2B00B0C
278A9C617AB4C3A63BD723B1D470B4965827BA09A6F1F8523E200FA5EABFFB4E
80EF4BAE0D2BE3F924745C0DB126AD7EAA66780B278E99D4E81BC6A89E1458E5
776DEC9AC11B749AE978BFD6A6365E0C18B67EEAB21DEEC6D69C747107791D01
73881522078440B45C357061FDD7914C7F6921A666455A2F611339ADD9EDA929
C0E49801D4FD1F4AAE937D8371CE9537A7BAB229EB9C840BC987C5D0ECBFFA9A
AA24708DFC2A0A4338E47E3E8037C5809CDC7CAA89615DEEB9DA62687F19D175
361B1FD1292BB02631FEC3CA5F359A8326A88D27AB658635F24394178D834DF2
6268C0F2E29BDD35A26F24268E9A70764D485B7613E41A1B8A04CBB407C09348
BBED30CC408772D777D88AF331B70C0D9F002B8F8E3E7500C0D97842C5FA9288
0F230F9262232AE8252B2CA838331FACA7FEEACAE678270128639A86DC6412CC
AA7E8EEBCC7503121FB0D7FD7D8F4C65FE78FAACA04710B2338101BF59E14B4B
C92D532EA889A059A8DD9F145BE59FA568EBC15F334C86F707814C1B484E2861
3CF72C4CBFDFDBB8462B69302B45FF80D8986CA09EFB0C0DB9880C9F10F29465
8D9D5CE67137157D1F4C65D356159B16F882B31F77894DCC154F7EE74D7ADC75
23A3A1E776E3B19EBAD09D491DAAD25CE8A4D052D61D8BFD6A925F6A3B0A04F2
90A07F886B72DD79AEAED09D5C3E33AFFCF22181C377562B54F285DA05034599
E4F789DD63F251C08DFEC3DF4981DC0A45B3AC51EF72086E64A9BD5C8E9D2E55
BD25A6D5F2B9C0915991C8D21C206C5668F38EE2898AA674EC9EDEC2D9497609
D2B5114D55BD8FBA389DFC795B589EAD636EC3EDAF30503C3EB73279D0E45F28
26EDCA5EFD9C66222E3F526DA795B19098F08FF0C62E2EAA12A402D0BD14F808
D828944F18A168D8BE354039F954BA20D945BA1B36EF097F42438974BC63BC8F
97001622950CFBBF5DEC5DB6AE94F6AE190B65835C984EA3EF8D979DB540AEF8
D79BCB7FDE00DBF2A9BB2E63B4B2234016CAC3013E5DCFDFCCA7ECCEFFF70C19
CCCB0FD98D9395166C5136271AE42F65936DF8274C59CF38B20041FB4848334F
93AF550285DA91189399B7474E6AA410450D30127B572F43157EBD6F5E7DB1F0
DAADC40A08553B28153C1D55182A40E3D70D9BAD84159691AD46D1BA0C1CDF71
8ABD47606588EB8F1BFD2F2039018A9DBC5765958E1CE9B76BAA1303BE0487EC
7F070DF3F1785A4AD84F817DA60E7EAD4FF29DCF7BB2F919BCADE100D7FE595E
44F9E48E722E21F5E459E7676C981927668BB7DF5F3119BCAAD33006C191A8E1
5AB28C82E7F84E00FD04BEF75F7DA5FA4E321145B1A6757CC0651AD3E70C792C
B55B9FD0CBB9638EC8EA08A78B067B9CE8207FFDABC084BC7CC7AE6A3AE32D79
D7CCADB0E0C72956198CC115F81DF436FDFF5F9C602EB47FBA021FA184B179ED
F5C4805A42814DDFB7453F878AFD7E022E6EE60A5177B4BFD9A525B764AE444A
2C9517DC5F5D1B29A2C7E73064D0CFD19CFF210FBAE9671F614AC898D3C5526C
6CCD74F4AD0F4D097E55AAD4E0AA04C583DAB168EBB5E40D2D375A8DCA2ED1A2
E1A5680B387B8429B1C0335C20843E42CF47119EFDEB0F4E8A692FED8AA52A07
E8C19DE903747A813CDB4A4BD3C7A20F33271A667BB5EA79B1BF0AC90A699719
8EDC8E4721A4588414F843E58E33CA5F451AD0426CDD0BC01DB12766EC9CA0BA
415A72EB0CD9888461A642BBD05EAB603FD469A09D660DDE3C19369FE78CA429
AD3B82D8711CA940EA369D00045DF2409595C8A8147C132623483332969442D0
F2B91AB19CD44CBD21C48CBF2CF8A82BAFF5188FBA0430B2E3256A038838971C
D76CD28F687521285FB4689E57474BD78965AB4A1C3C798B3F06448768127B23
8D4DB56689DE2FAE97DE55253C2B5F0CFB1A2F2651A840D5D7D852FCC47CB480
E1FAF3725BA5DE927E897B49C60EC6436BD29BE755B36054C2F450587BFB3478
678FDD8D92032DB51A951A1AA8CCC268D195A7535DD5BCB701F52DE48442D72D
9757597D29749251D4DFCB47E528497E764A5A5BFBE3C75149DE328796796DF5
6592F848BF90803BD53F31916C5F8C3284C14EBBEC93CD78EB06D6933B1C563F
595CAA5C879AC71E0B225CED6D142BF3FED94326E67A7AD137D4401DA1FFA6EF
47EA2139549BF087FEB870B00238B0EEC99C522CA88B796BEB3A7502E5E1C561
DB04E57EA34957A8BE6974C3297F11651F3718397ACDEDAAD48A9706CE17517D
F95D8D5E5149269B51601A4D9331F411EE9D5F74695BA4CC7D10C0DA1B532318
2486AFA6618501FD20CBB4DDF6A4996C3C46F401F08E62F891B542F61FE1C69B
B0999CB518CAC31F292C7FC0BFD90AEA12FDF2143B7C532C1F798C4239E155ED
FD172697990EBF38C139FE93F44E84DEF4680E62F910026EF9257429644B7FE8
AD9E90587E7EA051ED5E4ABCF99471DF8AD423233B814D1784059E9F73A5F68D
88E44A2024C814EAA86023BFD3F1E1B7CF511D60D68F4E55979CF8FEC2AB52AF
9B104CDD4C3B171C0CF62CA736668B042912941AEEB1B320A19501BFE2980119
048E0FB0EB3C6252590422135D33FA0FBC285D885DEF1993841E4026C8E242AA
0D1508016CBB577BE6B370D0F98BA0577FD600DC32EEB4F2A64D0F60B51FD6C3
C59A9CB2369C3CDAEEEEA7304FC5B5960B7B9B273D17CD78EDA79BDCDB9B4B0B
872112FDE2D1DE3A9C4D5F98FCCE024798CBF68A52AD366AD0597CC0ACF6C60D
EFCA50709450783F27A20E4FA78BDAC94DD74667154216E96C968914751ECB94
4DC699AF7DF1CC8CB278A3CA3B5B5B14EB706B41D2B174B9EC1A7C4C4C20501B
91A5CD2433E68816523393B3B3B6C0B0CF9C28C3492A8328E29A41146ACA66BE
FE0FEB054D2E5B75FF25B24FF1AF1BCB41070523B9D8889B963F577F8CDBD6A8
9838353C4AAA09866D5194B4E61C459143AF3132DCAA7AD1A3A1E44A3B96787A
4A8B3E505103F33CA45BE663CA7252EF799B8CE7CA7141F66E951E7AECA6E21E
EB29779D30380DE81AB8992F6E7E6C9638FC66EF7D7E65E75A8724EE68B1927C
9A3FD7D2456BC281E4915D2C927F92CB5FC37F5BF3CAE1150FEBCDC6B0D4DE60
E2B44E4A9E475D1BAC105347A09459F5A474C9B7F2790320DBE08B6D3E2A66A9
6CF6B14AC73B65B6C3413554F12908C2F61E796D56B3D14B42C26D88E182B01D
2B3493A51A0D2F4E760543A9225F3ABBC030F42F076E8F79389A34CF529224E1
747FDE5F70B865C69D2FFB7F003770D0B043F338DA4FF86C0F1076B40DF7B2C6
FB26FE93C933C34C64E6AABA520DB34D19369AF0351BB98FDC97AE3CFF6F092E
02B8A96BC5F49F49643AFD1D9DDA777300B1AF40C65BAFA9E7E1242E2891C03B
95B28C5DDDEC3532D874014A438ACC90CFAD07195E89B74F9CAB8577D49C6726
238055AC952B7E74BAF046A210C6DC7F15F2E3BE88D5AC0230EA5F73F2024871
88A7BAFA0174C1F0A7A5B81CF1BD4D6BA7B4DAE14CB131AD3B5D6A39305782B8
2C9522565BE3A89D222C3CE7780EA74702ECA906F2F337B5BD68CA068813D8DE
DA787457ADCBDA1B378BFA745C70D652EDC31474AE0C2A8B777A6E5636B64D4F
6CDA49721DD4B7EB9175D3A5D15610F989DA9EE1A25585BDF3F86451A51D58BD
1A60D1E0723E8B0A30A4B8CC240507E73351613223EFC831E454F8D0EEC9AF3A
14DC863E1AC8670AA11777502545CFA588766C810DEEC550BDC9F2394E1474AD
4E5A18855F020BF1392092B0F80E5B2A20DE980E24053E4C554737AD7D59948F
8C6972319C206412627730D59A27FACD18FE4B6605EDF1EF3FC14C1B3DCEABDB
0E92A7D26428599EED3D4F796B28F76385D6F2BE0C9A131C6466670704BCA41A
A47CEB03AF4410D2F29E9E94CCA720B84AE22E2C45A44673459FB3D8AD433AA6
DEEF606C091B6EEE9CCDA7BD612906E4456AE607A12D03B40487B2DAD5BACCA9
38D0452216B97799D5F3EC921E887972216C3072F62B157E88E24CE5160F2FA6
524BB7FBF05F0F8FEA1410E00B28B0ABDD850E11E9FD1CC30E6CEECCEAAB8583
05127661A00079ACB42249ECCE0B1818D1D1BF15B03AC77046D5CA3B95529499
5D4B6F21C3FB620D5FE41206593B6AC8B8D14D40B95BD6F207C578977D4A8376
6FDFD47E10C3A5DAD6AD26D09D1A1FED52530780D095E00ED3CFA1B9B60BD237
01E362D78191F7979F396E080AD862656DA10A7286777B30C1780EF5FD543E14
170EAA010A0D27387342247325A010FC44DCCADDFC641CA2A19A4BF2112127B8
341E6BB878B4D2200CF4F38EA3236F268190FBDF96FCDBEE43C67F9892B54748
F8AEF910EF85B6407E3A09E21B462808FC89A8C8AD4DC10E4E37F5B9A8C688B6
3F6EA8891CE06480AFB6D442A6704586E6125078E36361DF1A20FB4FAAFE11AF
CE1F63FCDD017E9A7AA4716A24CDF975CCC1602CCDD64F2EA3C8157455191EA8
36FFA130A078EB45B06B42C8C2D97CF2EF3F17F730687B26A9F2E0198D384C53
0DB3EA06EF96A47AED4CC48F123FD23C44347F286FD3FD4EE95711F13F19A5FF
C287035E4DE4D981282AE69A99D66D4F4C6B8EC12AF5D6D299CB94987E3C0F58
A040DB59D64008175CC689ED802F2C622CAFDCE4EFC789DC62AD0453EA9B3C0D
33962196DA1542F501CB93CDDE5C7EFE4F101574BE2FA4FCC72531913F5EBB36
AFAD088517973B3AA7EAC83CF88F4569F182C03280F1CC4254E3275E116D5F8E
09736BB4FFC06BB72A8B84C387FAF26E8FD7784FF14A30AB1E74D6B60723F966
87408C1BF8430963E14E43AD977D48A60DAEB1A8A084391B3135B73A432561A9
71F765B63ED1C920EE5374DA9DB50C511AEB94D6F31D48AC2320FB8F48FC29CE
A47E40CE29BA7976ED8B36D14CB8D8DDE59046A7C7BA03C39E2BA56BFB6526D7
4532A186C3D1FFEBE3CAE9F2D22A12F79118165E3B18694D23810C9E22E5DDAB
68334095BBA18CC0A9336E1B50A9B3CC937EEFFED7FF7B08E9FD90CB7BE85120
9DB612EB78C5C4D8E8D10CF4024F0C8A0288AAE24874F0CC38ECCB74702991DD
65FBB32409B3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusMonL-Regu
%!PS-AdobeFont-1.0: NimbusMonL-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Mono L Regular) readonly def
/FamilyName (Nimbus Mono L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusMonL-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-12 -237 650 811} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B89290699B50C1BF1BAEFFE
1F57BE7B5EA025241A248A6D4CFA5067A1DA6EBA4CFC940599BA3F3C934D7248
B8E4AC5816F0D2CE8B3C4193CE39D19FFFDB75254573173CB51CCD83C2F2D06B
2483CF9B07B21EC6F502F028C273887BB06DAE2AFAC10E9FD3C7CF51BCA7B277
B706E425302DC78975AC0E43B87073257A5CD7424B6865FCA89D886E8F95C4F6
D457623DBBC0D16BAFEB4C649F5D72B09B18502EEAB687E915E9B536A361B4F1
44C3CD4CC683B5F05A4ECB4823A5EB5179BB7EEE8B76C21B2491A97808F6318B
585B0BAD98F42FB4A755BCB74CD354F794C8BEA5B90FB9681BD5849D45247E39
930C882490230E1662D39CCA875BFFEAC3E79A78DE6E1298ABE9817AE98675C4
16220AD0D3A36580EE2F2A17AAA1246C416D58A4C52FBB26AAF3B6F75833AF8E
3AA996218DAFA571FBC7CAD90ECE9C883C813D8F168C5E86BBFA0F0A5CB36E35
2DE4CAA0F8D3227F72C5056BFB5BCA6BF9C60E037A0E44670A8D3CBC9A19F379
CA8DB30B711F518A8C7569211AC70C46EED2AF62A37F238BD0BD12D60332E673
C6E784B3EBA3F2E71E9993B97E8A38F85048937E958F1CD8FC6E661048546135
56B810FA1FF611B96495081C04542DF7FEF085DEC619DC8C84CC57683D212813
9D14728AA32723E1D15F2AF8F03422CFAFDA417B02BD110204CA1CC8DA7A39DD
917E09FD39B4341967F5C055170D7505B97717ACE39D7D4B8B6AA528E7A4CEB4
CE6CDDB4BAA9EB42B3340492F822C11204E340653A1B4BA0E2792D227EDD02E9
99E7F31385A3D821F31923D3D8A54E790A3188E4AECD685BF81CB8BB3376C1B8
A53C44B727AF545A3B6DFFA6D7243B672147138A85F84F0E1339008A3B107E1D
3BA28699D9C0F3EE9462D973F329D281B6346A901E84291B9BC6FBB6DC560599
BCD491C34C62BADC626267CFB8680CCFF63BBCABFC4145F47354C1C1B24FBF55
8653AE50868A70B8C4FB3BFD15FD78FC26415E6ECFADCADA97F5E442312E7C71
7EC32EDA5264F9AFB4B1C23F755295DBABF57F992408E3E8BC945B8F5DA83399
9F9D8865D8A7FEED34D4B3BB450CE561EBCE71F8245BE46883FBBF86FC42D933
764491F2111DB1AAB1889FB06BEAA1E0A05C5B34B73F2CC4CF7E8DA48AE10F19
464273ECAC6A6CB033D54FDAF26B69FF8D6977A0446F6FA88A5971DA9C4C7C54
0C3FE0EB837DBFFFAF3B888134AB38B5B3BDC9B4B693CCD10C045215C334AA21
432F7B87CFC3379E39B03AB1B045CF5A585471FD2528CB9881A8D662574D9D50
AB0402644E83479EA265192B41D8F3E81B4761ED2F0550746CA3B21B026E261F
8D920C2BA8F9DFCCBD1B7733EEA500102E39529212B65E7565AC5AF020324F9D
E6D8E2A8B188CA63FEF456A75E140DE04E20DB774161952D462620AFCD9D1A3B
E3D924CFD804CCCBA52BFC37FF627F4756AFF8FF8228DA79D22F234DEA2B1357
B57FD13D103555BC02EDC17DE7F799706A7FD3F9F720E758D34457C4375DABA1
59A0BA4C84FCA53BF48C6C2A7301B9AEA1991D60C1D342C94322EE1650813B5D
28C3D12101A2D479F06DE3B3989EFC9A88118F099F809C932D563D765726D115
86344133382D331831B396DF4BFC1F0A92D6F02230552813D09056A4641DB559
D48D595441661A4EC81D335BB3962F62637D567840A46DA6DABC425E3A9EF06F
4EA3E088A6BD15DAB344C2D399B8ED3F37CF56BC4FBD7D532FD3D3F43B63C5B0
D505776A23D1FF9BC1254E676081F8D2385EAB829575B1E299B90BC0E2B10849
911BFF3661A33C7854DEC7E3B360C908C46B93419B99BF325410F56BB1A0E289
C7A9FB16CE645E375D2D9602780E1AA7C716432AEF9668F3810179DC90C59520
2C09EA3BDFFEAE6F0FCD498AA9A95CA04C177AB8F232976C755BF088C3435ED6
A5E52AF86D77936A6DBC19C1B530BB862022BD227FBFB835B72F954CD6EFE824
4CE22B0906EDEDFF46E92A556B304EDE9977C4E15B9FE0A331E73187FCE8A620
1D5D357665016DA0D967FA153B1DECE00BD6616EA0A4169B6248276BB9C6250B
1E8213746BF679A35FAE9F6799BD4195B48964E2F4AF06E10BFC4FD099199C38
7A31768609A7F38B46E72BBC36C3BE990DC7F38817514AD69DBDCB239E1E9680
DEE87C065D2BCD6D9873A2639BE52FE1F6CAE547879A56F9B5221EBB3FE57AAE
D5212E005E90CE5595423F2B6C6C9B35033BC7F153B18F55C5E1F0FE593EAE2F
A8EA033CAB4B28C9ADBEA5451DCE37DB12384D48A70A43187A73655F4CD05351
BC7621C7DE55DC385B2E2E3B2B5CC33DE5CE03D9F2515BF63CB289D701A43491
C4C0838B8D797205E96BBD37331DB4068BE99D304F82B16B3597E8AE55B7EB3C
046C2694DBBAF882F87811A96EDDE55E91EB1375ACD9152362D162698BC6F753
5E14CF202C75FD9ED078A504A6B8528B9F2B8D803C41812E5A530C0BCB3698C8
51C326F7D4869F5BFC5A86839F9EF5DAE0616BB17D30C1614AEAA2AEC6063E1D
3D043E86C3F7B277F2C5A76AD35448D6106189FA0A3D2CD60E77B7FB9050418E
8541FA6FA69B8382DCA16B22477FE20E6159AEC584314440A469201781D99C5E
3AC3D12193DEA9B6120D9B747303C1A9E65FBC7E5D5A2A65C07D4FBCBB8FB94B
E05DFF2B3DC72CAC231126A1CCB9E7F56C30AC8709634561B22C5C1FAC324403
D3BCA11817C9D15012E0BE84E19441F5929EC7CBDFADDD1496335FEC30F5E9E1
6AC846CA3D65806BC81205F64B6ED8EB7B6DB6AC6DB229450C355F3D01BDFA16
DACEF4D0161D208B52094B1ED7C692CF08BD1E55A5A295B7FFD65365E6378017
D076D556FC49248A35DF6EB8128955CAAE7A369796E75F00C7498437F74DCFB9
791575B7230CB68651BF82C7698CD9744ADDA85F7C793ED9A7495BA20F932552
916A1E3AE095F815A215973B619B1657A8656CAFE18BEBAFAF3616C49C07BEDA
6A2349283F0AF62704F47A9042842EACD9168B620439F55FCA7313B67CE7FA22
FFC3F128DE46B5A4EEA61949A873779B1EC4B75707438146785C0C82A208F4F8
F34A3DA698A69BA804B9A8B77602F6FCDFB887A83C42C50F08E66B611F54314B
1615B12DCDFB43CD103ED7A1C96B5C8A9A463827E4D54B7B78B6572CC2C78F2E
B8D611E4CE883E61A8FF61F2E56C5C577283AF535F9C8EE9237B7CDC81184ADE
B1E990D07CD58885936F5D85031896D58E53149D7231185E4236B1CBB3107B9A
801E9D4CCA6767332FDD184A0643CF73979C2EE973722473E0558CAD2BE97FEC
3B6349FFED241A522C4893A7DA2C3ABF2B3E925562766A81EE0E5D5AC4D014D5
17E9DFD657B91139CE999F248900A0F4C904C19B7456A8C8F5C9F7E8DAA189AD
BC1E80D0A9A469DE86BD05965F416722FC6FE892E4C247677DB57D66EEBC87A8
7E6E159C80B5CC94356F08856BDEF137E018F7D0C63F0B7074DCD8EDD2BEB361
B7D221176758F5038A400CD349EA680BFE6EE2669693BBC63E1714E505C8A0B9
6793596097D3410D80CA26C96F4C5D721C6C8582222B10BB4D87D1D050E1F988
F6B5FE25AD06D23960EE4BE34260EE63E90191AB575531D229D8AC6B4A0388B3
907A0D9E17D7F2C95A1FCE4815C6A966F00C840A2130D8956A3F3DA18F7C872F
1D571D668DE44D2A87BF2FB8D34583F46E49270CE55E986AC5C722906C047FC9
1200176ED1F02ED4809F6CCD8766C637919F05E3BFD1EAC2B12D96D6A228C860
4285777D95E72413DF80D5F696FC6E2BE95CA476C09617B1CEE6A2B48CDEB045
0B99E5E00B66EAB14D4CD1931F05317990110953B1C3288812086CBC8A6B5945
A4067B0949E3BDDE2CA7676F0E037CFB5DB337490A88979A0D9076C6986EFDBF
0C3FD45024151501AD843E9B175FA300769F65F4BCDA2E485181899981758D3B
7786179FA5E2A15609E826E023A7AC453BD63941F3F896651CBCACFC0CDC6D73
3DDB735F5B1CE6936AF27B3B235D5F195A0D61A2E5CFC76D816168B879E23DDA
5C99FDB2041597A8A577304663F5FA4B9CF430BC88CAEF705C3F01CDDFED987C
8BA8B72D68CA6B490E99080519737DDBB167F06DC088C78888EEBB74C92AC1A4
F07B4F77F75F2E2336B76A11D14A9518E4B808DAFABA871065E8C41CEFA4148A
2827452E7CB712C1049C4F4DD911E42818FB31D40556CC6F2ACE52FF958ABF1D
F8BD80359E6CEEB26113DF32D7FBD61DE7DDB8C71B86DDD520D8A429FCDCA476
EDDFE15E63310A8BE055A41DD3A4AC1A5BA0B78D6A72C65D92D917E2BBBDF527
38CA09B628CC646123FC9C2BB8B9149CBADE794AD35DA94B3E9909F220E99CB6
151E1790C368F417CBD7E50B201D0569296FC66D1201EC89DE155D6280FA9072
E4E586204F2068083DF31F13D21ADAA28FA0418FE2D78F017B3EC5E6ACB22612
C20CB4C4C167594B1216C2A990BEDD687F2A1736705851DD2BF0B2AA8EB87D7E
0FF6D8B4CBFBCB815287D7495E5C974A61C549B065D9E61378FA57CAB556A0BE
BD50B171AAE46948ED4831B9F49621171EDDADE6FE1D7733D7397294E7E57F0B
BE1833A9A7C1489AB9037083E4DCBC3A25FF4A2D7D661C8BC7B2B81CE29B0348
3124BDDD2979C02DF8165A84F60C2DE161DBFC48168F45832A4E5A601ADD8C91
7144B4CBA062ADC5B9778F9E4DC6F630E03ED35FC7CEBF0D92CB64C761EDAD17
80125278ED7B2E777CAB285CADFE3C6AA9D60D90BAB34C710A8CF6038EB3DB7A
C83BFF447255A99CCE4EC0E8B418284452650AC9F7745EDFE87F760D7200C559
944587EAF9A8B5216B39470E0FF5C38EE0EF4E5A8928286996E8099252953886
CF28953286A517B34F61512C317E9210A89F4D2E0BADC8F4EB97976EF328D6E8
C7F6ED33A0C777A8FC99BE01CD328B332F06CB1DE98AA4C60583906515ED10F5
BC01F71F66868A34CF43BEC1D6C20C095B5A1D527C404F26738DB2B8A6E5058B
E0F60526DBBE8E03AF950CD2B5757B57A7F549876CC5274A88B8368CDA289DED
FC2C3D1C14EC30CBF83E5729F1C074D4F16F9D50AA82A4653649B7CDCA11A1FF
27AFA7FF189A773B5044A04E04279AAA541D26750E85FA093624E31D4E5C47C3
4D835DB493AECF6389494276FDA49253976FD2D92796D62FD8134707E2BEFF7F
1B444111BCAED58887461DF29B23AF194E8F983AEEE17A046E6D0F6850BF9A56
F67AA753BB87FA32AB6D6516C34C54B5BEE16F8F62C949A4A723CB1794E7EBED
507EDF05CC4C1DBBFCA0CC75B21A8A8651D78F16FD83DBA54E790A3188E4AE3E
59C22D63EA2AAAA61F06C0C0EDDCE8A5C8BD4D39241B29403EC5AF48825E4C87
36B6BCDD47887AE586072EF9B73C957E1CA0E220DB08795CB7A9F7D145E0D738
3300971D53050A3F58DA32B792ED452D443CCDBAB340CA008739188E3BE27926
9CA589DE34E1A94B5C536B752696F9045214975871A01347C7B1835510215E0D
9D20AECF7DA82FA40E45410BAE0D6DF3697FF033D98A03EFF3CE10683BEA98EB
2B7C1F4E93E0147DB7883888CBFD85127F0290DA598A51130F223E6A0CC81BD3
90CC9088C268D21D1CFC3186DC7060235145C6599C0725DC7D7B9AFC3EBCAFBF
D50553D4B4A7407BE12CD47673E6757AB2E856AEBA0646F87A98C47986582683
5080FD2AC78D68F02715014435C1F0FD8F3D94840FBE9DB19C7B287EAE62C683
8659216EA61AA9465BBB3AD6459A64C53953807781704F765BA7BA3345265F73
0BB0E0DF3AA6DEB3EB9FCB9D75EC3262338CD14FB97055914241A400AD5A735A
0EF07D6C60FF89BA2A9E1C38EE15557D7101DDCE5EE69C1FA0243E8BE5405CB6
6B8D1CBF0B62CF9361C6C3BB291AE0199187C2C1BD8BE36F0D979245DBBE3C18
41A9FB4FEBFE428F92E19C78A82157752F31B670C6A2FDAAD7B890E7A20C85DC
B72388B42BBB68BD9A64B2BABB8FC62BB23F075F09429DFAF2C1838E7D3DA62C
BD411284745DAF2C04CFF3565F70BFFB84C13C39D818910A1BC4CCD59FE2E917
BCC939A91738771E43D937A6C2DD7C2320DC37841E76F57069E9178CA9171C20
43B6F81E5D42A27D3BC77B4B7C719C3A760C55484461EB26263F9CB022BD09E3
7C9AACC676E012A737EFA537A50DC32A726F6AA70463DB4801BEA3595176C318
7FB5DEFE8028B497771A70B6BCDB1C63F544C755824B10AE4F65DCBD68605FC0
3D567657D93FA0D1A36781D27E2B7302785AAA75050763C4188E5BC0F30CF38F
782C931BA78D51B6F3880C38FB2349BE51D981A08AA153E57A92202EB0FDB8A5
9AE9FB7ECD210123C2996AF5AACCC1A0009FCCF61914008878F2B7F506B8CD72
8DD0404E7F2D1362493942C21F78C8C104E00D9FA59A88040699F54644FE8142
E9FC445974401351E4D7A843E7B58AEDEE8CE96D457EC178CD243A202B98A443
1060C062AEFB312350635D8BFCCBA22989B51C4DD57D9C2CF8CA9DAAF8F95762
FD3FF5ADC901FFA5140A9400ABC3A06B1C7F2EA9BE716DAF28AE2B475A796A7F
49817CFD5784B256FDF57662B56391368AD5A88A8B57D596BEF61DE354444522
6188F174DDD9AD7BA2CFD462422010960849128973692986AEBD9C63FEBC0D7D
523D85FDE4C0D9922C90E5B589032C6124C282BC6AD50012E136E513FF384661
28DC90DEF66F3F692D07D5F19445863A6A11EDD3A5C81E9FCA78A1BCC92B254E
2B47A54E9453F2648CAAEB1CE7E45E0EAA7E8576E771477E278D5925C45131D1
F1B94938F05ED56727B15F50FD125C5876474F416A08BEA0FFDCF8A906386600
39D6EAD9A62AAB1FEFC0E88AF09C8E66A6F27EE257E88F34E6654ED99E1C02AF
A3522F8D6CB3BFB57F9432146382B7CA01B066B4A61469769932A19041026AB1
FA9203B1C24D5916E2A605CD4DC2092370B61AF373DBED10390DFB5C81FE336D
AAC402E176EA6DC806EBCA836F6D68593515D8EAA5035D4005D34D8F9D6F90AF
D127A508688CD7A78E228E6AC9E51AF57AFBC18870E1F53FD88743CD65742E60
E70E5C5E0B304AFE4285C73135133A1C8446C45E1B26A3BC95540A0CB892AA68
615B9585EF842C78B6E6C159A220F3ADFDE37CC5A83FC87DDC85350C4D8BAC54
5B910A3894054B3709508F2CB015BA939C04F956576C17276599E2E935FEB90F
0B825D09A330FC50A959588055466A364AF28EF57723600D8A3F0DA0FC65E029
D23AF5DF848E35F35CE2DD5BB5C536B2F20408D109E756A7AB6EA5C99DA64518
5806E9C6DAFE114ABAEC30BBB36329FB6517AFFB339E52742B53520A12D3DE3D
D2B201AD5DCFA27D8B8ACCE535D1BC082CDD42F6F1A252E0F27ECBFE70DE0823
DB4C768F36151057BBC016A7DA9007328B0E6BD683A69DA05A95A8759B935B6D
B60C63AB3CD97D452BA73B7441CC092D15E2CAD52EA143C91D1B76580BC4A776
DDF647B5282C3176B488B41842EC3451B3B61A8F612DD743E17BB82A413C0C11
E5B9A2CB4F7791DBCB07F44DEF45595A634545E7EE32B35D6ABCA9195DF55E4A
AB080F26495B62BC1763A49EDF1FC87515C43F6477EF96545596C01389D6C65B
A6C25633CA99180509BF3AFB2171FE5A3E58B2FB78175770EC34E72A3039A0A4
E5F1AA194BAF9BD025C8D962BB124BBFB9D7D2B2ADA203EF3EAEB3BFD8B8FA7D
935A4FD76D7A6F3E0D436F64FEFD22C833B98C74B154247C0B1A20E41923917B
CCB330A6193A3EB2F7E10A954713D572ED47ADDFCD7862E2A4A3A4E6D861B9F9
388B0833CC0E235AFEE78EC0C63416340EFC43B1D6E222AB7EA4D8A9218DAA4C
97F9B1509C2E982B311C6B2A9315A3224BDADCE9CD454A2CF6B252B159EB3B07
F07660FCC0397883065A8E0FE32AAA4F2BBF76E045E8814A49717EC8A49F0D8C
C9EC66930E55436594545B81AD777DE8E66CF106F4AEDA418BB909362DE77B5A
4A98458BEBC4E75F2F3CEF60A4B70DB3D5FFD1EEF499319B38EAFDB5645F4D2B
A43D458FA4AE2D6FF99C5A65AF5D1FA9BC69501034A67D926B419970A4A33754
09B381633961983D1E4A85C061909F342844896327B1DAF09471F303B54344BA
08C9F096AD716DAD20A32BEBA473AB452018CA0C9AB68A5EDA4B63B8392CC2AF
FFF3624BFAB0758A0ECCD37415DA145ADDF5A47C0BBD6F96B6729761AB467B9B
344E63B025F5E50D42E30F7E9B8105F88E6E75000536FE4128377AF78C106889
B7607E62A77E3B42DB64EC9E2E149623AAFDDF650D8D18E8F76269C771B20935
42DCC05552279A7FC9B7F82015721F09A572C166BC205FE1C19B7A504557FD58
2786147D8E3FEAD6C490037FFD0E5DACB561E575F91C843A89654C15F95BB1DA
FD1F9EEB9819090DA46ECF23BC16619DFE98DE8B3276DE22D5D2A2151E6DA4DC
FF4C07301DA5796DAFDA55A794EA5CFF22CB3F7E8F4F369E59D2297877D8009D
63061F082C64AC9AD4A8E2C7ABB852954B70C540FF0AEFE9B16CDC52D961FD11
F09618562CDB8262AB37378B8552DB87DD0D883AF60455753850A637565EB886
D7096ED88DDEAEF972E7B78DCAC397DD19999A82764A5B1A5B38569408F6ED84
2CA720D646976FD7232F07F13A18F6721173C5F1BCE29C13D1BC07DD062F4404
E229D4449C898231A4D6C75314CF9B1CB90D8013BFFDF2E5890CBDE437FCCD59
9D06F9050FDD420AB6286A27F0F16A4870DCEFC96A788D4E4EBD08D822A0610C
3E068DD708AD1931F143105EDEFB44C01DDEB9983A97A95C1D97C7704C10100F
14D6F2404F7F2F0B0340F42BAC7490208825A853BAE8CD9BC976A1C9E2B43906
353E4141DA13E810EA19F923EC7288B07A51A84511B86335A986459EFDD766D9
771ED98034F52C7AA0E996A21548B2D9E2935768B1805E1A23F24434B48EA578
982D5F6BB9CBD15639979DB2E281A539F8903891F7D4DE733C0E998FC75FAB18
CB410730F2CE6C366826F124AF49E547B0E28044C291240C25F7A36F52F7E9FF
B1E51ACBA907885F490A94594F8E3134685C6FAF3883680DC9ECF6EE626F2824
F45A339D091CC3353EFA3C20B6C3E72903199B31F269E010B5E4B395A0A3A0D2
BD4939D61F95CE3A205B237F867CE3BF44B567263A945374CC60191C7E2EF94B
EC9B6A834FEE4F6D1C9DAB191FED4032DEFB16B6E0F1E40C7FAFDE5C8C2B3472
5A01BB2E23986FECE4DB2807334C33C657F7D307D9C77E08FCF101D3C2A3343E
235F01230E22713294A79E4AFB2FF1C90BBC573772A813DD9F8813E0044A79D4
22B58ECFDF2B139572B05FB6AD2DFFAEB9B9946477A43283A8298C874E210614
1E6DDD9F62D9747D3CA8483816FE59782BB854E2516814F111603315535E3D2F
85C58E4161EB919EA51FB58028B38441B5B6FE993F00F44D6B213F348668DDF7
DAA9D6EC10735D7F5A5D0C090EE9D06FFC2BAEC08237395F6037F0180333B6DA
2164228D3A164A0A1FAEC2997DB02A3B7CA3B5D2C0A0C44184FD20533FB7D592
E28A4431E1C30A523DCB49AD1E302A8CF17B7BB37C48B7CC485903F6B831FAE7
B309B377E7BCF3CDEB8974B328F0651F75035F99E02302597BFF0F12D75FC13A
DFDCC20945B62164B6B84CBB4A1D9D58F9C26C5EB502DBF909995C8503A6BCEE
71DCCF22CB81B790B3BE5B80D74271A8E6D1D03ACD2FADCF10E8F7469A9E4F60
CA8D75878FE43CADED17A7B21C884D39C4B8593527D0C36E69B32230D2A78BF8
14AE54D6E0B6EB6A57B74EE33E300C4D4407D31CF8C055EACB3F08231102E217
DCC7FB73FBD0E52BBA17469780CDCD4B8A148BE152DA71B6B58FCD382A47F433
191BD98E8B9FA62A7BC56E54D6E5E97CF238277FFD4E5A5B76E54299900DEDC2
CAA064D430FCF9F9BA94F8EF53A287ACACF80203A267336B06A1F72F4ABA1AEF
4120C11F057C0AB25D9C775DE00F37F9B0438D81F738AC25544B99CC3DB76451
646E2C2C9C89040F6113F40F441C2BD84726DE1BEB206DE318A4644348F20D67
2924AAA75834BEBB4632F4D7E71CB0255B2857A1A2DF3BAFC6F113BDC600A6FA
40FCC21D880E3767D8880357E5017147E5372F54B764A8DEC931734B60F6343B
92F1B67E0B8B99DCD7EBB4E08F06C6C89D5A654B57FD48914E72FC476A3D4019
D08C25E598B731C9A03F3A4EB501F760EF762B1505102220A5E81307570C3C28
B45B30772EE9FFBB8D00718C343010FAFF4C5AB8E0E6CFE66CE1B4C401B6E1BF
9E9308107E3B15180026246CEF4CF5245911C2DC02A05A12865BBD9A102A214D
F91C9B3CCA3AE3F31C1198BF3F62049435BBF01717C08D389275D701D5A0B2E9
4E7984D00F03986016A1A75B551ED33D19A1FBA979FF7BAB06B1AB21AC0516E8
3975669B41759DF26FC036EB5DF267133BAD6D6F8A9B285685F1500FE9A95034
D47818B8235920A92F4F2CFF2F1E523BCB1AE8B9A31FAC398FB4643E2AA1E3A0
E18A10A060C09502E182EAB0E7D0D01ABC1E310F7D2A2BC402136037D124481D
F8E5CA7D5F3F84929BA4716C5341B55135CB4CF5342B479A4651B750CFB6895D
37B2DCEDA7F3945126847769D6DD09260A3BE0633C33C8E482368140CB220538
90DA674E5DED33A77E6558BCBF35272B5106D20F801D02ED63B52C20E5924D92
4B8ECDCACE526D092F2895ACAB454C6CB74F0B3FB6D1D6D2BC3EAA1417F96BA0
67EE5027A4BFCDF875CF535F2FB48403C6329EEF0EB082DF83FDE3D2C8D026C8
F88413B74A66B44F624DB026F3430994C048EAC96CED0E36E8DDCCB3E8FDB480
0850417475145717BB23B43458474D510EE4FDC7A76B110226E22D88EFAC01B7
1A4555F34F8023B15E73E8856BC41B40ABFB7CE655289E4051AB36D4641F7632
E4F65773907391659CF35B170D15BEBE2CF823B1E178D16C6D2C4717C7EC8DCE
3A7E6BADB9D37B5F005F4B13EC257CAE5B8DFD9CFBB246A971A093580A53B622
CB20E0E69C01DFD1E50FF5878493627E624FB7F50E79B62C4F6DE1A96B074853
E210DE92F71E5D5BBDE5F3D844C43C18A8B3B1880A342C9AC88536140CE83AF7
72E98E0CD9191A0E89C51BC4A3A6FF826FCBB852472D8E6235227D5C3994B4B7
11A982488691EF21286FD1A9C4B02A2CF6A714DC55C703E9AB03C1B531E961C0
04960E6059F6BE261B8E07916A27D8661F4EB711DDCF5EDDDDDE541327EB7CEE
70A3690DA1249F3175E65964F82596B7A7153F4FF5C4C6336DB6113FC9ABD624
1D2D9C19FE8852D23006A752F86D5A8B2F0EB6E6CAE37BC5000A7795E59B1399
393E3013B87930A6D5C0E6097EBD9A352191A4398F807B63BE83C8E4116C297D
8904B720391C8EF7D9F110CEE18C59466755D6DBE624E72E3AD8F4E26470BBFB
4018CCAE03837D478D1C0858DA53F75F1F875F2548D33AE8B2BDCC9705D1EC88
48293ECD9599CAADB5AA45174814D8306E06BA24BF10780ED60ABD9581F43FF5
EF1E9D4875A753BEC3BF97265F7C2DB58B320496C00695874ECEC5C8683B558A
FED820387436E05EE2FBC8256FB086FC994070DFCB8299304A5AB02D643D8B74
EFFF47690A84EF3A2C0D17C269633DAE67C713FEA091BCC9B6C864966FBEE898
9D3AD64DAA7BDFED532F10127C9EA4252C572AAAB15FEF7E934F5D0498C4BE4D
042DBDDD5CCBDCAF4903835F153170BAD72480247EE13CC02BA99BE3DB0C8FE8
61C3B9182E92818524078C0361DB27E291BA4C7AAA81B42EC94C58208B09AB28
544504409394F578ED2A59D9EE46F33362634F9758827B199FD07BDB2B1BF013
DA33CF12BB0F854CF1B11DF76574B9CB3E5D34EBE12912B39338A6BD32CEDD4E
8A51C229D30916970E4708047C91637E104E6E0E84ED6ABB5E15F4DF7CD48FC6
EC9EDABFDB1CAFF5FB8203CE3B25721168DC1FE8953EC679467CB73043A75E69
BD95612F3057A1C85E4D01556A34A492E60D86837509EDBD6100232A0CB73053
380777E273CE408FF27CF150A06C7AB2FBCD9B4D09032F84A2D7960549E1418E
16536B30D75DAB1167E5936912FE11E514C61609783A8EEB064225411583C974
089DD58B98182D10A8F39839D77F99C77CBA68AC9DECAF883A70F47EE3ED04DB
170EBF0D56E404C1B239D2241DFB64915F268E07FFE9F793D9AD991AD083F83C
D74B186E060EFEA9CB46E65ED252DF94096D41B0E9B8A42B31A388D3526EFF46
72F321FAF3DC76D6234F57E78BE4CC8563D81254FEC10E68738E41C3E60385C3
72C1E29BC7E7B291F0CA0C00E8DC1C3A819D28CD1158165BF75291EF6E74486F
DCF244A625A890C65687C0A0500FDA25123C6B8DE40DBFB9338561B49809832A
3879F2F0AC26C69560466A2D02399AF481BFA79544B1A2F7EB96685A257FA1D4
BE4047B5177FD7E8DD61F37979E713B011A11D2BAD1162ADE123440E642A507C
14AAADEADF435F3E6354A63FB18296C3B601262877B881644C0B935DE95CFE31
669D341DA40499E7B88FBEB41B7D8700FD0E0C4DEB0B2E68F77613494F597288
969806948E48E6BDFD18640CECAFB55EB39DA316E0DF0B389B008E8DB7E8E911
2B7126DDC47C9642E8751A5BB5B55453575B6BAD6760B0E110495C99906F2162
6B237D8B5EF5DDE735530F50FFCCD1CE562406319F674DB55CC3D29F6E05037F
07C0E0FA63F302BEE92B2A1F7179960528A4E34B75CC87FF014F20D3A6C11C80
CF098B6FF0690A8A4A8C61BD0F24C08CF41693758FE052601949FB93081DB12D
96EECD50BE1C0AAB80F88CF3A1BCA42C64253E2E34D6EDFA77F7F8420AE51F55
64B86431DBF93099E13EF15F158E3EF1BB99830A16F35C0EB67CE50514797978
A0C418AD0F9AB4F65CB58C28FC9ABE634FD17B2A2F439B0BD7B4B91FDEB1F08C
4F40167C455BB0BBF46863266DC0DE637130E53CE252AE44F3589550BA4C7C32
D9FE1F8927BD0DE39CD937D2B90E09BDC2CAB748AF6981D515814951084AFF11
B04745CA3A297270EDCF011D4B2A6453599E1629AEA765CF1BA5CB2CA9DA7678
930B7E19909108B1C1C5E51190D5D13018518C26612010AD4B472E8C52981156
04675B65B5739A3836A63732B48510666968335DE214A5065AA2EB47FDB4DAFD
565CBA081FCD2088B8E5160E7045B930267F0E57B9BE938E0435A4E377390B89
04F1CB2B6D476B50151553AE39C701FF0AFD45CC92376E7E0116757F0FFB27BB
84F14E2E13B35E983CD886177A628B6DACA559B6BBA0A5BDEEE5381C7B50C832
B427BC8C414BEFCBEB90E1734CBE17B96F094CAFE8977077AA58081A8C22F00D
B14FEAA3D8A3F2779A1547F1D88114124E7A07A519C565F6AB9C3012909AF65E
415E97C2FB8E097DE4B61F61188AA0FF6EEFEB5A15755581CC2CBB95CA3C23A1
BE0FE14E287A975CDD8C4DAA95F1D6F98BBEA9C15902BA3DFB2AB7670C9FE72B
2CA0F53F0390D36BF3B497F36BCB9B8BF05C44B15266D08B7854A8B1E46CEB20
1EC9855195C36699813C2AB5B02F874646D74C0ADE9F16C615AC4DF713B1F6BD
5FC876759C225279A7A5D06920886210F4838D2960527C9FDF8F994995272C31
6A5487922EFD59D8BE31FC767A8745B323F5142FBD15CB23AC274F39B280AD10
51364352E5F2DD50900F2BEE7F6CBB018700EC2C7B3BC68887261C634E44D116
ACBE694E26C392541A016E40CD0D38B81A2EB29DE32EA6B94059BA7A9B5DB55A
11B642257AE936D7A1FD546C5292F652F5F02CC49ED6DC49D90825CBABBE1495
B29B9316DBAEFCF1780B848225DACD1E602793B95025AEEC80C0695B24CEDF45
816FAE6262F8F33EFFBF73CAEFC844A0E1323D2B6FF5EB9C666FF11ABD0CC574
F0603AE02D684863DB3B867365BCCC04318F1F1D2731CD7FF7AB657310CFA566
6136A040702BB2E6D233C0DF4FF0A2158983F64254D48ECD1AF245132BBDF5E7
8C8941ED4223DDC0B32987D9EFBB4A7018613F3FBC936560AD5D2370902FC510
5705D7732AF2150E270BF7B8F7488A1F974023FDFB1EB5E06C641F513CA57F17
C594F0F15831B1C735A3422ABAB2D64A7F2887E8AC9FFF9B3ACF923C4E755808
BC5D90C980B4DDF530330D9B83703F7FFDB7308309F62215D99AD28C604C6EE6
D0D45D0E95BF6FFBBEB1A300422BF213F889B3E5B63758C0D1CCE9B26754EE0D
560A870BD132AEF9A706ABF2689714E84D8E6F61B7606F49890C82D1F4A6DDB9
6A658EDF6A166C5727657A02E90FD4C56266041D0F4152E06A01EB1069FAD914
1FF16CA365AE1197E8FB1DD25153B1EA4363E82E95CAFC58C9EC72CF325023B6
705EBE59506521227674339C95121BCAC6443D0FEF01C132993718CFED6D8FD1
CE6CEFB254B7983F0322C710500EE039B510A3C05D92C96F47BF7DF4DBC21A79
CF19B9E9037550B0BFE9CC16C11CA34C726497134A4C6AF6C6F73AAA2B130955
02612A900F225F84437398F001CC2925689B054A1B2BED399E78F1F0340128B8
46E88E2EB430C38C0CAF748686D221675E57058416F870F6CDEFD5F9D76C3458
57574753B2ADAC76852AE54BEAB6EAA7920297AEDEA2E5D135CF6F724BA98368
80FD7304189EECCEB0315F5B1680372558F6441AE04E94792B00625FFC9C1051
7B0D214D0103266AF13BFE03FB431AF1557E60972F4ED212A5ACCDCA524C60CD
BC3A9F6A1E9E8D1C190B80442E3022A6B0B5D19FC1A0F9FBE13985294078CCA0
35D62FA20DFD133C1C275A65E022A0A6891A4C7F28F3297366158490DF655881
07C46F27DECD0531BF4D356944A7283FB2445BD7710EB6F394BDD2689DDA698C
7C10179DE7DDF4C2379CE1E0AD431981A71DA3A384D0B4D5FB5A207A8B778593
3CBA29C5C68C50F28833C16F63AF93342F677080043AB9C2090B4CA6D70E5A3D
A9306535B97CF0127384A36B84354260B0219727EFEB930AA6A7EBD7B21B42BC
0006A9F380C57093AEA4FD754FF67FBC826FD0D736EBA86699F19DEC8FFE7487
5F1F4AFC8919E048CFBA0CD9D57AE0190E1DD70541A7125F364237560ECA92F3
1CD0E87B17E734D3E504D8519B681A245CA4E8C92EA07F745E383FF8BB6D18B3
C0389825553617D209747BF6CB27FBC37FB1DA8341BD2B6ECD37DDAC21C503D4
071F200AF108388A55C6135436EA8139359301927D9233FD755F9A4EA03A425B
1D887822ABEA28FFB7CD288EFDAFBDE158542100B1737D63D4378F2DB20A444C
6A012B80DAF7354B6C8C969005A141442C3A8F41C94C340A507865894E177376
CF495BDD7C0540CA45EB130D750DDD1BF72F9AC4B4B19AEB33F742DB4C3ACC16
C5A35D508FFECAFD9FCC848BB8E96C0DFF881AFC397EA87BE3358DC4DAB44B70
B9C7D5BF13C2DCE12E485D07A76A3B3593BB0C3CFF9C5CAD1CB56EE1C0E37F55
381567390F5A11A38C6CCD882DDA46818CC837431DFDAF370FBCFA382264E07C
81644C58E234968867E463A360F95DCF0BA4F4CEA6F23E7D025289AAC52731F7
ACA687A916F7FDDFEA6E7FB7CBEE9CFF1A08C219609AF5CD8E6D032A624749EB
FEE22191959B0268B7F657FAF4B0E15211D2DFA60982CBC90F3127453A618609
B389EA6826CE834340D1FF1F10240C87EF14E4EF70174CC440241A4AAE960547
A1C8AD8693A6C63A8A4075581A017DE4B11490B3FCC6C706E08516754C296024
807D87E3CE3DFBA48FB9B8035C9E7ED7039E60C8B51E64647F73D828D1F0D065
CF5DF7846EDCE1AB5EAECE23C4F10CB1771989E28775A8913911225662B49675
0ABE69FE81831AF608CF2782E3ADA6C158693CB8233A5B48875197BAE701DFAF
B87669BF03A05652E9922F21716F72229C498E88DB1D7BC9F2A9C687CA02A3E9
23AF4730E0ECB6C872C0DE570A266E652284A1D3A8D0A3676866C7406275A320
6CBE11BD3C217727746E33ECB17442807D88BFA3F17837A2E2A8D0734063CF7A
0171F1E4064FCF704515245F11374D0E29C582AA15BD774564814FD5775C1950
965F1948C358871D7F5B8CAAC700BD0845C1DC93AE982CE2A84D3390BAF19B6A
AC1473863617ACDFF06E774BDBF9205CBB517495F6046499E84B50ACE5E7B049
4F816907FB90476FE0931DC6B310CF7D5E9038ECED466ACD42A4808874871743
E0D7747459F6E53ECB0681386816EAF7CBD2D2B903A5DEDB9DD3EAC22E7F2C8A
39725CE1CFB6647720266584A1F1FB33869A00CFE33C459F060530D7E74234EF
3D7EB61EFF2485753701CB7C8303281CDF926FDE4BFF5078CB2078D728A6F62A
2BBCE726E519C6E1A831EBD01A0753E7A1D93310C136B43F0411D72170937F55
D81ACE6AB8D89EB7B14691FBB0447CC77A6DB532A6F1A0B1DD8E275670616C8D
22952A674E058440DD949EEA12B8719AC1A2F79244539D6642257F271D19D368
C7CF287C7ADAC6902E035AB51192FF99C53F007C55D5E39DA92CF1F480741C4F
92C4560D324DDA393E980168DAF48A1BBC0468FCB8F596612934B1A8CF433CCF
D92162BD0FF01C8D8897806427B682BD84514A5E79DF75189667ED7CD47A9F50
FEAD19E83B0C6AE1F6324632D20340101CAF3FA23BF477B9FDA822DBB3BC4377
332D1F13995E7EBBC904DDC431CC1EF45E7241289574B6263573DBAF68CF6E32
427601F42C07B63C41E7B1252405006311C45EF89A25832B59DE9365042C3EF3
AA7201290EB80E50B25B5C944E26BD2C0F087D3643DABB84B1325A78A18CCA9B
AD9E7F44D30B635020446DC2CDDFCD78718137620FAC38A5D7F6E0FE3A84C7AC
E787CE30422ED8B1E27E57247CF730536251319766D4FCBE56C2242ECB75EBCC
BF56C48725282A209E9D8BBE5F5A05F5B823E2C535B34FAB55FF08426D587218
7B7FA8D9E996A85F16702247BB2347C6A6922D980502142B0DB8C9D372412AE0
D80793953290A49AFC30391A65E57625D3C9B3F98541C5E6A850B828B8D399A8
899CF56C77033CFBAC2648A695133F2F59E822138627B582EFDF4D37B9765140
C2BE687151F28AB0F6E636329926B978D0D24A03FAF60085A08882FE7B84D6B8
0D69E6A40F682F46A3C053BA9FB4A3F8B2F407660F9944C01D250044F52588E8
5F3B9A1577FE3B440E975F0CADE16A0651959941C8C5689C13B8D1E60E9EA4D4
C3FEBA6CA6150EA0B57EF5B7EF86A945D64441750DE7BE22F554BE972E4D2B19
D647731494B81047C8BAB8F576004C0F9660DE92A490900E4587E84741FFD3B2
ED39A3BD28065DDA5AECEE2EFE9162D61E873051D88D9ECC8471B725548D3141
3D770E4729492FA5B2D1246564E45659BC60903E52A2C0468A02AC6635F52FB8
57F4F49687824F253796F3A275A8B2C95DF751A861AA31A832A3C5DB3A53D44E
5BBA57C9B37D12CD150CC4C4E28BF11E8CFBDE6E2B3C620B94D7AEBBDEB13E3C
BF21C1A912AF55B893846386F0353A611F0989B490BB17E7BE22F554BE98DC76
EBE8AE53D3AFDD47A09B12A29DF71BA8E36839A930CCF528E303399AC47F4B7F
A385CDA3190575D1C2CACE0C2C629AE1865F7D34C8D7C2A8F5CEC9956DD39390
2DB6527B85ECA6EFF7BE6B7198ABA63A8967BAC87A07EA320C0015C9C3D69996
CA622F57A610234967F8ED2CCA85A9B035B54FADCE418D93AFFFA49CC4AB28AA
41AE53EAF53B5A1D0C8F745DAF6A08C6E083A732E54BE0FA73F0E0BF50F83B55
9EFF6E2B427BDD34CE8109CB5D0049F9F0F7339D71725C8930D22951280F813A
187F991E93EA5057BA226AC9CC0759706ED120157E0DA5BC8B5019BB5986D6FC
D1D4244F46BBA01E157A1760D068CA743EDE3FAC4FD3E756BFEEBD9448E9A9E4
D2866C1BEF5C1C12C36AC445DBC33D534B4D63CE639710829D5BFB12C7F71EFC
E05AB56654D5D9B985ED19B612CA39E33FCC200AEDFC59BFF5DF8CFA412007FF
EAEFA2FEC69D7F2829F47EA2D491B775C673FBA6CBC23A6915BF69E5FC071BA4
7C4465E2023EE3CA07D6BCFB841FD83D8B5DEEC8B6033490DF9216DDA6A024C8
7EB359F4F829C8648ED97164A9828EB152C6E4CA461EE6DAEF964725B61C05EE
FD22F33063078DFC8BD9B405EB0B47A896E77F22E5BEF4AC5B908C0727BA99CC
9DD80A4F2C9BB1897D3E45A27791769BE0CEFB194E077A426FDD42AA4C3304C9
33D6CCE4699868986A034A24BA4FA16E844B1F3852570DE94925C1B14DBC18C8
5160D2E7377866E4D3059418A5271DB531DE247AADDF866F27B421C74BA977CB
E71BC724831326F962C28F1A9A861FC3650C951EF3BDC23C639E3C04016CAEC1
C6693D4147B9DE9FDD973E2193C5BAFAD6A0F80AEBF018C823607BEB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D330
CAA6B2F58179CE94608E69240E41CBC436C8E761E295B857FC933CEA15A3839F
B798BD3C1E18BEC7A4719B3E1F75C42A86C70CC864EB4A582875F3F1EBB30B5D
DD611D834213CCAAC483B43B62EE620C1C56CC7E9CF8704FFCAFB05975961FDD
A498D72C313AEE1EFF147266263871ADCDD2D2CD922A19655959CA79B74895C8
8B7182B78039D2C3956923C9DD71A04C7A9CF032A8B76B159EF695080C2C3A54
59F52DF5237EE2205F873B86412505B6FCA5AB5BC8937AD9FF4898D9706384F6
1FEF1A5C7C895EA1EDA6A750662B898F653E32D62176E87C9CE253A193BFAD25
75B7B23BF4B34665B2E845CA1FC919DB615759DDACFA832671761DD5246D5693
39DA8350346DF7BB65ABD3FEDC0E43AEC9E0596676BEE5AEBAA9268DE595113B
241EA196E982DBD1A59CFC19FF3234EC83BB562400A55DBE66114C1845B4915C
87381A19BF8224AF528721E68599FE269D13CDA1C11845B68B2F374E7A9DDC32
6FB44EB81C696E5F200F9128AE9FA7BA0DF2B5670BEC2948A577EA4FE9951284
5A9100287B64394A993BB8A06EB884B79EBB3F5AB86E8DE4BF9AA6628DE87FD6
6AA74AA19CF3746CDFF52C7FD59B1AE3B9098DF531FAACF42ECA02BFFB5B882C
06F620772509B14AD704ECA41D6473A1A71DBD87530D960554EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
694BCE70111394D24DCEA030AE4C07AECAC39144621A6B719682FF74DB5C081C
B538F17221F8D06EAAD43B64DA5CF93030CB93DD54FCC5B44980F2AC6A66C512
54F71283450DFCA305E0B134FC95E54C2699C18624EBE6A7D0067E306EADCFE5
2D2A78AA02574548893EE05FFD60CB41E00B2E7761AA55732EFE6EE3C19EEF6B
179276229BA324E59A81107FFFAE0685C7C24E70ACB8564454277C41C28075AC
96964C61BD933742996058691C47B09CEBE352FC29A63119C731B3FC8D78A9E3
69F922CA6454BC1F6CFD1E03B285AFC3D8A7C81B83F0D950DAD2F3E562353B9A
1D56DABD05371F9479BFA4CAEC5CBAAC37C200F6E27BB35E591601EBFF9580F3
78E3BF2E599FF22A1434E7D661083C7F8D02F91CCD580EA19FC752DC7DB84DEB
6DA73092F21F04F718009DBA58BF46AB95BC4B9154DC2390AE0089A9FEEC29F5
90EE85785CF7EEC7F87E5FB5F9B4D986B6E975BF8F27A17CC3B6C62F58C1E729
F224EC05FB4EC009EF48E7E56CA5CD83B143CE5C2E92F4A9C78C0B074F8E3741
00814A32AB508D50D30E8EE99A4A68AACF07094AF4CA2CBA140FD94567EB14A7
7ABCEEC8523E52DFC005E7DC4860A186F006339AC5668810A5D75C8B02FB4482
79AFA3A7210E155E3618BEC815EAA6AC4A80E2709C627092E1A3137CAFC1A856
EE913CABB9B2A1CDFC07658436359C2461BEA57F9CC512BDC51EF254958410B8
FECF198AA5C28D09422292380844FE7D375BA10C5BDF9D2843FC5CA819E3F17F
6C658C658685FA95EFA2CEDE9C68F323E4BD8228419C64277A9A14F63211FB51
47517EC668CE35B9C5532DD43A3E0B767F6680C3BFA39629DD1DC75B726E9D4F
8694D3A4EAB1B8FE8F6C02E213E218294D1063180597B8C427C9B17202B79EC0
6C7B364E6040B557C7D6B0F7E5E5521E202824B0E9C27A27B58BB7547F548BCA
3CDBD953139BFA5AA491269EF7F20EC5431691AB80830A7807CBDA4B8FF9EFD6
E40E50C75D8566903E668B53B2593A8C2FEABB796415085A0E808A168DDE1643
3B5163A8F49EF15A45F6A0AF7D02DE080C241C96410DC9787A8C558FFECC0E42
19B6B14667DE0D9CDFEEA7DD651EFF8CE65E00BB083960C4D18D8EAC9B8ED4A8
217BDC85C04F294E99F10136EB15365D6C3568DD21394B3039DA290B8A0777A3
9695C37D56536736F4A79DAAC0F79D25DCD369BC6517FBC1E03C934F67DC2E4A
1121435CB4D32EA322A2995D6AF1F16DEFD1F5022B8EBA2510956715295A6F10
C2338D0CAF3809856DDE35FBD1D8FDC36E316DFD05A89996B4F3DE7046FE0A59
E734183D7AE2C417C327BF6B6F117A6EFBFFA05C8C53B5293A60C56BD2947E23
39164D4E3C01712375EA6AD09BB8CBB6B1EDD079A5B383F4D008721A898E28BD
2B54A2BD36CDA3957295233A4F5DF0B5540BF068E8B63674F0F31EBF3052EFC5
5D29237D7F7EA34D7E47615DFF52838A48CC6FD60E9ED54FF9F1D920AA50674B
BE201236BB1C48394154191383AD93F8766746942D6EC5915757433340CAB7ED
D731F610D9735C16A35B4591C0FCA8F60001F094FFDD7A3BB3676D7EB1CB77C5
DE90864D97AC0F1ADF3D6AF323743544F9C6C292D015DF06CEEEE4431B325F9C
A9208EDA6728A3D21AEAEFEF5D32857CF8DF65512C2AE012F9DE3E5C410137EF
0D1CA2C8D94A7E9196B92E135DCFD2F0F5EF2EFCAFE310CEA89EE819E83FEEA6
6EF4C57D8FE7405C71795837AD5D5FE2F357D56DCE5F3617491D78C8E8E92E23
DC403ABB5ACFA4CB5B0C2B064B731CEAA8360F0D48F579C1AA73715019CC52B7
379A96174DB285C12B30708C7952450533CE976B5E007431E8D6FDC98A2EFCC5
5D4A298DEF0B2ACE776563330CA41AB8A30B8B0F26FC0FD6A1D53F2AE6900836
A74C5B070AF72623991C9BB3EA39CBE4B237BF202E4D6EF4DF872D6BC24763A0
60078711DB291070BC80908EF50676A801F66FCD6A74AB41D730177CA9764847
CF71E985CE9B0CDDFB47AA895C9149128DB33DDC5EF1CDA35E075B9BA8862752
F120470033198371D57862496BAE4953C41646D9F38A28DED0CFC4178A4057D7
66D49A13C881204AB55269F390804B5CD4D76582047CF8C47E42077927C482E2
E946891C0E26ED4693B6911F5B15ED22A4CCD562D5DFD9D11BE69D57FDF7D584
5996236231B49CAC77E4755BCCB6EC270A72D046DF6F563FEFFEE6ECB65E45EA
E1A0BBCD591AA09EE3A3702ABBA6B9C79D760C12802F2DBF646EB1FFF33E89FE
5B7106A7941AB81FC52500766FAFB3177218F6E100C3458E327C9280163A10C6
F913E64129F3328840E6CFA798BB995B795E663D79ECDFCFE9FD3D59D27FF255
37A4F04E4EE83872B07CEF28A71E6A1F4FBEDB1EF76F3309D523674754AEDCDE
C73817A760F4948CF9F1BBB2C4C617DFF1D446F8F7F0EA9EFF53C9B2D3339BBC
64FD72197F6AB2D82EF37EA7A16B910E7D27CED2AEDBBA2EE777C2D7F32BB593
FC2195E6089180708F7D7BC8C05B44259851B57C5D3B0A263D810CF008DC6D57
DE18F4F32AF2CFE6A87D0A7863D0782E44B745AD8DCBC2BEC2FE8C5DC793C30A
131D44BF0A9FE151D59845BA560398D12FBCB6364E0169AC951221F55FFB8094
7DC8FD9C6E5FA5BBB6CD28CBB4A652452242E8F8742324D7C27230781264F67C
98C2DA03A982256DF136D78F10666027D7447915356277D9168063A7AA1250D1
0A93CDA9255B931CE3BC6D092FF745504AE315D1E7E61AC798502A54110A6873
863CA048A0BF1D7B1F0873953C4BA09BCF4FEA471A71832280B2E6D0613A53B7
46A4F4B1B26723260AFD05B9135FD66BD70EEAF69C3B1838F1222E77C0700364
BD59E316D74BCBD1505E80A467506DC7D90813460D6BFA4EAE461F825CC3E8FF
696B70DC968A284B3EA59D15C8DAAF298D0BAC1F691AF757A446BB515B62CE57
0BC7E65C4FF0AA06A4299860E10F4BC23E053BAD5B86670C7D329951644D47E4
4455B74AE3C3909CAAA2884FC27AD70C108430D377B0B1FC26BC13CEB8267FDF
A0C8CED5FADF2F3B82FC50DFAB83735F006212C3F6EE4A7F1D9900B468D07EE6
0A5F9F9338192CA152A3064125DF97DCD2B97E4267AECDC63DB2220042AFB4E5
DDB163DF0C0BC56284E02BFDB4E8728095B72AC3AF12FCB414967683D1D68C08
250AE8068877D774AD81EAF7E2068E1BBCE7B76DC5ADC4347DC638F7A315139D
13045D3D1BE96BE164C1B20703A56A0CC8BA8100AF4D1E1D17F2306A1E58FC33
649EACF7679C37302D0D8CE10DD65168FECC88933AFE6B80D77FF55842657013
51CC83818C1AA3F520D94CFB11F5273DC63DB331821BB2E47D9CED7FA4209455
28F587FD449B403DA1538DCBF9E4A88F15BEC40653365C89C056D3C3FF108658
3CB4DA2895652DE12342A8870094F4E39E62002714FC078EE7E2A7D971DDFC35
384EFAE32C1F0CB2FFA285EDD3E83019BA947FDD0498C9926A24D2AFBDBF8DA6
180ED5A519899449735E89672406617CA50A74BA093B3800711CCD2443BAABA1
0E5CAB404E21D879C10C1A84D2F1BE68C52D084763C477A13442DDFDFF0AF7CA
36E286861D8DE7824FF1D46D3666E2998919583C841F621D8F6D72158FE52079
DED7E6451A6FEE152FADA27DC2006AF7F0E2D673AB7A50D1C06038FEE0991114
56CB4449392AACF2CBC3B6826153854E8AD0597D8962CD53566797105A65EFA1
F2D4008C6C2D52DCFFFB7F3D84C6DA5CC85D1BFBF220E3C35EB22662A83B1F5A
2A1109D775DCCECEC3CA5FD3056FDE86B0C2085B4A8C01B7CFF4630D30FE6A32
9EE6161C06E4A87C199D1735309E9BC52518578552ADA47A337280132947DCB1
1D5CD87125DC096677DAE31366030EA800D7DF65F0CB76C163B5A8E8145E204C
64A40E25644E8DEB2A526F0F4EDF4E1D273D129781F425D133866689727A5F20
871220A61CB2B05B1FD097D468DF228AEA7E3BA5CDE282927A47FCC6CAD59948
E784970DBBAF0586EC4BCDA6C15A39778D6BC4C8F7C29C37703BA8966717FB08
6FB01E2B46C0C3E28D6EF0ED086AD1D2D72DE676C4C43556AFFEACB425A48FE9
8904B555A576199D8B36CBA02BDFE44456EDBE19650745647B06B45E3C75ECDF
2392CCF96168F29CF2565716CC459AFFF577D38189827E5DDEB600263EC6D079
DA57F83CFAB68E8C972B69C9A1C6A19E883AB3F55057DDF0CF07979EC67D7C4B
F4DF2FABF24EB528409B1A2EA401630F9C81D79DB0C73F3C6E1B2C9729B382D5
5D70B2D0657D050013C492E228D6B340EB2EA9B2925AFD08B4332BB769BB614F
5033CED751BD4B3F3F8779256F9CBC0FC3C0BD927339BA8B47D8961BFD88B71A
FF06AFAA48AFF15A9DBA9BDFBF4ED467910BFDA8D66B4C8757A039B2C53341CF
D2B04F8CD0404DA69896019081A237F90FDC211B80FFC6C13D29A46F51D0E85C
663D879421269AB4EC0F40150DCD1AF944A9A1BB513BDBEAAAB5B0EEC5514494
96304036209E611FC35F2284039DA397936EBA48D5691B31D5E5D7717CEFF6CC
C9BE33A0BAD12FA81F6BF46D45B32859A07A423BDBCD5B192C95EEC1558ABF7E
CD63485BDC1FC0C1DDC8AD1D6594A8911FDD354957005BC88760E3B5D2AF397F
0EEFCEC36F9EADE72C2934656A98059CDCA9D92DC44CF4FFEF5975EE5FE13E5C
695A07324B5207AF24BD33BE3B166ADBBD07D228F6692523E7A5016B84C849FD
5F83D4046E237F2464ED98B6C3FCB9AC84CFADBB385113D1E4BAF8C1BE3EF73B
B192D6F83254042BE6808019651B7982BB9A01F91C2FD5E805449126B9FF7BDF
8D4C8E64586B6B5DDF1A876B7DAEE9F0FA2B2464598613157578A5BB706DAEBC
720EB8FF258F4C1791E813303C31EB00A1B3BAB48F328467657BF3C78648F710
2B52F07D9A34EE2383B097F6962B62FA63F678879B73EEDBD2C5AAB831C38AF3
7DFD7BB3700DAB6AE08872163953674E0F0D9AC251C78C424462D791F9F2F89C
9012AFD4525E6E1831516DD698CBB7CFD53E764103774A46C1166927CF9877ED
20364D87BAD1632F4F90C534A529127BC797E56C43B40E2B94A17583E517A7D7
4F6469B81119E4C950B08255338C19786D20A4C139122784765B2317FF2C2DD9
C09DC38648D6FB01C3EC0CA1F6FC66CA1879C81EB3CAC6EE75E7132C33CEF09B
4C4567D561EDBDB042359A4C7A0A15E533591AAEFED85AD3CD628A619683E7E7
2BADED1B2F7598CCA3D96C275B60F856A871A62E56D66EA573CC7A35E4D663F0
666097F61750EF26E0F505926C3F30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
dup 7 /minusplus put
dup 48 /prime put
dup 121 /dagger put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6CCF2F577C568ED74466961DF3B0939277731760E6CA8A496B50489AFDF559
CE627D143D52526323CAC273BFD754EFD5F279C96E7AC2F5EACC1C542DE2231C
3D0ACE7755A7AFEBB374E4807E8038FA1EAE518A7376807A32DE5FD55344F9F1
3342D6A1C34CABD7222EB2729EAB1941237687CB5CB2DCAB2D3E81731B26E397
704536C5FA39A4AC96298241BD976D01773218CBC7E73827519EB19DC4DC5B54
B4D3F1C441CD6688C404F6BDCAB1B0E56BD97D7AD07639E358720E2F61BC41F8
859A3A3ABBC189CDCECD66EA5953ED9347A599F6E305BD511D4F363FA36EC6BF
49CEF2458F987C017C0DB1BF27A6F70801FB6AC15F46BC393874AE9316E1EBEF
D3D4566C41E5635E353E6B08ADE7F4A66517B75ABEEE309594E5221085C60D95
DFA6B1DA1FFA9D8CF15099A1A92FE4E49B6A96E35D642A2F3016E31934655219
33AC740267175CA6C548F3607D91F9DB8C49CEE2FB65516A11D639927066F759
111FAA40CE236617BF090B96A3B46D5780E09499180756E185907EB056D1985F
3C9B205FD71957EFC2BFCCF212A2380DC09AB0DFEF4E3165DB65C62DA216B270
46BB8A4F0C9EED6092E8F527D2AB784423D82797A31C3E4BF7B292B7EEBC5938
39BC3FCA903BC8664FB761AED684ABC18BC85D8A2FE6CC50ABE82A6440705F7D
66FB200C51216F3127A0AE73695E84B45E7FDC636E7E899B27182AB2F7A4A1F5
92947CED131180655801BA3ABD21A88C9EE8BA6F36600E3E8428E5092FD3F50A
9D3447ED804461037AB6E1B25E3798880264E718FB39D7B88B6F1CC7B2FBD6CA
4B3D69290B4EF17F5127C0A881A58062934B0779CEFB0820565AF77C67A768BA
C9DCC69B3163496AB8C1C6F93FD4D6A83517778CDA8AF23A367405D755D79556
F500EFA4531EC7C4C0C19F7509043A1EF1C2EFFEBE727F9FF4C234132F7CBB06
9366380B35855382D2169289618648BCA61D34889D3FD31957BEA8E521C411D4
157F9A73AEDECD321E7459A34FDA8FB1D86619A04F6DA0CCD3DD0E56A31D5B0C
698469FA0D762F28163EF611338E678F5B292A75B44FB9E7BC90A7D4E287CE6D
5AD6C919B70FA30C27AEDA268E2963C61E9E3163AA1652CB113C83C8245B7483
8957C96B1D6E6B98C9D3B692C5E655C9B0A12EBBA11B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 7 /minusplus put
dup 121 /dagger put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF0F096DC5DB0696208F8543514A437E397416E28B11F692521A6C01140D481
213BF1E96355950EA688F3F008193DD61970FF1EC0F7E9DAB1951A5344F2DCAE
69E08FD6DC42B09C496568ACB2354B6B7987554B9344232E886F3DEC63A7FB69
247C45C449036D16BAABC1932B1D4A266C8CF708F314BE96E6258BEB04E3B05A
1EB82471EFCF0490504F844EC6E519BF3652D89822228EF1AC28B38873794D83
3FE0A08925C087696298636A9AA311404947AA23ECB2640CF4B4E383BE536403
899F782D7C48A45DE00905C74FEF06AB1EE3B89F6ACE188F1530E17171AAD7D6
591B9D1823423C53FD07EB973B329ED41A87637801C97B52F75F9450F1A84D84
1CCCAD075897F36A7B45A306426BAA33B11DB869AE59600751CBDD6FADF9A795
DC7121475ADABF27DF4BEA369F016F9A676072CBEBFDCAF5D551631D2B7DE689
CC0FE1846FA15FEF573C0A39B74F818B815AD4DD24D1B6B1530A0920905D6E75
F72A7DF0FD306CC077197574020636A30EB68CE2C30FA253B89B0D735C665FD3
F9B8DBD1F10ADB1AD8E0D8B3E435F6D1CC8064528D993C9ED2CDA1BDB4A88BFF
3EFADF50381E551F91CDC866B28E075437C629831A6E13A0CF36D6BAA53651E6
7125F0DF75939786DB03CFEA6F511DF20FE3FA7CC3E94290C7245049886BE4C5
092B613A45DADF68650E685635EA947B97
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC14BC72B952
032FE1D7EC43C53CFA887B2BC17116FB9DECB6FBC3F2954527FFFA1B8E57AEE6
8A92CAFAA72A6889A299A46FE5E911B5399C58574C5E14118193C5E291E398A3
B63363920E22A90E5552DB38CFBEFCB1F65AF4CE70D1420555ACB4E3E205CBE8
BC96DE8BEA1505CFE2752B8F73013AD9CCB7B21CD0A773B91F04B06171E237BC
EBF4EA7099314E3452D1C304ADCA896CA58290D557AFA6026B7ACC7D837DCE56
A311023D0DE7D3ABBA4002316F3687221F42328CEF48BE93774B3AD99E272449
ABE6A6669428F89D6E3B082CE208D823C0D02DCD209EC01F28EC7B1CB30F5554
A12B671BB2CA1398F65FD0A764A54500FDD53E5F146FFAAF35B8BF4B489AF91F
30654219AFBA2A55A24376D02217FB64BD239285BC326D3CAA99CDEED10BE76B
C555C63113ADAD38F76C7ACCE6A4C0A88FF97401EAC80EA9A793BB69A81395C1
AEED68DF69829C1D3E652292939101273E6F733D0EFAD93B445DE8171F1DBAA1
D9E95DDA35726C1297991B5D00B627C0A838609EB1473D8CF92B969C07398319
845C2CB558A488D16644FD19EC72BFD6966A21D64DA4F926C068E8FB10548593
C75DD18232A89A46E40D4187FA511551B4793C42178514EC183BE32AAE65DC84
BBB74B44F02B39F48375A7D75BC37FEB2784C1A15D6116D6719AC9C2257EFE80
25A77EE3FD66EDA1201BB787A0B00D7BD3B300915D50ADA73C3356E66B4C65F6
59C262A6078F4DA335EFA4CA54911BC802A06B3A57E77BE1AB06E89BC42607DF
530239A54A704F192F563D44BEFB1931DD7E2CE0E540A398AA83F571643D659B
AAB3B2C8FDB9A87D88D52B68DA57097C8EDD95A6ACF7DE287FA97D0495E28CB8
E2FE2A4CC0B9DE515B31DDDB17F52681C14DE689A8C6F2576DB779DA5062644E
9625262CA557911A3715E19E727337FD1617135BF5C1D8EF063ADA63F3351D5E
8B2A5BCCD284480DFFB6F7430526ACE47406FB016249A334141B4B1E2955CBD8
F89F81127D86DAD35262BEDCD4DB77132F852D92F19DE22D9F51DAEDF587B8C3
A03523616D93E0B8E83C10BEF2DC54827C9BE2CF47D4CAA8B36A21B11AE05FCD
0B6061BFEBF38870A86C70B16A053495F731819FA717D1522E930BAC7F8C80C0
E014DBCD8432D3CEDF638A709D3FC28E9F645B3C50CB892AF4BFEE6C45D44436
A4F5E37BE5B019E586D7883362F9D64C7A0BE6DF82C2EE185C9D03B3CD1425CC
36C2E4B233E8AF4A29074189DA36A224FEF55B06A6036ADD54CDC87F9D258766
458C8FC8AA1C0A2E529502832B329B1EBC55089A05E25D643EB591366950DCA0
6596B169C966551150795B880D0846736F0649DCA8FCCCB124E1FADDFAF3D594
38DCE776AC8AF5D3A9DE88C7D61C01B842371D586D016F2041CB837A1F9DA290
79555C100265D82C9C1D7F461AA87AABC56F78F0F213D963AD955334B2DC5D1B
BD75DDFF95F564EB7AA7581CFB06A386178829921A8737E0EC21F7CD596D42A8
8458B89786C2F6D96D631410E9544817BDE8B4217757E8564BEEFBD55094B6CB
C2BC2A15889917716A541158C96926144F21EACCDD7BD4051DA6FCB815622C7A
C5E331D8E87B801C0C536C10E631A326ACC0CC2A24FB5558FAD842C55004A96C
23E1E5B7E9E315B157F8BF1D9AD06FAE9113F3D8561BA38C75DAB52F0F1124D9
9714AF4CD433D12A603BCCEF925F9DED97AFF68EE63CE7F39CA5D52385DE69D0
726FC65FDA29EDFB3AD6CD263187BFD652DC36561D27A9335BBCA18349AEF24F
7AC32607B6794509B9C2BB41B76CA61E9C07B723B259F845681D61D02D28B185
C9F052844D9A5F91CBC7C549CEC434910D8AEAA207BEB7A8B227217A257151E6
1514378539C64A60A92DAF8DDA4F790910BA6AD20B20DAAA10AA02B9A6E6EEEC
07FD93D19F9C0A6F656F481D4F7B40F065B01D1C41C9D73C75DA9ED186C6CACA
5E2D35E33B794FD84C274A4D9C2643EBEC15DAC5E131E55AB411974C623C8BA0
8E65650BE118A8C95B4F71D56690F7B9C77824F4E9C1C95B9FE05B3BD3422A49
358C767D7D53CB046B807975E69988B989F0F49E2D6E5CBA9F47D5E85A3109CB
FE5FA815BF6EB7DBB3CE2170F11B7BEB76D49702DE647D7C8D3584D7A14FBF60
09DFFAA273DD3D6AC247DB17A3D739E87F31F5425E2F51321A3D10651AC66E0A
8220B7AF4AA4ECF2B1C4CBD7DDB0FDDCA7B33AA7C1E4216815EE12838EE9A201
C152867D118A131E6E732651C6AE0B3D1E50EF77CE173793A84EED985F7E946C
FF07C2DC0FF217824B2832924F86F49214FEBB4B3AE05A12F0D2341328DA421C
AE132B0C35181C92FDD6246567D3300B2D726BDED2B572EAF23F87D1B4E33DCD
967D167E9E0F204AD90CAAF7A0B94495594710F7BB631D9C72CBB5E46728AD90
E833F397246EA4C44A12EF33A54D245C6C0736E62CD1CEB660425F040200EDAE
2413F87100FD3FD7FE42F04D18D133EE2768FB6AEFDBE92E6CD9BF682FE83797
4BA4A855C6A8CDF351FD697E94AC170742C63D2919166684309A799D3BFF11CD
94CFF84BB97E5BA59D46A448D60C4417D996A499D1C5BB08FF6D5A812EFB4132
ADFA39B4F873B845ABF2660C76AF44F53C24F832DA90B09507D70105B7241646
9B6C5382DCE3042DC9767C407C0DB4D0FD1A4881A34FA0E99F976D08BCDC3AD6
2B13E1AF63B076ECB3C414A196A1A2A5F44B948ACF6C46F5357CFE54802EBC92
CF27E05D3E6A05FB23C6ADF60A26190EBAE17A9445749D10077D2CDBEF605697
42932E06AEC82A22C9AE979A6FA4D64ABB59B854532483B8ACFC184F8868FE1A
D0BE745BCA2104F0A28816B184277891B9231F283D9166CAD15F41F7AA0AEDC1
15AF57A6320C8F34A80B6B583509C50DE3D7C77FB860704EBE8C24D1A37A556F
779566ADCB995B47A4712422DFEF01EA631F6E5F903B64CC3B99FB57A6691229
62770BA460321F5862A9D9A88A8D34028BFEAC3FC913A48F633FAE8008AFEB27
20D978E9BD2DEB6E208C64F3FD8FFE3272CFBB8D45A1EACB420031CEC4AF77EB
27A139EC69E2C539BDFB656C4E3ECB8D2C235EBECF76F97B21A25B29B8F3CF5A
5AF4779772A5EA8E06E70E2E5578839B6A5DC39E815FA3511F2B8E095BCE64AE
BF492ECF2B562A200D615E775EB811699792290062325BD588D00D8A6A087C2E
A4AAD3D5A9753BFEF2BF2C41938C4F0D045A0771D114D29A2A4F2CB04C74B2F0
DADA05820D65E28AF32F3966125971F77A2C246C3D0CCE2C661D619087D4DEB1
91FA071D0061F16D88796C784EF51E51C4A4343AEF8FE00806D8F00BC65EBC99
F04A5496AC6A0754548E123CFEA99340213CC9DF271D208D6CDAB2C1667582C3
E119B2D5D5CDE1BD2D46F8FE442DDBD12802DDA169193B5C9F98A905EEE1E588
3DB2F529BE25705DF7CC05BAB01FA52B3CA83B5ABAE16CAFC3AE6B9AF13A25D1
4ECC5FF4C6D1DFBCF8CEE94B276F098EA2EB484D0FF08E196EFC5F2CE715B765
EEBBDCAFFF0D1623C49F3A52C4EDA18B7B6BE5C494D3B283AC8D1474C2CD4D57
CDD31BA813A17F41F2874650572BBF54457C67C54DC0879E657230C265A5B7F4
1D9155E483E4B75F1FECF9FDA5DB8DA5522265A58C5DA46DCD3B5341538CC03D
6313AEE00F41D9B94F0A6EA28B81032D3E8E8A237BE625AB955034B7F4A2D303
CD56EC5D3671C94E5DA13E4E4A252094D0B6C957E101044FEA625C005977FC25
24B156ED7CB1418AC11E31ABD758D981F8DFF01E8E5B69AB190B9442922A435E
50C809CFCB5AA18CA5AD74C16495EF5BD7E02991D9FB20F51EAB0F57F674163B
20972F00A44C9CC74503562BB96A5057502FFE2657D8B8C788B4A98D8B6D9803
995CE6CC12679E415CBFB9D8ADC493699F0E68263397CC5A5E1947A1A80642E7
3431449159694228F4D166448D6B51F3232847CB0B7521E5CEA887FFC56F020E
491F6F2347D9DB0CD7293EADDD2502C915E2823AEAE5A1520AE4B73532777964
9370B5E56AEAE5683AB7BD0AC48A31C87ADD12BBA280B100D680EB15FA323174
45B8B172AB0DAFFE5A61FCF201E96A3AAAEA3274474FB45D8F06B6CBF1CB66B5
37B5E60118E4EBECAC3A92C0C7552AF5415B7F36694CCEAE7F12A61DF88B80A1
9209BF5335927D6117A139AD878289C55F27E33850C23C450352691D2A343F91
FBA5390025BFF1FA3681BACF9492B3B12E88D84AF3B7ADAE3B291CAC4E4347E7
45919D8340A0F97BCA4AE57ABAD4C0569B6B94EFF5C8DD01B31C564BAE07533C
1A1A996AFE0BC2925DEC62CA487FFD2BD823057B3EC569EB5FDD37F1505CFB55
BF1A0020860919272ED3A1DD30E275E4A13A7B8956D98DB179116063F8F40894
3324B56ED1516E8B321598F532E5CE88ED2B0B72818F875259B003AB74D360B6
E0F91C3C3C0DAC9D524D9DEE74E514A13A36F0BAF040C5B1E7BF125215F8A824
1E38F94A96EB7F2A85F5EBC19C6BB6BC55FA1B1F3F3E01A2D75CD9FA03668530
FAD2A77A5EED85C9303C4F67C8DAD010A913779C7DACB01E8E1587D9C2843A42
6FD735B40E6DDD3450415CA80E8590F552C6AB7B34548E00EAACF6642223C472
81BA7C7522342A58C89944962E09541FBB4C864EF5F0F8F18372457B88418E5B
FCECD393307A623F6F6A3FFAB39DFABB6F79AC40355A117B1CCDA7DE9B268A7E
B57C06A13CDA0CFE0C2768667D461CA559E580F36A6CFD7131512EAC9E970B1E
BC9980849D1B570DD56244EC5D74C62FF8FD0FCC210E2CBFFFB8CE1348D537A4
E62C15D439C32B3EFF7C325551975EA6C5F05173E4BF3065FDBF4FD92857E312
129496F851155686BE6E9923D258E1638F24A453E9B9EACA745B2F22C42722EF
EC6BBCDB142BE4809CA245399CA0F0EE099AF080659DA912005E66DFBB08490E
8968CDF238777960028824E2A6C3CE18ADDBCBB37D7AB4A2DCC687A1AE760D6B
C67920E7D3FA377B202DA4A34D722E90EE157F435CAB1067BB279AC164DEC680
8E80CCFCE27842A0DE4B478CA153D1963D180EF18D90A8CA521577DC386FFEB2
76E6474F422069E65809B7A1A57F9CC512BDC51EF25496B575E95F23639AF5C0
5AB13D5A1C28A17DDC8EFA3F3815ECD833EF1073BC902817ACEB8D723B1868C5
ED5B3BAEE5ECA5BFC73C09D36274C91F1149C89024DA3E3E0023A2A6F53075F7
5823778CC4535455BD3F2985971D00AD3EB7D948FB905A2962182968719AF5C8
92966ADC9AC30623370E3FFBE44B07095DD6F153A146FA2DE79847A5AECBFF39
095F098BC2D677052F27DAC0408ABFD3940FFA97F2BAAE79ED2BD6D8A3B72353
9698E5C6EF96832C8915D0C0E3A64A10B9B29A54F4F4B2D472C74909CC47C167
5DC6FB9C7525CCA4F4B970A594F67A09C43611AC9EEAE94F2C9EEFDAEB4B4B37
C5C1538E75C144D7ADBA18820FFFF17D34221200BE54B387539858F28C3C108C
0E6FD94CE8C5BAD694D10267153A360C9C94BD89DFADB57108933737F206C325
EC1CFDEF3AE91E163A19846B3BCE5D31682286AB784357B8E3E7B676414CF22C
D112C8DD5A99D30A6E22E02BB46D5030E787961D725012E334F39B854CCF38FE
F2D7B69381C46CDD355CFC922CF908D57E0BE99055FD8208542CEA47B964FDCF
13CCAB4EB815E0CFBB2E272ACAD11D044CE0B3C75CEA3665F0F823DC5E1A84A9
5934524CC00394C085C7A73A1CAC507A628E68A60E3EEC046A289CA962647467
9F3D65B197D71F801893A625A7E1CBCEFF5D8A90B36D5FAB7B48D2F397940AF4
9B9E73B5E2E72215DC4CB16FDEAF2A75E2CFC520197DF459122BB768E51C88FB
AB35E46D57BC4AC0C6260AD8FDD81C1F284551D93385407E4BABF9DA26B12931
9BBB3FC251EE5226E02C35C7F56FDB05AECE9C3B769FA6B11EC69FA70447CDF1
0ABB3D461B377B735136A25FCB75571F963B88E2F961FBDD21B214769CAECC8F
997C2B15BC124DCD0BB4F31B949D306ED36FB4BA1478D29C0B5F66477D665ACE
002865C27B5C759F7273C70EE124347A1D11655C3298611398B1ABCC0650308A
72242838509DF0244CD985EDF7E13065D41704CCD18035DD6CDD3B5EBBC1D5C4
681ADCDBE0AB9794B39616D0E48F94F1AA9587E12948A1EC748A29C4F4A8BB07
8B4618F35E8ECEA0B86107C8B59AD488B716A5636829E234110EEF81E4FC9093
9521A05C7B9DE809A42376FD4633A23772B8B7A88AA771D6A206B281D1B8F993
8DC221C5E420D7D4D2A78D8FA785E702F3095B2EB2A714A44241CC8FDAE5BCE6
BF6EE42065CC9FD539BE76F153538AE82E22E06FC1770CDE2A830A3CD189865F
4108D6FA749BB8F369DEF6596C7FA23B679205BCA9B006C0853B0F301B2962F1
7E2A50F544464A7EF151360C158E6A8A44532292A5FAF1F0A28C8C1833DFD6A9
924AA097BD0D188125F29321CFCD1BCD165F5585B81EE909C1C6481ACBADE9C3
C69318100EEEAC6CA5E11A97EF78932746748194F96259F8A07E44B268BE3DFE
0BE3BBDB1D45748A37A3B984E86DB039F36245CDABC5DDC6892CA968A4ED7626
CE7A3C653EBC91528EADECDAC727F7244F08B1D8F90C0825F926FD77A0234769
426CF1AC2D064FF0265D28C6C041B29EE521879E4F46ED09DE4C3F279EB63DAF
F1C17EF00F55CF57BD7EE7864D481F345ECF4F13C67C62B73956B698256461E1
95EDABF1F189471C0CB3F935823E4DF25E65F0F41D8A518C65E7900DF548ED57
1E8BB2CF6BA468107F09290D30732970AD06A5D4C99387A633CF8B8B410D0317
991F5D85926F3570EBA08DE74C2E4B5BF4B1B5BE367CADF597ABCA6FE9FFF611
E68B87CA96C98AC32CAA0E536D91E4EE709D0D326F02A732E2F052AF312757A1
E1272C648CDE196F3847D0F9982FF406FB67912567CAB22925872B1F1364CB35
BA47AB1A5F91FD97F61ADBF6FB085968F0A64000B3C6C3715CA88399B2AF9ED8
C9F0B7B9D39D30863E817EE386273A9EE5042BB9CA9FC48008A49B47277213E3
AC11FF72BFADED1414817515060502CF74E70F8C7A5CD9A81AC8FAFF388093EE
FA925E555E772651781F7E955EAF79CBA216B6140F86696116719D5F21CEF091
7E1CC0C2366370CE93E3612BD459832CB68DC6645D83E14E72E4668760649B81
6E6C69ABB025B07D31225B354009B0855F9E50E4ACAC22D00CA449ACCC3C2DD6
DA8B3D3CD67F9F8037482068A0589BB5803F8D028C493E259418B1FAEF148615
4CD02753B5280C34AE3CAFF7B5A515B67243C920BD60A6CAD7697715D83919D1
8EB45A038E917699FF324B03BE49B37246B968C16FAAE631BBBE91E4BAE514F9
7F71F14482EE13C05A0F517BBB354C3408E1F7B063DF346B762334F27609EDD4
CFCAF9186A52BD6E613D6880ED73E3C3C3C9E808AB0061139004A20EC0E099A8
647D60388E43FA3FA95CB8BDBEA507E1588816E2FBE104EE488385569FAE5D42
8A382AEF44B01589A64D33FD2AB458FDE575030B353EB9A779FA9674F943E7EC
7A8FF9C19B5F05083BF6938E614EBB136649A533C6E491700148C8FB976614F9
E36F7A344B114A0BFCC3362A2915E0455165EB21D34F1E10168D38FABE3E3F8A
ED113B978C6EC8F393DA67F5BE01623D83DC20640F4652CF3FC8108A3ACF667E
935C608DD10A3F8921A821AC30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (APISIM Draft.dvi)
@start /Fa 135[72 3[40 56 10[72 2[64 3[64 18[104 78[{
 TeXBase1Encoding ReEncodeFont }7 143.462 /NimbusRomNo9L-Regu
rf /Fb 139[24 11[36 104[{}2 49.8132 /CMMI6 rf /Fc 162[21
1[21 29[60 19[30 30 40[{}5 74.7198 /CMR9 rf /Fd 137[37
2[36 4[46 68 1[40 31 26 16[63 4[47 5[74 16[60 21 40[36
5[43 49 11[{}15 74.7198 /CMMI9 rf /Fe 134[29 29 2[33
18 26 26 1[33 33 33 48 18 2[18 33 33 1[29 1[29 1[33 16[41
1[44 4[22 3[41 3[41 65[{ TeXBase1Encoding ReEncodeFont }22
66.4176 /NimbusRomNo9L-ReguItal rf /Ff 136[48 2[22 26
29 2[33 1[55 18 3[37 2[29 3[33 12[44 37 2[41 14[48 65[{
 TeXBase1Encoding ReEncodeFont }14 66.4176 /NimbusRomNo9L-Medi
rf /Fg 107[29 29 24[29 33 33 48 33 33 18 26 22 1[33 33
33 52 18 33 1[18 33 33 22 29 33 29 33 29 12[41 37 44
48 37 1[48 59 4[48 48 1[41 48 44 1[48 6[18 33 33 33 33
33 33 33 33 33 33 18 17 22 17 2[22 22 37[37 2[{
 TeXBase1Encoding ReEncodeFont }57 66.4176 /NimbusRomNo9L-Regu
rf /Fh 138[45 45 45 45 1[45 45 45 1[45 1[45 45 45 45
45 45 45 45 1[45 38[45 7[45 2[45 45 46[{ TeXBase1Encoding ReEncodeFont }
21 74.7198 /NimbusMonL-Regu rf /Fi 240[38 15[{}1 74.7198
/CMSY9 rf /Fj 190[36 15[25 49[{ TeXBase1Encoding ReEncodeFont }2
49.8132 /NimbusRomNo9L-Regu rf /Fk 134[37 37 54 37 42
25 29 33 1[42 37 42 62 21 42 25 21 42 37 25 33 42 33
42 37 12[50 42 54 58 46 58 54 71 50 1[37 29 1[58 46 50
54 54 1[54 6[25 4[37 37 37 37 37 3[25 9[37 32[42 2[{
 TeXBase1Encoding ReEncodeFont }50 74.7198 /NimbusRomNo9L-Medi
rf /Fl 134[40 40 40 40 40 40 40 40 1[40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 3[40 1[40 6[40 40 2[40
1[40 40 2[40 40 40 2[40 40 40 40 40 40 4[40 8[40 3[40
40 40 2[40 40 4[40 35[{ TeXBase1Encoding ReEncodeFont }48
66.4176 /NimbusMonL-Regu rf /Fm 107[42 42 25[33 33 50
33 37 21 29 29 37 37 37 37 54 21 33 1[21 37 37 21 33
37 33 37 37 9[62 2[42 37 46 54 46 2[62 42 1[33 25 54
1[46 46 54 50 46 46 1[37 5[37 37 37 37 37 37 37 37 37
37 21 19 25 19 2[25 25 40[{ TeXBase1Encoding ReEncodeFont }60
74.7198 /NimbusRomNo9L-ReguItal rf /Fn 172[33 83[{
 TeXBase1Encoding ReEncodeFont }1 59.7758 /NimbusRomNo9L-Regu
rf /Fo 134[50 1[72 1[55 33 39 44 1[55 50 55 83 28 1[33
28 55 50 1[44 55 44 55 50 8[72 100 72 72 66 55 72 1[61
78 72 94 66 78 1[39 78 78 61 66 72 72 66 72 7[50 50 50
50 50 50 50 50 50 50 1[25 46[{ TeXBase1Encoding ReEncodeFont }53
99.6264 /NimbusRomNo9L-Medi rf /Fp 3[37 25[33 41[25 32[75
37 1[33 33 24[33 37 37 54 37 37 21 29 25 37 37 37 37
58 21 37 21 21 37 37 25 33 37 33 37 33 25 2[25 1[25 46
54 54 71 54 54 46 42 50 54 42 54 54 66 46 54 29 25 54
54 42 46 54 50 50 54 69 33 42 2[21 21 37 37 37 37 37
37 37 37 37 37 21 19 25 19 2[25 25 25 1[62 1[37 30 22[25
7[42 42 2[{ TeXBase1Encoding ReEncodeFont }90 74.7198
/NimbusRomNo9L-Regu rf /Fq 134[42 2[42 1[23 42 28 1[46
46 46 1[18 2[18 46 46 1[46 46 42 1[46 11[60 1[55 60 3[60
2[55 1[23 5[60 55 55 20[23 44[{ TeXBase1Encoding ReEncodeFont }26
83.022 /NimbusSanL-Regu rf /Fr 134[29 72[18 40[48 3[32
3[{}4 49.8132 /CMSY6 rf /Fs 134[31 113[55 7[{}2 66.4176
/CMSY8 rf /Ft 134[50 3[50 28 39 33 2[50 50 78 28 2[28
50 2[44 50 2[44 9[94 3[55 66 1[55 3[61 1[39 5[72 23[25
44[{ TeXBase1Encoding ReEncodeFont }22 99.6264 /NimbusRomNo9L-Regu
rf /Fu 134[83 83 116 1[91 50 83 58 1[91 1[91 1[42 83
1[42 1[91 50 83 3[83 12[91 3[100 2[124 91 2[42 6[108
108 65[{ TeXBase1Encoding ReEncodeFont }23 149.44 /NimbusSanL-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -128 107 a Fu(Inf)o(erring)41
b(Likel)n(y)g(Mappings)i(Between)f(APIs)f(using)h(T)-9
b(e)n(xt)42 b(Mining)496 445 y Ft(Rahul)25 b(P)o(andita)1057
409 y Fs(y)1092 445 y Ft(,)g(Raoul)g(Jetle)o(y)1637 409
y Fs(\007)1695 445 y Ft(,)g(Sithu)f(D)h(Surarsan)2425
409 y Fs(\007)2484 445 y Ft(,)g(and)g(Laurie)g(W)l(illiams)3351
409 y Fs(y)1004 510 y Fr(y)1037 541 y Fq(Nor)s(th)e(Carolina)h(State)g
(Univ)n(ersity)-8 b(,)22 b(Raleigh,)j(NC)n(,)d(USA)1042
597 y Fr(\007)1094 628 y Fq(ABB)i(Cor)r(por)o(ate)g(Research,)f
(Bangalore)o(,)h(KA,)g(India)674 716 y Fp(rpandit@ncsu.edu,)d
(abc@xyz.com,)f(williams@csc.ncsu.edu,)f(sudarsan.sd@in.abb)m(.com)p
Black 0 TeXcolorgray -152 1202 a Fo(ABSTRA)-5 b(CT)-152
1293 y Fp(Mapping)16 b(across)f(dif)n(ferent)g(platforms/languages)h
(Application)f(Program-)-152 1380 y(ming)30 b(Interf)o(ace)f(\(API\))f
(is)h(highly)g(desirable.)54 b(Among)30 b(other)f(reasons,)-152
1467 y(mappings)16 b(f)o(acilitate)e(machine-based)i(migration)f(of)g
(an)f(application)i(from)-152 1554 y(one)k(API)e(to)i(another)l(.)k
(Such)c(translation)f(is)g(particularly)g(rele)n(v)n(ant)h(in)f(cur)o
(-)-152 1642 y(rent)24 b(conte)o(xt)h(as)f(de)n(v)o(elopers)h(are)f
(increasingly)h(migrating)g(applications)-152 1729 y(to)32
b(di)n(v)o(erse)g(platforms/languages)i(to)e(attract)f(and)h(retain)g
(users)g(across)-152 1816 y(such)27 b(platforms/languages.)46
b(Gi)n(v)o(en)26 b(a)g(typical)g(platform/language)i(e)o(x-)-152
1903 y(pose)i(a)g(lar)o(ge)f(number)h(of)f(API')l(s)g(for)g(de)n(v)o
(elopers)i(to)e(reuse,)j(manually)-152 1990 y(writing)17
b(these)h(mappings)g(is)f(prohibiti)n(v)o(ely)h(resource-intensi)n(v)o
(e)g(and)g(may)-152 2077 y(be)f(error)f(prone.)23 b(Recently)-5
b(,)17 b(researchers)g(proposed)h(to)e(automate)h(the)f(pro-)-152
2165 y(cess)22 b(by)h(mining)f(API)f(mappings)i(from)f(e)o(xisting)h
(codebases.)33 b(Ho)n(we)n(v)o(er)m(,)-152 2252 y(these)23
b(approaches)i(rely)e(on)g(e)o(xistence)h(of)e(manually)i(ported)g
(\(or)e(at)h(least)-152 2339 y(functionally)j(similar\))e(code)i
(across)f(source)h(and)f(tar)o(get)g(API')l(s.)40 b(T)-6
b(o)24 b(ad-)-152 2426 y(dress)d(the)f(shortcoming,)i(in)e(this)g
(paper)h(we)f(propose)k Fn(S)t Fp(M)t(A)t(M)r(:)19 b
Fm(te)o(xt)h(min-)-152 2513 y(ing)d Fp(based)h(approach)g(to)e(infer)h
(API)e(mappings)j(from)f(the)g(te)o(xtual)f(descrip-)-152
2600 y(tion)h(present)h(in)e(API)g(documents.)24 b(T)-6
b(o)17 b(e)n(v)n(aluate)g(our)h(approach,)g(we)f(apply)-150
2688 y Fn(S)t Fp(M)t(A)t(M)30 b(to)e(infer)g(API)f(mappings)i(across:)
42 b(1\))27 b Fl(Java)h Fp(and)g Fl(C#)40 b(API)p Fp(,)27
b(2\))-152 2775 y Fl(J2ME)c Fp(and)g Fl(Android)f Fp(API.)g(W)-6
b(e)23 b(ne)o(xt)g(compare)i(the)e(inferred)g(mappings)-152
2862 y(with)17 b(state-of-the-art)h(code)g(mining)g(based)h
(approaches.)24 b(Our)17 b(results)h(in-)-152 2949 y(dicate)j(that)i
Fn(S)t Fp(M)t(A)t(M)g(is)d(ef)n(fecti)n(v)o(e)h(in)g(inferring)g(API)f
(mappings)i(with)f(the)-152 3036 y(more)f(than)f(XX)f(accurac)o(y)-5
b(.)-152 3234 y Fo(Categories)25 b(and)g(Subject)i(Descriptors)-152
3325 y Fp(H.4)g([)p Fk(Inf)n(ormation)f(Systems)h(A)n(pplications)p
Fp(]:)36 b(Miscellaneous;)c(D.2.8)-152 3413 y([)p Fk(Softwar)o(e)25
b(Engineering)p Fp(]:)35 b(Metrics\227)p Fm(comple)o(xity)26
b(measur)m(es,)i(perfor)o(-)-152 3500 y(mance)20 b(measur)m(es)-152
3697 y Fo(General)25 b(T)-9 b(erms)-152 3789 y Fp(Theory)-152
3986 y Fo(K)n(eyw)o(ords)-152 4078 y Fp(A)m(CM)19 b(proceedings,)i(L)
452 4063 y Fj(A)477 4078 y Fp(T)511 4094 y(E)546 4078
y(X,)d(te)o(xt)h(tagging)-152 4275 y Fo(1.)100 b(INTR)m(ODUCTION)-152
4367 y Fp(Softw)o(are)23 b(is)f(ubiquitous)i(and)f(lately)g(people)h
(are)e(increasingly)i(interact-)-152 4454 y(ing)15 b(with)f
(applications)h(that)g(run)f(on)h(v)n(ariety)g(of)g(softw)o(are)f
(platforms)h(through)-152 4541 y(their)22 b(consumer)g(de)n(vices)h(on)
f(daily)g(basis.)31 b(F)o(or)21 b(instance,)h(a)g(typical)f(user)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2040 1202 a(may)16 b(vie)n(w)g(emails)f
(on)h(his/her)g(android)h(or)e(iOS)g(or)g(windo)n(wsPhone)i(hand-)2040
1289 y(held)h(de)n(vice)g(such)g(as)g(a)f(mobile)h(phone)g(or)g(a)f
(tablet)g(while)g(on)h(the)f(go.)23 b(The)2040 1376 y(user)c(then)f
(can)h(switch)f(to)h(a)f(desktop)i(en)m(vironment)f(such)g(as)g(W)m
(indo)n(ws)f(or)2040 1463 y(Linux)f(or)f(OSX)g(in)h(an)g(of)n(\002ce)f
(lik)o(e)h(setting)f(through)i(either)f(a)f(web)h(bro)n(wser)2040
1550 y(or)24 b(a)g(standalone)h(application)f(such)h(as)f(Microsoft)g
(Outlook)g(or)g(Mozilla)2040 1637 y(Thunderbird.)2040
1812 y(T)-6 b(o)24 b(retain)h(users)g(across)g(dif)n(ferent)g
(platforms,)h(de)n(v)o(elopers)g(are)e(increas-)2040
1899 y(ingly)33 b(releasing)g(dif)n(ferent)g(v)o(ersions)g(of)f(their)h
(applications.)64 b(F)o(or)32 b(e)o(x-)2040 1986 y(ample,)g(a)d(mobile)
h(softw)o(are)f(de)n(v)o(elopers)i(often)f(release)f(their)g(applica-)
2040 2073 y(tions)e(for)g(all)g(the)g(popular)h(mobile)f(platforms)g
(such)h(as)f(Android,)j(iOS,)2040 2160 y(and)25 b(W)m(indo)n(ws.)41
b(In)25 b(conte)o(xt)g(of)g(desktop)h(softw)o(are,)g(man)o(y)g
(well-kno)n(wn)2040 2248 y(projects)c(such)g(as)f(JUnit,)h(Hibernate)g
(pro)o(vide)g(multiple)f(v)o(ersions)h(in)g(dif-)2040
2335 y(ferent)i(languages,)i(in)e(an)g(attempt)f(to)h(attract)f(de)n(v)
o(eloper)j(community)e(to)2040 2422 y(use)19 b(these)h(libraries)e
(across)i(dif)n(ferent)f(languages.)2040 2596 y(Ho)n(we)n(v)o(er)m(,)24
b(manually)f(migrating)f(a)h(softw)o(are)f(from)g(one)h(platform)g
(\(/lan-)2040 2684 y(guage\))f(to)g(another)g(can)f(be)h(time)f
(consuming)i(and)e(may)h(be)g(error)f(prone.)2040 2771
y(Existing)h(language)h(migration)f(tools)g(such)h(as)f(Ja)o(v)n(a2CST)
m(ranslator)g([10])2040 2858 y(partially)30 b(alle)n(viate)g(the)g
(problem,)j(as)e(the)o(y)f(require)g(a)g(programmer)h(to)2040
2945 y(manually)15 b(describe)h(ho)n(w)f(Application)g(Programming)g
(Interf)o(aces)g(\(APIs\))2040 3032 y(of)26 b(a)g(source)h
(platform\(/language\))h(maps)e(to)g(API')l(s)g(of)g(the)g(tar)o(get)g
(plat-)2040 3119 y(form\(/language\).)d(Gi)n(v)o(en)15
b(a)f(typical)h(platform\(/language\))h(e)o(xpose)f(a)f(lar)o(ge)2040
3207 y(number)28 b(of)f(API')l(s)f(for)h(de)n(v)o(elopers)h(to)f
(reuse,)i(manually)f(writing)e(these)2040 3294 y(mappings)17
b(is)d(prohibiti)n(v)o(ely)j(resource)f(intensi)n(v)o(e)f(and)h(may)g
(result)f(in)g(man-)2040 3381 y(ual)k(error)l(.)2040
3555 y Fm(The)k(goal)i(of)e(this)g(r)m(esear)m(c)o(h)i(is)f(to)f
(support)i(softwar)m(e)e(de)o(veloper)o(s)j(in)d(mi-)2040
3642 y(gr)o(ating)j(an)g(application)g(fr)m(om)f(one)h(API)e(to)h
(another)h(by)g(automatically)2040 3730 y(inferring)k(method)h
(mappings)g(acr)m(oss)g(API)d(using)j(te)o(xt)e(mining)h(on)g(the)2040
3817 y(natur)o(al)20 b(langua)o(g)o(e)h(API)d(method)i(descriptions)
2040 3991 y Fp(In)28 b(the)f(literature,)i(there)f(e)o(xist)g
(approaches)h(that)e(address)i(the)f(problem)2040 4078
y(of)e(\002nding)g(mapping)h(between)f(softw)o(are)g(API')l(s)f(using)i
(static)e([29])h(and)2040 4165 y(dynamic)g([6])f(analysis.)43
b(Recently)25 b(Nguyen)i(et)e(al.)f([17])h(also)h(proposed)2040
4253 y(to)d(apply)h(statistical)e(language)i(translation)f(techniques)i
(to)e(achie)n(v)o(e)g(lan-)2040 4340 y(guage)e(mapping)g(by)f(mining)g
(lar)o(ge)f(open)h(source)h(softw)o(are)e(repositories.)2040
4427 y(Ho)n(we)n(v)o(er)m(,)g(aforementioned)h(approaches)g(rely)e(on)g
(the)h(presence)g(of)f(man-)2040 4514 y(ually)e(ported)h(\(or)f(at)g
(least)g(functionally)g(similar\))g(softw)o(are)g(across)h(source)2040
4601 y(and)h(tar)o(get)f(API')l(s.)22 b(Furthermore,)17
b(accurac)o(y)i(of)e(static)g(analysis)h(and)g(min-)2040
4689 y(ing)j(based)g(approaches)i([17,)11 b(29])21 b(is)f(dependent)i
(upon)g(the)f(quality)g(of)f(the)2040 4776 y(code)28
b(under)g(analysis.)49 b(Lik)o(e)n(wise,)29 b(accurac)o(y)f(of)f
(dynamic)i(approaches)2040 4863 y(lik)o(e)23 b([6])g(is)f(function)i
(of)f(the)f(quality)i(and)f(completeness)h(of)f(test)f(case)h(to)2040
4950 y(e)o(x)o(ecute)d(the)f(comprehensi)n(v)o(e)i(API)d(beha)o(vior)h
(dynamically)-5 b(.)2040 5124 y(T)f(o)30 b(address)h(the)g
(shortcomings)h(of)e(e)o(xisting)h(program-analysis)g(based)2040
5212 y(approaches,)g(we)c(propose)h(to)f(use)g(the)g(natural)h
(language)g(API)e(method)2040 5299 y(descriptions)c(to)g(infer)f
(method)h(mappings)h(across)f(APIs.)29 b(Our)21 b(k)o(e)o(y)h(intu-)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -152 -69 a Fp(ition)22 b(is:)29 b Fm(\223since)21
b(the)h(documentation)i(is)e(tar)m(g)o(eted)h(towar)m(ds)f(de)o
(veloper)o(s,)-152 19 y(ther)m(e)j(may)f(be)g(an)g(o)o(verlap)h(in)e
(the)h(langua)o(g)o(e)i(used)f(to)e(describe)i(similar)-152
106 y(concepts)j(that)e(can)h(be)g(le)o(ver)o(a)o(g)o(ed.)-10
b(\224)46 b Fp(In)27 b(general,)h(API)e(documentation)-152
193 y(pro)o(vides)h(de)n(v)o(elopers)h(with)d(useful)i(information)f
(about)h(class/interf)o(ace)-152 280 y(hierarchies)22
b(within)e(the)h(softw)o(are.)28 b(Additionally)-5 b(,)22
b(API)d(documents)j(also)-152 367 y(pro)o(vides)i(information)e(about)h
(ho)n(w)g(to)f(use)h(a)f(particular)h(method)g(within)-152
454 y(a)c(class)f(by)h(means)g(of)f(method)i(descriptions.)k(Method)19
b(descriptions)g(typ-)-152 542 y(ically)30 b(describe)h
(speci\002cations)f(in)g(terms)g(of)g(the)g(e)o(xpectations)h(of)f(the)
-152 629 y(method)20 b(ar)o(guments)g(and)f(functionality)h(of)f
(method)h(in)e(general.)-152 803 y(This)26 b(paper)g(presents)i
Fn(S)t Fp(M)t(A)t(M)r(:)e(An)f(approach)j(that)d(le)n(v)o(erages)i(the)
f(nat-)-152 890 y(ural)g(language)h(method)f(descriptions)g(to)f
(\002nd)h(the)f(lik)o(ely)h(mapping.)44 b(In)-152 977
y(particular)m(,)20 b Fn(S)t Fp(M)t(A)t(M)f(proposes)g(to)f(create)f(a)
h(v)o(ector)g(space)g(model)g([14,)8 b(23])-152 1065
y(of)29 b(the)f(tar)o(get)g(API)f(method)i(descriptions.)54
b Fn(S)t Fp(M)t(A)t(M)30 b(then)f(queries)g(the)-152
1152 y(v)o(ector)i(space)h(model)f(of)g(tar)o(get)f(API)g(using)h
(automatically)g(generated)-152 1239 y(queries)d(from)e(the)h(source)h
(API)e(method)h(descriptions.)50 b Fn(S)t Fp(M)t(A)t(M)28
b(auto-)-152 1326 y(mates)21 b(the)h(query)f(generation)i(in)e(source)g
(API)g(using)g(the)g(concepts)i(from)-152 1413 y(te)o(xt)f(mining)g
(such)h(as)f(emphasizing)h(\(or)f(de-emphasizing\))i(certain)e(k)o(e)o
(y-)-152 1500 y(w)o(ords)j(o)o(v)o(er)f(others)g(and)h(querying)g
(multiple)f(f)o(acets)g(\(such)h(as)f(class)f(de-)-152
1588 y(scription,)c(package)i(names)e(etc...\).)-152
1762 y(W)-6 b(e)20 b(pose)g(the)g(follo)n(wing)g(research)g(question)h
(:)k Fm(How)19 b(accur)o(ately)i(can)g(the)-152 1849
y(similarity)c(in)h(the)g(langua)o(g)o(e)j(of)c(API)g(method)i
(descriptions)g(be)f(le)o(ver)o(a)o(g)o(ed)-152 1936
y(to)h(infer)g(API)f(Mappings?)26 b Fp(T)-6 b(o)19 b(answer)g(our)g
(question,)h(we)f(apply)j Fn(S)t Fp(M)t(A)t(M)-152 2023
y(to)h(infer)g(API)e(mappings)k(across:)31 b(1\))23 b
Fl(Java)e Fp(and)j Fl(C#)39 b(API)p Fp(;)22 b(2\))h Fl(J2ME)f
Fp(and)-152 2111 y Fl(Android)d Fp(API.)g(W)-6 b(e)20
b(ne)o(xt)g(compare)h(the)f(inferred)h(mappings)g(with)f(state-)-152
2198 y(of-the-art)j(code)g(mining)f(based)i(approaches)g([6,)12
b(17].)33 b(Our)23 b(results)f(indi-)-152 2285 y(cate)27
b(that)i Fn(S)t Fp(M)t(A)t(M)f(is)e(ef)n(fecti)n(v)o(e)h(in)g
(inferring)f(API)g(mappings)i(with)f(the)-152 2372 y(more)20
b(than)f(XX)f(accurac)o(y)-5 b(.)-152 2547 y(In)15 b(summary)-5
b(,)18 b Fn(S)t Fp(M)t(A)t(M)e(le)n(v)o(erages)f(natural)g(language)h
(description)f(of)g(API')l(s)-152 2634 y(to)20 b(infer)f(lik)o(ely)h
(mapping)h(thus)e(f)o(acilitating)h(cross)f(API)g(migration)h(of)f(ap-)
-152 2721 y(plications.)k(As)15 b(our)h(approach)h(analyzes)f(API)f
(documents)i(in)e(natural)h(lan-)-152 2808 y(guage,)23
b(it)d(can)i(be)g(reused)g(independent)h(of)e(the)g(programming)i
(language)-152 2895 y(of)c(the)g(library)-5 b(.)23 b(Our)c(paper)h(mak)
o(es)g(the)f(follo)n(wing)g(major)g(contrib)o(utions:)p
0 TeXcolorgray -41 3108 a Fi(\017)p 0 TeXcolorgray 38
w Fp(A)32 b(technique)h(that)e(ef)n(fecti)n(v)o(ely)i(infers)e(mapping)
j(across)e(source)35 3195 y(and)20 b(tar)o(get)e(API.)p
0 TeXcolorgray -41 3331 a Fi(\017)p 0 TeXcolorgray 38
w Fp(A)28 b(prototype)h(implementation)g(of)f(our)g(approach)h(based)g
(on)g(e)o(x-)35 3419 y(tending)d(the)e(Apache)i(Lucene)f([13])g(and)g
(Mallet)g([15].)40 b(An)25 b(open)35 3506 y(source)d(implementation)h
(of)e(our)h(prototype)h(can)f(be)f(found)i(at)e(our)35
3593 y(website)263 3561 y Fj(1)292 3593 y Fp(.)p 0 TeXcolorgray
-41 3729 a Fi(\017)p 0 TeXcolorgray 38 w Fp(An)e(e)n(v)n(aluation)g(of)
g(our)g(approach)h(on)f(J2ME)g(to)f(Android)h(API)f(and)35
3816 y(Ja)o(v)n(a)h(to)g(C#)g(API)-152 4029 y(The)26
b(rest)f(of)h(the)f(paper)i(is)e(or)o(ganized)h(as)g(follo)n(ws.)43
b(Section)25 b(2)h(presents)-152 4116 y(an)c(real)f(w)o(orld)h(e)o
(xamples)g(that)f(moti)n(v)n(ate)h(our)f(approach.)32
b(Section)21 b(3)h(dis-)-152 4204 y(cusses)29 b(related)f(w)o(ork.)50
b(Section)28 b(4)g(presents)h(the)f(background)i(on)e(T)-5
b(e)o(xt)-152 4291 y(Mining.)30 b(Section)21 b(5)g(presents)h(our)f
(approach.)31 b(Section)21 b(6)g(presents)g(e)n(v)n(al-)-152
4378 y(uation)k(of)f(our)g(approach.)40 b(Section)24
b(7)g(presents)g(a)g(brief)g(discussion)h(and)-152 4465
y(future)19 b(w)o(ork.)24 b(Finally)-5 b(,)18 b(Section)h(8)g
(concludes.)-152 4654 y Fo(2.)100 b(EXAMPLES)-152 4745
y Fp(W)-6 b(e)20 b(ne)o(xt)g(present)h(an)f(e)o(xample)h(to)f(moti)n(v)
n(ate)g(our)h(w)o(ork)f(and)h(list)e(the)h(con-)-152
4832 y(siderations)f(for)e(applying)i(te)o(xt)f(mining)g(techniques)h
(on)f(API)f(documents.)-152 4919 y(This)33 b(e)o(xample)h(is)e(from)h
(real)g(Ja)o(v)n(a)g(Platform,)i(Micro)e(Edition)g(\(JME\))-152
5006 y(formerly)25 b(kno)n(wn)h(as)f(J2ME)g(and)g(Android)h(API.)d
(Both)i(J2ME)g(and)h(An-)-152 5094 y(droid)d(use)g(Ja)o(v)n(a)f(as)h
(the)f(language)i(of)e(implementation)h(and)g(tar)o(geted)g(to-)-152
5181 y(w)o(ards)18 b(hand-held)g(de)n(vices.)24 b(Ho)n(we)n(v)o(er)m(,)
17 b(our)h(approach)g(is)f(independent)i(of)p 0 TeXcolorgray
-152 5216 997 4 v -144 5271 a Fj(1)-114 5303 y Fh
(http://research.csc.ncsu.edu/ase/proj)o(ects/)-152 5378
y(pint/)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2111 -38 a Fl(public)39 b(void)h(drawString\(String)d
(str,int)i(x,int)2111 49 y(y,int)h(anchor\))2111 137
y Fg(Dra)o(ws)22 b(the)g(speci\002ed)i(String)e(using)g(the)h(current)g
(font)f(and)g(color)l(.)36 b(The)21 b(x,y)2111 224 y(position)e(is)e
(the)h(position)g(of)f(the)h(anchor)h(point.)i(See)d(anchor)g(points.)
2111 311 y Ff(P)o(arameters)2111 398 y Fe(str)h Fg(-)d(the)i(String)g
(to)g(be)f(dra)o(wn)2111 485 y Fe(x)h Fg(-)f(the)g(x)g(coordinate)j(of)
d(the)h(anchor)g(point)2111 572 y Fe(y)g Fg(-)e(the)i(y)f(coordinate)j
(of)d(the)h(anchor)g(point)2111 660 y Fe(anc)o(hor)i
Fg(-)d(the)g(anchor)i(point)f(for)f(positioning)i(the)f(te)o(xt)2111
747 y Ff(Thr)o(o)o(ws)2111 834 y Fe(NullP)-5 b(ointerException)22
b Fg(-)17 b(if)g(str)g(is)g(null)2111 921 y Fe(Ille)m(galAr)n
(gumentException)23 b Fg(-)17 b(if)g(anchor)h(is)f(not)h(a)f(le)o(gal)h
(v)n(alue)2111 1008 y Ff(See)g(Also)2111 1095 y Fl(drawChars\(char[],)
38 b(int,)h(int,)g(int,)h(int,)f(int\))p 2040 -148 1993
5 v 2040 1252 5 1402 v 4028 1252 V 2040 1254 1993 5 v
2138 1488 a Fk(Figur)o(e)18 b(1:)24 b(drawString)18 b(method)g(of)h
(Graphics)f(class)h(in)f(J2ME)p 0 TeXcolorgray 0 TeXcolorgray
2111 1741 a Fl(public)39 b(void)h(drawText)e(\(String)h(text,)g(float)g
(x,)2111 1828 y(float)h(y,)f(Paint)g(paint\))2111 1915
y Fg(Dra)o(w)28 b(the)g(te)o(xt,)i(with)e(origin)h(at)e(\(x,y\),)j
(using)d(the)h(speci\002ed)h(paint.)53 b(The)2111 2002
y(origin)19 b(is)e(interpreted)j(based)e(on)f(the)h(Align)g(setting)g
(in)g(the)f(paint.)2111 2090 y Ff(P)o(arameters)2111
2177 y Fe(te)o(xt)j Fg(-)d(The)f(te)o(xt)j(to)e(be)g(dra)o(wn)2111
2264 y Fe(x)h Fg(-)f(The)f(x-coordinate)21 b(of)c(the)g(origin)i(of)e
(the)g(te)o(xt)i(being)f(dra)o(wn)2111 2351 y Fe(y)g
Fg(-)e(The)h(y-coordinate)j(of)d(the)h(origin)g(of)f(the)h(te)o(xt)g
(being)h(dra)o(wn)2111 2438 y Fe(paint)h Fg(-)d(The)f(paint)j(used)e
(for)g(the)h(te)o(xt)g(\(e.g.)j(color)m(,)d(size,)f(style\))p
2040 1631 V 2040 2595 5 966 v 4028 2595 V 2040 2597 1993
5 v 2163 2831 a Fk(Figur)o(e)h(2:)23 b(drawT)-7 b(ext)19
b(method)g(of)g(Can)m(v)o(as)g(class)g(in)f(Andr)o(oid)p
0 TeXcolorgray 2040 3111 a Fp(language)26 b(of)f(implementation)h(and)g
(thus)f(can)g(be)g(used)h(for)f(an)o(y)g(similar)2040
3198 y(source)20 b(and)f(tar)o(get)g(API.)2040 3373 y(Figure)14
b(1)h(sho)n(ws)g(the)g(API)e(method)i(description)h(of)e
Fl(drawString)f Fp(method)2040 3460 y(from)18 b(J2ME)g(API.)e(Figure)h
(2)h(sho)n(ws)g(the)g(API)f(method)h(description)h(of)e(the)2040
3547 y(Android)23 b(API)e(equi)n(v)n(alent)i(method)g
Fl(drawText)p Fp(.)30 b(Notice)22 b(the)g(o)o(v)o(erlap)g(in)2040
3634 y(the)g(language)h(of)f(these)g(tw)o(o)g(methods.)33
b(From)21 b(a)h(human)h(perspecti)n(v)o(e)g(its)2040
3721 y(easier)e(to)h(conclude)g(that)g(the)f(tw)o(o)g(methods)i(of)n
(fer)e(similar)g(functionality)2040 3808 y(after)f(reading)g(the)g
(descriptions.)27 b(Ho)n(we)n(v)o(er)m(,)20 b(there)g(are)g(lot)g(of)f
(intermedi-)2040 3896 y(ate)k(steps)h(to)f(reach)h(that)g(conclusion.)
38 b(F)o(or)22 b(instance,)j(Android)f(API)f(has)2040
3983 y(more)j(than)g(23,000)h(public)f(methods.)44 b(Manually)26
b(going)h(through)g(each)2040 4070 y(method)h(description)f(is)f
(impractical.)46 b(Pro)o(vided)28 b(we)e(are)h(gi)n(v)o(en)g(a)g(k)o(e)
o(y-)2040 4157 y(w)o(ord)21 b(based)f(search)h(frame)n(w)o(ork)f(\(a)g
(v)o(ery)g(basic)h(te)o(xt)e(mining)h(infrastruc-)2040
4244 y(ture\))k(for)g(querying)h(the)f(Android)h(API)e(method)i
(descriptions,)h(the)e(ne)o(xt)2040 4332 y(step)19 b(is:)k
Fm(what)c(does)h(the)f(query)g(look)h(lik)o(e?)p Fp(.)2040
4506 y(T)-6 b(able)23 b(1)g(lists)g(some)g(of)h(the)f(queries)h(we)f
(tried)g(on)g(an)h(inde)o(x)f(of)h(Android)2040 4593
y(API)f(method)i(descriptions)g(to)f(\002nd)f(a)h(mapping)i(for)d(the)h
(J2ME)g(method)2040 4680 y Fl(drawString)h Fp(sho)n(wn)i(in)f(Figure)h
(1.)45 b(Column)27 b(\223Query\224)g(describes)g(the)2040
4767 y(query)18 b(we)f(e)o(x)o(ecuted)g(on)h(the)f(inde)o(x.)23
b(Column)17 b(\223Hits\224)g(lists)f(the)h(number)g(of)2040
4855 y(matches)h(found,)h(and)f(Column)f(\223Rele)n(v)n(ant)i(10\224)f
(lists)e(the)i(rank)g(of)f(the)g(\002rst)2040 4942 y(rele)n(v)n(ant)j
(method)g(in)g(top)f(ten)h(results.)k(F)o(or)18 b(instance,)i(when)g
(we)f(searched)2040 5029 y(for)j(the)h(class)g(name)g(\223Graphics\224)
g(in)f(Android)i(API)d(we)i(did)g(not)f(get)h(an)o(y)2040
5116 y(hits.)g(W)-6 b(e)18 b(also)g(did)h(not)g(get)f(an)o(y)h(hits)g
(for)f(when)h(we)f(searched)i(for)e(method)2040 5203
y(name)i(\223dra)o(wString\224.)2040 5378 y(When)i(we)f(searched)h(for)
f(the)g(method)h(signatures)g(we)g(got)f(a)g(23,547)i(hits)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 477 -13 a Fk(T)-7 b(able)19
b(1:)k(Query)c(Results)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -152 89 2127 7 v 0 TeXcolorgray 0.925
TeXcolorgray -152 110 2127 21 v 0 TeXcolorgray 0.925
TeXcolorgray -152 185 241 75 v 0 TeXcolorgray -107 162
a Fg(S)e(No.)p 0.925 TeXcolorgray 89 185 1225 75 v 0
TeXcolorgray 89 w(Query)p 0.925 TeXcolorgray 1314 185
256 75 v 0 TeXcolorgray 1115 w(Hits)p 0.925 TeXcolorgray
1569 185 406 75 v 0 TeXcolorgray 90 w(Rele)n(v)n(ant)k(10)p
0.925 TeXcolorgray -152 198 2127 13 v 0 TeXcolorgray
0 TeXcolorgray -152 202 2127 4 v 0 TeXcolorgray 1 TeXcolorgray
-152 222 2127 21 v 0 TeXcolorgray 1 TeXcolorgray -152
297 241 75 v 0 TeXcolorgray 11 275 a(1)p 1 TeXcolorgray
89 297 1225 75 v 0 TeXcolorgray 90 w(Class)d(Name:)j(\223Graphics\224)p
1 TeXcolorgray 1314 297 256 75 v 0 TeXcolorgray 703 w(0)p
1 TeXcolorgray 1569 297 406 75 v 0 TeXcolorgray 384 w(-)p
0.975 TeXcolorgray -152 372 241 75 v 0 TeXcolorgray 11
349 a(2)p 0.975 TeXcolorgray 89 372 1225 75 v 0 TeXcolorgray
90 w(Method)d(Name:)k(\223dra)o(wString\224)p 0.975 TeXcolorgray
1314 372 256 75 v 0 TeXcolorgray 586 w(0)p 0.975 TeXcolorgray
1569 372 406 75 v 0 TeXcolorgray 384 w(-)p 0.975 TeXcolorgray
-152 446 241 75 v 0 TeXcolorgray 11 424 a(3)p 0.975 TeXcolorgray
89 446 1225 75 v 0 TeXcolorgray 90 w(Method)c(Signature)p
0.975 TeXcolorgray 1314 446 256 75 v 0 TeXcolorgray 750
w(23547)p 0.975 TeXcolorgray 1569 446 406 75 v 0 TeXcolorgray
384 w(-)p 1 TeXcolorgray -152 521 241 75 v 0 TeXcolorgray
11 499 a(4)p 1 TeXcolorgray 89 521 1225 75 v 0 TeXcolorgray
90 w(Method)g(Description:)24 b(\(Complete\))p 1 TeXcolorgray
1314 521 256 75 v 0 TeXcolorgray 353 w(16820)p 1 TeXcolorgray
1569 521 406 75 v 0 TeXcolorgray 0.975 TeXcolorgray -152
596 241 75 v 0 TeXcolorgray 11 573 a(5)p 0.975 TeXcolorgray
89 596 1225 75 v 0 TeXcolorgray 90 w(Method)18 b(Description:)24
b(\(summary)17 b(sentences\))p 0.975 TeXcolorgray 1314
596 256 75 v 0 TeXcolorgray 93 w(94230)p 0.975 TeXcolorgray
1569 596 406 75 v 0 TeXcolorgray 384 w(-)p 1 TeXcolorgray
-152 671 241 75 v 0 TeXcolorgray 11 648 a(6)p 1 TeXcolorgray
89 671 1225 75 v 0 TeXcolorgray 90 w(Combination)p 1
TeXcolorgray 1314 671 256 75 v 0 TeXcolorgray 914 w(1479)p
1 TeXcolorgray 1569 671 406 75 v 0 TeXcolorgray 373 w(3)p
1 TeXcolorgray -152 684 2127 13 v 0 TeXcolorgray 0 TeXcolorgray
-152 690 2127 7 v 0 TeXcolorgray 0 TeXcolorgray -152
996 a Fp(\(almost)25 b(all)f(methods)h(in)g(Android)g(API\),)e(mostly)i
(because)h(of)e(the)h(con-)-152 1084 y(founding)e(ef)n(fects)f(of)g(k)o
(e)o(yw)o(ords)h(such)f(as)g(\223public\224.)31 b(Most)22
b(of)g(the)g(meth-)-152 1171 y(ods)e(signatures)g(will)f(ha)o(v)o(e)g
(the)h(k)o(e)o(yw)o(ord)h(\223public\224.)k(Although)c(the)e(rank-)-152
1258 y(ing)e(mechanism)h(did)g(push)f(methods)h(with)f(most)g(k)o(e)o
(yw)o(ord)h(matches)g(\002rst,)-152 1345 y(we)k(did)g(not)g(\002nd)g(a)
g(rele)n(v)n(ant)h(method)f(in)g(top)g(10.)33 b(Lik)o(e)n(wise)22
b(the)g(method)-152 1432 y(descriptions)g(as)e(a)h(whole)f(or)h(in)f
(parts)h(also)g(did)f(not)h(yield)g(better)f(results.)-152
1520 y(In)31 b(this)g(case)g(a)g(combination)h(of)f(v)n(arious)h
(attrib)o(utes)e(such)i(as)f(method)-152 1607 y(name)15
b(split)f(in)h(camel)f(case,)i(k)o(e)o(yw)o(ords)g(from)e(class)h
(description)g(and)g(method)-152 1694 y(description)h(resulted)e(in)h
(the)f(Android)h(API)f(equi)n(v)n(alent)i(method)f Fl(drawText)-152
1781 y Fp(sho)n(wn)20 b(in)f(Figure)g(2)g(in)g(the)g(top)g(ten)g
(results.)-152 1955 y(The)24 b(e)o(xamples)h(demonstrates)f(dif)n
(\002culties)g(f)o(aced)g(by)g(simple)g(k)o(e)o(yw)o(ord-)-152
2043 y(based)31 b(searches)f(and)g(te)o(xt)f(mining)h(in)g(general)g
(to)f(\002nd)h(lik)o(ely)g(method)-152 2130 y(mappings.)43
b(In)25 b(general,)i(there)e(are)g(follo)n(wing)g(dif)n(\002culties)f
(in)h(applying)-152 2217 y(te)o(xt)19 b(mining)g(approaches)i(to)e(API)
f(documents)i(:)p 0 TeXcolorgray -58 2455 a(1.)p 0 TeXcolorgray
37 w Fm(Confounding)32 b(ef)o(fects)p Fp(.)54 b(Certain)29
b(method)h(names)h(ha)o(v)o(e)e(an)h(con-)35 2542 y(founding)23
b(ef)n(fects.)31 b(F)o(or)21 b(instance)h Fl(toString\(\))p
Fp(,)e Fl(get\(\))p Fp(,)h Fl(set\(\))35 2629 y Fp(are)j(too)g(generic)
g(and)g(tend)g(to)g(ha)o(v)o(e)g(similar)f(descriptions)h(across)35
2716 y(dif)n(ferent)k(method)h(de\002nitions.)49 b(These)28
b(generic)h(methods)f(often)35 2804 y(cause)d(interference)g(with)f
(the)h(output)g(of)f(te)o(xt)g(mining)h(based)g(ap-)35
2891 y(proaches.)p 0 TeXcolorgray -58 3032 a(2.)p 0 TeXcolorgray
37 w Fm(W)-7 b(eights)p Fp(.)35 b(Not)22 b(all)g(terms)g(in)h(a)f
(method)i(descriptions)f(are)g(equally)35 3120 y(important)d(k)o(e)o
(yw)o(ords.)28 b(F)o(or)19 b(instance,)h(the)g(term)g(\223zip\224)g(in)
f(the)h(sen-)35 3207 y(tence)32 b(\223opens)g(a)f(zip)g(\002le\224)f
(is)h(more)g(important)g(than)h(the)f(terms)35 3294 y(\223opens\224)e
(and)f(\223\002les\224)f(as)h(the)f(term)h(empathizes)g(on)g(the)g
(speci\002c)35 3381 y(type)20 b(of)f(\002le.)j(The)e(problem)f(is)g(to)
g(automatically)h(identify)f(the)g(im-)35 3468 y(portance)h(of)f(a)g
(term.)p 0 TeXcolorgray -58 3610 a(3.)p 0 TeXcolorgray
37 w Fm(Structur)m(e)p Fp(.)28 b(API)19 b(documents)j(are)e(not)g
(\003at)g(contiguous)h(te)o(xt)f(blobs.)35 3697 y(The)o(y)25
b(often)g(ha)o(v)o(e)g(well)f(de\002ned)i(structure,)g(that)e(is)h
(often)g(shared)35 3785 y(by)k(method)h(descriptions.)53
b(Ignoring)29 b(the)g(structure)g(may)g(cause)35 3872
y(inef)n(fecti)n(v)o(e)g(queries)f(ne)o(gati)n(v)o(ely)h(af)n(fecting)f
(the)g(results.)50 b(This)28 b(is)35 3959 y(addressed)19
b(by)f(querying)h(indi)n(vidual)g(elements)f(\(such)g(as)g(class)f(de-)
35 4046 y(scription,)22 b(class)f(names,)h(method)g(names,)g(method)g
(descriptions\))35 4133 y(and)f(then)g(aggre)o(gate)g(the)f(results.)27
b(The)20 b(problem)h(is)f(to)g(ef)n(fecti)n(v)o(ely)35
4220 y(aggre)o(gate)g(the)f(results.)-152 4415 y Fo(3.)100
b(RELA)-9 b(TED)26 b(W)o(ORK)-152 4506 y Fp(Language)e(migration)e(has)
g(been)g(an)h(acti)n(v)o(e)f(area)g(of)f(research)i([8,)12
b(16,)g(26,)-152 4593 y(27],)35 b(with)30 b(myriad)i(techniques)g(that)
f(ha)o(v)o(e)h(been)g(proposed)h(o)o(v)o(er)e(time)-152
4680 y(to)25 b(achie)n(v)o(e)g(automation.)41 b(Ho)n(we)n(v)o(er)m(,)26
b(most)f(of)f(these)h(approaches)h(focus)-152 4767 y(on)d(syntactical)g
(and)g(structural)f(dif)n(ferences)h(across)g(languages.)35
b(F)o(or)22 b(in-)-152 4855 y(stance,)i(Deursen)g(et)e(al.)g([26])h
(proposed)i(an)e(approach)h(to)f(automatically)-152 4942
y(infer)d(objects)g(in)f(le)o(gac)o(y)h(code)g(to)f(ef)n(fecti)n(v)o
(ely)h(deal)g(with)f(dif)n(ferences)h(be-)-152 5029 y(tween)f
(object-oriented)h(and)g(procedural)g(languages.)-152
5203 y(Ho)n(we)n(v)o(er)m(,)25 b(El-Ramly)e(et)g(al.)g([4]')l(s)g(e)o
(xperience)i(points)f(out)g(that)f(most)h(of)-152 5290
y(these)18 b(approaches)i(support)f(only)f(a)g(subset)g(of)g(API')l(s)f
(for)h(migration.)23 b(An-)-152 5378 y(other)28 b(recently)g(published)
h(surv)o(e)o(y)g(by)f(Robillard)f(et)h(al.)f([22])h(pro)o(vides)p
0 TeXcolorgray 0 TeXcolorgray 2040 -69 a(a)e(detailed)g(o)o(v)o(ervie)n
(w)g(of)g(techniques)h(dealing)f(with)f(mining)h(API)f(map-)2040
19 y(pings.Among)19 b(other)f(w)o(orks)g(described)g(in)35
b([22],)17 b(Mining)h(API)f(Mapping)2040 106 y(\(MAM\))i([29])h(is)e
(most)h(directly)g(related)g(to)g(our)g(w)o(ork.)2040
280 y(MAM)i(mines)f(API)g(mapping)h(relations)g(across)f(dif)n(ferent)h
(languages)h(for)2040 367 y(language)29 b(migration,)h(ho)n(we)n(v)o
(er)f(there)e(is)h(a)f(signi\002cant)h(dif)n(ference)g(be-)2040
454 y(tween)16 b(MAM)g(and)j Fn(S)t Fp(M)t(A)t(M)r(.)c(MAM)h(tak)o(es)g
(into)g(input)g(a)g(softw)o(are)g Fd(S)j Fp(writ-)2040
542 y(ten)24 b(in)g(source)g(language)h(and)g(manually)f(ported)h(v)o
(ersion)f(of)g Fd(S)3775 510 y Fr(0)3821 542 y Fp(written)2040
629 y(in)d(tar)o(get)f(language.)29 b(MAM)21 b(then)g(applies)g(a)g
(technique)h(called)e(\223method)2040 716 y(alignment\224)g(that)f
(pairs)g(the)g(methods)h(with)e(similar)g(functionality)i(across)2040
803 y Fd(s)c Fp(and)g Fd(S)2266 771 y Fr(0)2289 803 y
Fp(.)22 b(These)16 b(methods)h(are)f(then)g(statically)g(analyzed)h(to)
f(detect)g(map-)2040 890 y(pings)29 b(between)f(source)h(and)f(tar)o
(get)g(language)h(API.)e(While)g(MAM)i(re-)2040 977 y(lies)20
b(on)g(e)o(xistence)h(of)f(softw)o(are)g(that)g(has)h(been)g(ported)f
(manually)h(from)f(a)2040 1065 y(source)i(to)f(tar)o(get)f(API,)g(our)h
(approach)i(is)e(independent)h(of)f(such)h(require-)2040
1152 y(ment.)54 b(In)29 b(contrast,)j(our)e(approach)g(relies)f(on)h
(te)o(xt)f(mining)g(of)h(source)2040 1239 y(and)f(tar)o(get)e(API)g
(document)j(to)e(achie)n(v)o(e)h(the)f(same.)50 b(Furthermore,)31
b(we)2040 1326 y(demonstrate)25 b(that)f(our)h(approach)g(also)g
(infers)f(equally)h(good)g(mappings)2040 1413 y(if)18
b(not)i(better)e Fk(pending)g(e)o(v)o(aluation)p Fp(.)2040
1588 y(Gokhle)30 b(et)e(al.)-5 b(')l(s)28 b([6])g(approach)j(Rosetta)d
(addresses)i(the)f(limitations)f(of)2040 1675 y(MAM)20
b(to)g(infer)g(method)h(mappings.)27 b(In)20 b(particular)m(,)f
(Rosetta)h(relax)o(es)g(the)2040 1762 y(constraint)e(of)g(ha)o(ving)h
(softw)o(are)f(that)g(has)g(been)h(manually)g(ported)f(from)g(a)2040
1849 y(source)f(to)f(tar)o(get)g(API.)f(Instead,)i(the)o(y)g(use)f
(functionally)i(similar)d(softw)o(are)2040 1936 y(in)22
b(source)h(and)f(tar)o(get)g(API.)e(F)o(or)i(instance,)h(the)o(y)f(use)
g(tw)o(o)g(dif)n(ferent)g(`tic-)2040 2023 y(tac-toe')27
b(game)g(applications)h(in)f(J2ME)h(and)f(Android)h(API)e(not)i(neces-)
2040 2111 y(sarily)19 b(manually)i(ported.)k(The)o(y)20
b(then)g(manually)g(e)o(x)o(ecute)g(these)g(applica-)2040
2198 y(tions)c(under)i(identical)e(\(or)g(near)g(identical\))h(inputs)f
(and)h(collect)f(e)o(x)o(ecution)2040 2285 y(traces.)33
b(Finally)22 b(the)o(y)h(analyze)g(the)f(collected)h(e)o(x)o(ecution)g
(traces)f(to)h(infer)2040 2372 y(method)d(mappings.)26
b(In)19 b(contrast)h(our)f(approach)i(is)e(independent)i(of)f(both)2040
2459 y(rthe)k(requirements:)33 b(1\))23 b(to)g(ha)o(v)o(e)h
(functionally)g(similar)f(applications,)i(2\))2040 2547
y(to)19 b(manually)h(e)o(x)o(ecute)f(such)h(applications)g(using)f
(similar)g(inputs.)2040 2721 y(Recently)27 b(Nguyen)g(et)f(al.)g([17,)
15 b(18])27 b(proposed)h(to)e(apply)h(statistical)e(ma-)2040
2808 y(chine)f(translation)g(based)g(techniques)h(to)f(achie)n(v)o(e)g
(language)h(migration.)2040 2895 y(Their)20 b(approach)h(b)o(uilds)f
(upon)i(a)e(pre)n(vious)h(result)f([9])f(that)h(demonstrates)2040
2982 y(the)f(ef)n(fecti)n(v)o(eness)h(of)f(using)h(a)f(n-gram)g(model)h
(to)f(predict)g(the)g(ne)o(xt)g(tok)o(en)2040 3070 y(in)g(softw)o(are)g
(source)h(\002le)e(gi)n(v)o(en)i(a)f(lar)o(ge)f(corpus)i(of)f(softw)o
(are)g(source)h(\002les)2040 3157 y(to)27 b(learn)h(from.)48
b(Similar)26 b(to)h(MAM)h([29])g(approach)h(the)o(y)e(need)h(a)g(soft-)
2040 3244 y(w)o(are)21 b Fd(S)k Fp(written)20 b(in)g(source)i(language)
g(and)f(manually)h(ported)f(v)o(ersion)g(of)2040 3331
y Fd(S)2091 3299 y Fr(0)2134 3331 y Fp(written)e(in)h(tar)o(get)g
(language.)28 b(The)o(y)21 b(then)f(consider)h(source)g(code)g(as)f(a)
2040 3418 y(sequence)h(of)e(le)o(xical)f(tok)o(ens)i(and)g(apply)g(a)f
(phrase-based)h(statistical)e(ma-)2040 3505 y(chine)h(translation)g
(model)g(on)g(the)g(le)o(x)o(emes)g(of)f(those)h(tok)o(ens.)24
b(In)19 b(contrast)2040 3593 y(our)d(approach)h(is)e(independent)i(of)f
(such)g(requirement\(presence)h(of)e Fd(S)20 b Fp(and)2040
3680 y Fd(S)2091 3648 y Fr(0)2114 3680 y Fp(\).)2040
3854 y(Furthermore,)28 b(from)f(an)g(infrastructure)g(perspecti)n(v)o
(e,)k Fn(S)t Fp(M)t(A)t(M)d(is)e(inde-)2040 3941 y(pendent)21
b(of)e(the)g(programming)i(language)g(or)e(API)f(under)i
(consideration.)2040 4028 y(In)g(contrast)h(program)g(analysis)f(based)
h(approaches)h(lik)o(e)e([6,)10 b(17,)g(29])22 b(may)2040
4116 y(need)e(signi\002cant)f(ef)n(forts)g(for)g(adding)h(support)f(to)
g(additional)h(API')l(s.)2040 4290 y(Zheng)f(at)e(al.)g([28])h(mine)g
(search)g(results)g(of)g(web)g(search)g(engines)h(such)f(as)2040
4377 y(Google)i(to)e(recommend)i(related)f(APIs)f(of)h(dif)n(ferent)f
(libraries.)23 b(In)c(partic-)2040 4464 y(ular)m(,)f(the)o(y)g(propose)
h(heuristics)f(to)g(formulate)g(k)o(e)o(yw)o(ords)h(using)g(the)f(name)
2040 4552 y(of)h(the)h(source)g(API,)e(and)i(the)g(name)g(of)f(tar)o
(get)g(API)g(to)g(query)h(web)g(search)2040 4639 y(engine.)k(F)o(or)18
b(instance,)h(to)g(search)g(for)f(an)h(equi)n(v)n(alent)h(class)f(in)f
(C#)h(for)f(the)2040 4726 y Fl(HashMap)h Fp(class)i(in)g(Ja)o(v)n(a,)f
(a)h(user)g(may)g(manually)g(enter)g(\223HashMap)h(C#\224)2040
4813 y(in)g(a)g(web)g(search)h(engine.)33 b(The)22 b(results)g(are)g
(computed)i(one)f(by)f(one)h(and)2040 4900 y(candidates)h(are)e(rank)o
(ed)i(by)g(rele)n(v)n(ance,)g(mainly)f(according)h(to)e(their)h(fre-)
2040 4987 y(quenc)o(y)c(of)e(the)h(appearance)h(of)f(k)o(e)o(yw)o(ords)
h(in)e(the)g(query)-5 b(.)24 b(This)17 b(w)o(ork)h(pro-)2040
5075 y(vides)h(only)g(preliminary)g(results)g(and)g(queries)g(proposed)
h(are)f(of)f(a)h(coarse)2040 5162 y(grain.)36 b(Furthermore,)24
b(the)g(results)f(are)g(susceptible)h(to)f(in\003uence)h(by)f(the)2040
5249 y(outcome)c(of)e(the)h(web)g(search)g(engines.)23
b(In)18 b(contrast,)g(our)f(approach)j(is)d(in-)2040
5336 y(dependent)j(of)d(the)h(web)g(search)g(engine.)24
b(Furthermore,)18 b(the)f(queries)i(used)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -152 -69 a Fp(in)17 b(our)f(approach)i(are)f(more)g
(sophisticated)g(than)g(the)f(heuristics)h(proposed)-152
19 y(by)j(their)e(approach.)-152 193 y(Information)f(retrie)n(v)n(al)f
(techniques)i([2,)5 b(7,)g(11,)g(21])17 b(are)f(also)g(being)h
(increas-)-152 280 y(ingly)29 b(used)f(in)g(Code)h(Search.)50
b(W)-6 b(e)27 b(ne)o(xt)i(describe)f(some)h(rele)n(v)n(ant)f(ap-)-152
367 y(proaches.)37 b(Snif)n(f)22 b([2])h(annotates)g(the)g(source)h
(code)g(with)e(API)g(document)-152 454 y(descriptions.)48
b(Snif)n(f)26 b(then)h(performs)g(additional)h(type)f(analysis)g(on)h
(the)-152 542 y(source)23 b(code)g(to)f(rank)g(rele)n(v)n(ant)h(code)f
(snippets.)33 b(Ex)o(emplar)22 b([7])g(uses)h(the)-152
629 y(te)o(xt)28 b(in)f(API)g(documents)i(to)f(construct)g(a)f(set)h
(of)f(k)o(e)o(yw)o(ords)j(associated)-152 716 y(with)f(an)h(API)f
(call.)55 b(Ex)o(emplar)29 b(then)h(uses)g(the)g(k)o(e)o(yw)o(ords)h
(list)e(to)g(per)o(-)-152 803 y(form)22 b(query)h(e)o(xpansion)h(to)e
(achie)n(v)o(e)h(code)g(search.)33 b(Ho)n(we)n(v)o(er)m(,)23
b(these)f(ap-)-152 890 y(proaches)g(are)f(tar)o(geted)g(to)n(w)o(ards)h
(code)f(search)h(in)f(a)f(single)i(API.)d(In)i(con-)-152
977 y(trast)g Fn(S)t Fp(M)t(A)t(M)f(w)o(orks)g(on)f(inferring)g
(mappings)i(across)e(multiple)g(APIs.)-152 1152 y(T)-5
b(e)o(xt)19 b(analysis)i([3,)10 b(12,)g(19,)g(30,)g(31])21
b(of)f(API)f(documentation)i(is)f(increasing)-152 1239
y(being)26 b(used)g(to)e(infer)h(interesting)g(properties.)41
b(W)-6 b(e)25 b(ne)o(xt)g(describe)h(most)-152 1326 y(rele)n(v)n(ant)20
b(approaches.)-152 1500 y Fk(API)26 b(pr)o(operty)g(infer)o(ence)f
Fp(Zhong)i(et)f(al.)f([30])i(emplo)o(y)g(NLP)e(and)i(ML)-152
1588 y(techniques)k(to)f(infer)f(resource)i(speci\002cations)f(from)g
(API)e(documents.)-152 1675 y(The)o(y)d(de\002ne)f(resource)h
(speci\002cations)g(as)f(the)g(rules)h(go)o(v)o(erning)g(the)g(us-)-152
1762 y(age)d(of)e(resources)i(such)g(as)e(File.)28 b(Recently)21
b(T)m(reude)h(et)f(al.)f([25])h(le)n(v)o(erage)-152 1849
y(rule-based)e(NLP)d(approaches)j(to)f(infer)f(action)h(\(programming)h
(task\))e(ori-)-152 1936 y(ented)29 b(properties)f(from)g(an)g(API)e
(document.)51 b(The)o(y)28 b(describe)h(tasks)f(as)-152
2023 y(speci\002c)21 b(programming)i(actions)e(that)g(ha)o(v)o(e)g
(been)g(described)h(in)f(the)g(doc-)-152 2111 y(umentation.)35
b(First,)24 b Fn(S)t Fp(M)t(A)t(M)g(uses)f(te)o(xt)f(mining)h(stead)f
(of)h(sophisticated)-152 2198 y(NLP)e(techniques)i(used)g(in)f(these)g
(approaches.)34 b(Second,)25 b Fn(S)t Fp(M)t(A)t(M)f(infers)-152
2285 y(API)15 b(mapping)i(relations)f(across)h(dif)n(ferent)f(API)f
(for)g(language)j(migration,)-152 2372 y(whereas)26 b(the)f(pre)n
(vious)h(approaches)h(mine)e(API)f(properties)i(of)e(a)h(single)-152
2459 y(API)19 b(to)g(detect)g(defects)g(or)g(to)g(assist)g
(programming.)25 b(Finally)-5 b(,)19 b(the)g(perfor)o(-)-152
2547 y(mance)j(of)e(the)h(preceding)h(ML-based)f(approaches)i(is)d
(dependent)i(on)g(the)-152 2634 y(quality)h(of)f(the)g(training)g(sets)
g(used)h(for)f(ML.)g(In)g(contrast,)h(our)f(approach)-152
2721 y(is)e(independent)h(of)f(such)g(training)g(set)f(and)i(thus)f
(can)g(be)g(easily)f(e)o(xtended)-152 2808 y(to)g(tar)o(get)g(respecti)
n(v)o(e)g(problems)h(addressed)g(by)g(these)f(approaches.)-152
3020 y Fo(4.)100 b(B)m(A)-5 b(CKGR)m(OUND)-152 3111 y
Fp(T)g(e)o(xt)16 b(mining)g(is)g(a)g(broad)h(research)g(area)f
(including)i(b)o(ut)d(not)i(limited)f(to)g(the)-152 3198
y(techniques)k(f)o(acilitating)f(retrie)n(v)n(al/manipulation)g(of)g
(useful)g(information)-152 3285 y(from)26 b(a)g(lar)o(ge)g(corpus)h(to)
f(te)o(xt.)44 b(It)25 b(is)h(claimed)g(that)g(more)g(than)h(80\045)g
(of)-152 3373 y(b)o(usiness)16 b(intelligence)g(is)f(captured)h(in)f
(unstructured)h(data)g Fk(need)e(citation)p Fp(.)-152
3460 y(A)21 b(lar)o(ge)g(part)f(of)h(this)g(is)g(in)f(documents)j
(containing)f(narrati)n(v)o(e)f(te)o(xt,)g(such)-152
3547 y(as)28 b(reports,)i(presentations,)g(web)e(data,)i(design)e
(documents,)j(etc.)49 b(T)-5 b(e)o(xt)-152 3634 y(mining)18
b(is)f(used)h(to)f(unearth)h(the)f(kno)n(wledge)i(b)o(uried)e(in)h
(these)f(documents)-152 3721 y(through)j(a)f(combination)i(of)e(e)o
(xtraction)g(and)g(analytical)h(methods.)-152 3896 y(As)25
b(opposed)h(to)e(traditional)h(data)f(mining,)i(te)o(xt)e(mining)h
(analyzes)h(free-)-152 3983 y(form)e(te)o(xt)f(spread)h(across)g(a)f
(lar)o(ge)g(number)i(of)e(documents)i(\(rather)e(than)-152
4070 y(data)f(localized)h(and)f(maintained)h(within)f(a)f(database\).)
33 b(In)22 b(order)g(to)g(ana-)-152 4157 y(lyze)f(this)e(data,)i(te)o
(xt)f(mining)g(uses)h(concepts)g(from)f(traditional)g(data)g(ana-)-152
4244 y(lytics,)f(natural)g(language)h(processing,)g(and)g(data)f
(modeling.)-152 4419 y(W)-6 b(e)27 b(ne)o(xt)h(introduce)h(the)e
(concepts)i(from)e(te)o(xt)h(mining)g(that)f(ha)o(v)o(e)h(been)-152
4506 y(used)20 b(in)f(the)g(presented)h(approach.)-152
4680 y Fk(Indexing)28 b Fp([5,)16 b(14]:)42 b(Inde)o(xing)30
b(is)e(the)h(process)g(of)f(e)o(xtracting)h(te)o(xt)f(data)-152
4767 y(from)c(source)g(documents)i(and)e(storing)g(them)g(in)f
(well-de\002ned)h(inde)o(x)o(es.)-152 4855 y(Inde)o(xing)d(process)e
(constitutes)h(of)f(follo)n(wing)g(steps.)-152 5029 y(A)c(document)h
(is)e(di)n(vided)i(into)e(constituent)i(unit,)f(kno)n(wn)h(as)e(tok)o
(ens,)j(based)-152 5116 y(on)h(a)e(well-de\002ned)h(criterion.)23
b(A)16 b(tok)o(en)i(is)e(usually)h(an)g(indi)n(vidually)h(iden-)-152
5203 y(ti\002able)28 b(unit)g(of)g(the)g(document)h(\(such)g(as)f(a)g
(w)o(ord\))g(and)h(relates)f(to)g(the)-152 5290 y(indi)n(vidual)g
(terms)f(stored)g(in)f(the)h(inde)o(x.Once)h(the)f(tok)o(ens)g(within)g
(each)-152 5378 y(document)c(are)e(identi\002ed,)h(the)o(y)f(are)h
(added)g(to)f(the)h(inde)o(x,)g(with)f(the)g(cor)o(-)p
0 TeXcolorgray 0 TeXcolorgray 2040 -69 a(responding)k(link)f(to)f(the)g
(document)i(and)f(associated)g(term)g(frequencies.)2040
19 y(An)19 b(optional)g(pre-processing)h(step)f(further)f(assists)g
(with)h(inde)o(xing:)24 b(such)2040 106 y(as)19 b(remo)o(ving)h(stop-w)
o(ords,)g(grouping)g(similar)e(w)o(ords)i(together)l(.)2040
280 y(Among)d(v)n(arious)g(inde)o(xing)h(strate)o(gies,)e(use)h(of)f
(in)m(v)o(erted)h(\002le)e(inde)o(xing)j([5])2040 367
y(is)k(well)g(suited)h(for)g(lar)o(ge)f(document)i(collections.)35
b(In)23 b(its)f(simplest)g(form)2040 454 y(in)m(v)o(erted)30
b(\002le)f(inde)o(x)h(maintains)g(the)f(mapping)i(of)e(terms)g(and)h
(their)g(lo-)2040 542 y(cation)f(in)f(a)h(te)o(xt)f(collection.)52
b(F)o(or)28 b(instance)h(a)f(te)o(xt)g(document)i(can)f(be)2040
629 y(thought)21 b(of)f(as)g(a)f(collection)i(of)e Fd(m)h
Fp(w)o(ords.)26 b(It)19 b(is)h(made)g(up)g(of)g(a)g(sequence)2040
716 y(of)25 b Fd(n)g Fp(unique)g(w)o(ords)h(such)f(that)g
Fd(n)32 b(<)p Fc(=)g Fd(m)p Fp(.)40 b(The)25 b(number)h(n)e(is)h
(usually)2040 803 y(f)o(ar)h(less)g(than)g Fd(m)f Fp(as)h(most)g(of)g
(the)g(w)o(ords)h(are)e(repeated)i(while)f(forming)2040
890 y(a)f(document.)44 b(F)o(or)24 b(instance)i(the)g(w)o(ord)f
(\223the\224)h(is)f(repeated)h(man)o(y)g(times)2040 977
y(in)f(this)f(paper)l(.)40 b(The)25 b(set)f(of)h(unique)g(w)o(ords)g
(within)g(an)g(inde)o(x)g(forms)f(the)2040 1065 y(\223T)-5
b(erm)23 b(List\224)g Fd(v)k Fp(of)d(the)g(inde)o(x.)38
b(If)23 b(a)h(pointer)g(\(say)g(numeric)h(location\))f(is)2040
1152 y(associated)f(with)e(each)h(w)o(ord)g(in)g Fd(v)i
Fp(to)e(the)g(location)g(of)f(that)h(w)o(ord)g(in)g(te)o(xt)2040
1239 y(document,)h(the)f(resultant)g(data)f(structure)h(is)f(a)h(form)f
(of)h(in)m(v)o(erted)g(\002le)f(in-)2040 1326 y(de)o(x.)31
b(As)21 b(the)g(document)i(collection)e(gro)n(ws,)h(the)f(number)i(of)e
(documents)2040 1413 y(matching)f(a)f(w)o(ord)g(in)g(the)g(inde)o(x)h
(becomes)g(sparser)l(.)2040 1588 y(The)i(inde)o(x)h(is)e(oftentimes)h
(annotated)i(with)d(the)h(information)h(of)f(the)g(fre-)2040
1675 y(quenc)o(y)d(of)f(occurrence)h(of)e(each)h(term)f(in)h(the)f
(document.)25 b(This)17 b(represen-)2040 1762 y(tation)i(of)h(a)f
(document)i(as)f(a)f(v)o(ector)h(of)f(frequencies)i(of)e(terms)g(is)g
(referred)2040 1849 y(to)g(as)g Fm(vector)g(space)h(model)f
Fp([5,)10 b(23].)2040 2023 y Fk(TF-IDF)j(Similarity)h
Fp([14]:)21 b(T)-5 b(erm)14 b(-frequenc)o(y)i(in)m(v)o
(erse-document-frequenc)o(y)2040 2111 y(\()p Fl(tf-idf)p
Fp(\))29 b(is)i(a)f(numerical)i(statistic)e(that)g(is)g(intended)i(to)f
(capture)g(the)2040 2198 y(importance)e(of)g(a)f(term)g(to)g(a)g
(document)i(in)e(a)g(corpus.)52 b(Often)28 b(used)h(as)2040
2285 y(a)h(weighting)h(metric)f(in)g(information)h(retrie)n(v)n(al)f
(and)h(te)o(xt)f(mining,)j(the)2040 2372 y Fl(tf-idf)18
b Fp(weight)h(increases)h(proportionally)g(to)f(frequenc)o(y)h(of)f
(the)g(occur)o(-)2040 2459 y(rence)g(of)f(a)g(term)g(in)g(a)g
(document,)i(ho)n(we)n(v)o(er)f(the)f(weight)h(is)e(also)i(of)n(fset)f
(by)2040 2547 y(the)h(frequenc)o(y)h(of)f(occurrence)i(the)e(term)f(in)
h(the)g(corpus.)2040 2721 y Fk(Cosine)i(Similarity)f
Fp([23]:)28 b(In)22 b(mathematics)f(Cosine)h(similarity)e(is)h(a)g(nu-)
2040 2808 y(merical)f(statistic)f(to)g(measure)i(the)f(similarity)f
(between)i(tw)o(o)e(v)o(ector)l(.)27 b(Co-)2040 2895
y(sine)19 b(similarity)e(is)h(de\002ned)h(as)g(a)f(dot)h(product)g(of)g
(magnitude)g(of)g(tw)o(o)f(v)o(ec-)2040 2982 y(tors.)54
b(In)29 b(conte)o(xt)h(of)f(te)o(xt)g(mining,)j(the)e(Cosine)f
(similarity)g(is)g(used)g(to)2040 3070 y(capture)22 b(the)f(similarity)
f(between)i(tw)o(o)g(documents)g(represented)h(as)e(term)2040
3157 y(frequenc)o(y)f(v)o(ectors.)2040 3331 y Fk(T)-7
b(opic)22 b(Modelling)p Fp(:)29 b(Latent)23 b(Drichilet)e(Allocation)i
(\(LD)m(A\))f([1,)12 b(20])23 b(is)f(an)2040 3418 y(Information)31
b(Retrie)n(v)n(al)e(\(IR\))g(model)h(to)g(\002t)f(a)h(probabilistic)g
(model)g(on)2040 3505 y(the)e(term)g(occurrences)h(in)f(a)g(corpus)h
(of)f(documents.)52 b(Gi)n(v)o(en)28 b(a)g(corpus)2040
3593 y(of)f Fd(n)h Fp(documents,)i(a)d(dictionary)h(is)f(created.)48
b(The)27 b(dictionary)h(consists)2040 3680 y(a)h(list)f(of)h(all)g(the)
g(unique)h(terms)f(\()p Fd(m)p Fp(\))f(occurring)i(in)f(all)f
Fd(n)h Fp(documents.)2040 3767 y(Ne)o(xt,)18 b(a)g(term-to-document)i
(matrix)e Fd(M)27 b Fp(of)18 b(size)g Fc(\()p Fd(m)g(X)24
b(n)p Fc(\))19 b Fp(is)f(generated,)2040 3854 y(where)25
b(each)f(ro)n(w)h(represents)f(all)g(the)g(terms)g(occurring)h(the)g
(corpus)g(and)2040 3941 y(columns)17 b(representing)g(the)f(all)g(the)g
(documents)h(in)f(the)h(corpus.)23 b(Each)16 b(cell)2040
4028 y(of)k Fd(M)28 b Fp(\()p Fd(M)8 b Fc([)p Fd(i;)14
b(j)t Fc(])p Fp(\))21 b(contains)g(the)f(weight)g(of)g(the)g
Fd(i)3337 3997 y Fb(th)3422 4028 y Fp(term)f(in)h Fd(m)g
Fp(in)g(the)g Fd(j)3968 3997 y Fb(th)2040 4116 y Fp(document)j(in)e
Fd(n)p Fp(.)30 b(In)21 b(the)g(simplest)h(implementation)g
Fl(tf-idf)e Fp(is)h(used)g(to)2040 4203 y(calculate)e(the)g(weight)g
(of)g(a)g(term)g(in)g(a)f(document.)2040 4377 y(Ne)o(xt)i(LD)m(A)e
(transforms)i(term-to-document)h(matrix)f Fd(M)27 b Fp(into)20
b(a)f(topic-to-)2040 4464 y(document)h(matrix)f Fd(\022)h
Fp(of)f(size)g Fc(\()p Fd(k)h(X)25 b(n)p Fc(\))p Fp(,)19
b(where)g(each)g(ro)n(w)g(represents)g(the)2040 4552
y(topics)h(occurring)g(in)f(the)h(corpus)g(and)g(columns)h
(representing)f(the)f(all)g(the)2040 4639 y(documents)j(in)e(the)h
(corpus.)28 b(This)20 b(transformation)h(is)f(achie)n(v)o(ed)h(by)g
(iden-)2040 4726 y(tifying)26 b(latent)g(v)n(ariables)g(\(topics\))g
(in)g(the)g(documents.)46 b(The)26 b(parameter)2040 4813
y Fd(k)21 b Fp(is)e(independently)i(pro)o(vided)g(as)e(an)h(ar)o
(gument)f(to)h(the)f(LD)m(A)f(algorithm.)2040 4900 y(Each)24
b(cell)f(of)g Fd(\022)j Fc(\()p Fd(\022)r Fc([)p Fd(i;)13
b(j)t Fc(]\))24 b Fp(contains)h(the)e(probability)h(of)g(the)f
Fd(i)3714 4868 y Fb(th)3802 4900 y Fp(topic)g(in)2040
4987 y Fd(k)j Fp(occurring)f(in)e(the)h Fd(j)2647 4956
y Fb(th)2735 4987 y Fp(document)i(in)d Fd(n)p Fp(.)38
b(Since)24 b Fd(k)56 b(<<)e(m)p Fp(,)24 b(LD)m(A)f(is)2040
5075 y(a)j(mapping)i(of)f(the)f(documents)i(from)f(the)f(term)g(space)h
Fd(m)f Fp(to)h(the)f(topic)2040 5162 y(space)20 b Fd(k)h
Fp([20].)p 0 TeXcolorgray 2133 5378 a(1.)p 0 TeXcolorgray
38 w Fd(k)r Fp(,)d(the)f(total)h(number)g(of)g(topics)g(to)g(be)g(e)o
(xtracted)g(from)g(a)g(corpus)g(of)p 0 TeXcolorgray 0
TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-132 1201 a @beginspecial 99.626160 @llx 79.700928 @lly
620.373840 @urx 440.373840 @ury 2343 @rwi @clip @setspecial
%%BeginDocument: ApproahOverview.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: ApproahOverview.pdf
%%Creator: (Adobe Acrobat 11.0.10)
%%For: adminuser
%%CreationDate: 3/5/15, 12:46 PM
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 605 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2015-03-05T17:44:26Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2015-03-05T17:44:26Z"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.10.2 Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
gsave
0 540 mo
720 540 li
720 0 li
0 0 li
cp
clp
0 .00012207 mo
720 .00012207 li
720 540 li
0 540 li
cp
false sop
0 0 0 0 cmyk
ef
225.78 142.022 mo
225.78 129.638 235.819 119.599 248.203 119.599 cv
588.938 119.599 li
601.321 119.599 611.361 129.638 611.361 142.022 cv
611.361 346.684 li
611.361 359.068 601.321 369.107 588.938 369.107 cv
248.203 369.107 li
235.819 369.107 225.78 359.068 225.78 346.684 cv
cp
ef
1 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
225.78 142.022 mo
225.78 129.638 235.819 119.599 248.203 119.599 cv
588.937 119.599 li
601.321 119.599 611.361 129.638 611.361 142.022 cv
611.361 346.684 li
611.361 359.068 601.321 369.107 588.937 369.107 cv
248.203 369.107 li
235.819 369.107 225.78 359.068 225.78 346.684 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
.75 lw
107.029 139.405 mo
199.712 139.405 li
199.712 187.228 li
153.373 187.228 153.373 205.628 107.029 196.428 cv
cp
114.665 139.405 mo
114.665 133.205 li
206.715 133.205 li
206.715 181.328 li
203.216 181.328 199.712 181.662 199.712 181.662 cv
121.843 133.205 mo
121.843 127.155 li
214.69 127.155 li
214.69 175.128 li
210.702 175.128 206.715 175.378 206.715 175.378 cv
@
%ADOBeginSubsetFont: CMKQMX+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /CMKQMX+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000051c6670
676d00000000000005d80000091a676c79660000000000003474000024a0
686561640000000000000ef400000036686865610000000000000f2c0000
0024686d74780000000000000f500000008c6c6f63610000000000000fdc
000000486d6178700000000000001024000000206e616d65000000000000
104400000020707265700000000000001064000024106764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e4047645f
5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f
3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b028
2370b10228453ab10200080d2d2c2045b00325456164b050515845441b21
21592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a0345
8a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c
4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2c452345602345602345
6023766818b08062202d2cb00426b00426b00425b0042545234520b00326
6062636820b0032661658a2344442d2c2045b0005458b040442045b04061
441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370
b01423421b2121592d2c4b515820b0032545695358441b2121591b212159
2d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a6044
2d2c45234560442d2c4b235158b90033ffe0b134201bb333003400594444
2d2cb0164358b00326458a586466b01f601b64b020606620581b21b04059
b001615923586559b02923442310b029e01b2121212121592d2cb0164358
b004254564b020606620581b21b04059b0016123586559b0292344b00425
b00725082058021b0359b0052510b004252046b0042523423cb0072510b0
06252046b00425b0016023423c2058011b0059b0052510b00425b029e0b0
072510b00625b029e0b00425b00725082058021b0359b00425b003254348
b00625b00325b0016043481b2159212121212121212d2cb0164358b00425
4564b020606620581b21b04059b0016123581b6559b0292344b00525b008
25082058021b0359b0042510b005252046b0042523423cb00425b0072508
b0072510b006252046b00425b0016023423c2058011b0059b0042510b005
25b029e0b02920456544b0072510b00625b029e0b00525b0082508205802
1b0359b00525b003254348b00425b0072508b00625b00325b0016043481b
2159212121212121212d2c02b00425202046b004252342b0052508b00325
4548212121212d2c02b0032520b0042508b0022543482121212d2c452320
451820b00050205823652359236820b040505821b04059235865598a6044
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d
2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21212159
2d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b212121
592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325b0
062649618b3812342d2c014623466023466123201020468a61b8ff80628a
b140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d
1b7a592d2cb012004b014b54422d2cb1020042b123018851b1400188535a
58b910000020885458b202010243604259b12401885158b9200000408854
58b2020202436042b12401885458b2022002436042004b014b5258b20208
02436042591bb940000080885458b202040243604259b94000008063b801
00885458b202080243604259b94000010063b80200885458b20210024360
4259b94000020063b80400885458b202400243604259595959592d2c4518
68234b51582320452064b04050587c59688a6059442d2cb00016b00225b0
022501b001233e00b002233eb10102060cb00a236542b00b234201b00123
3f00b002233fb10102060cb006236542b0072342b00116012d2c20b82000
628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff54
5821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0
04254760b0062547b0806361b00225b0005558b00325b00725496359b008
2558001b0159b00425b0062549b009255cb009255a58b0092b59b0072546
b0806361b0032520b0005558631b2159612320b0005558b080631b21b080
59b0592bb006255c586959b00425202010b00048233ab0062658001b0159
b0052658b003252f598a12233221212d2cb00625b00a2587b00625b00925
4ab0005358b00625b00a251bb00925b0072559b00225b00225070cb00525
6323b00625636020b94000040063535821b00426b00426b00a1bb9400004
0063655158b0042665b0042665b00a1bb00426b00426b000b00325b00325
0b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b000
5558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ffff
545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587b0
0a2510b00b25c15920b00051b800522378b00161b00225b00725b0072507
b00a25b00d254961b08062b00525b005250bb00a252338b00625b0062587
b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0
032554b8ffa723792121212121212121212121212d2c23b0005458b94000
00001bb900004000598ab0005458b9400000001bb90000400059b05b2b2d
2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0
005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db004
26b00426080db05b2b2d2c204569442d00000001000000059eb88df7cb11
5f0f3cf50019080000000000bbeb7ccc00000000c787a88bfbfafd8b09ec
07b600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000023040e000001cf000004a1
0023045a00ac04ec00ac04fc00ac020400ac035d00ac06d700ac042200ac
05620063045800ac03ad004703e6000f03d5005c0362005a0434006003fb
005d03c400350434009901d6008503a3009901d600990664009904340099
0438005a02ca00990321005102ae00210475002104750021043400940377
0029039f002201d60000000000a100a1012f01e5025202f2033d038b0438
04b1054c05f706c9073007df086b090209a30a900b140b8d0c270c6a0d4b
0ddc0e6a0ee30fa91025103110a7113711c7122c12500001000000230120
001000c3000700020010002f006500001190018200040001000000010012
0001000000000006000e00004a4d455659562b43616c69627269b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[9377 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 3474 13 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>CMKQMX+Calibri AddT42Char 
1 3680 14 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>CMKQMX+Calibri AddT42Char 
1 7380 26 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>CMKQMX+Calibri AddT42Char 
1 4934 18 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>CMKQMX+Calibri AddT42Char 
1 4612 17 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>CMKQMX+Calibri AddT42Char 
1 8018 28 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>CMKQMX+Calibri AddT42Char 

1 0 1 <> CMKQMX+Calibri AddT42Char 
1 322 2 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>CMKQMX+Calibri AddT42Char 
1 2160 9 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>CMKQMX+Calibri AddT42Char 
1 1508 6 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>CMKQMX+Calibri AddT42Char 
1 970 4 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>CMKQMX+Calibri AddT42Char 
1 7096 25 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>CMKQMX+Calibri AddT42Char 
1 4030 15 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>CMKQMX+Calibri AddT42Char 
1 8526 31 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>CMKQMX+Calibri AddT42Char 
1 6356 23 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>CMKQMX+Calibri AddT42Char 
1 6806 24 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>CMKQMX+Calibri AddT42Char 
1 7622 27 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>CMKQMX+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>CMKQMX+Calibri AddT42Char 
CMKQMX+Calibri /CharStrings get begin
/g13 13 def
/g14 14 def
/g26 26 def
/g18 18 def
/g17 17 def
/g28 28 def
/g1 1 def
/g2 2 def
/g9 9 def
/g6 6 def
/g4 4 def
/g25 25 def
/g15 15 def
/g31 31 def
/g23 23 def
/g24 24 def
/g27 27 def
end
CMKQMX+Calibri /Encoding get
dup 33 /g13 put
dup 34 /g14 put
dup 35 /g26 put
dup 36 /g18 put
dup 37 /g17 put
dup 38 /g28 put
dup 39 /g1 put
dup 40 /g2 put
dup 41 /g9 put
dup 42 /g6 put
dup 43 /g4 put
dup 44 /g25 put
dup 45 /g15 put
dup 46 /g31 put
dup 47 /g23 put
dup 48 /g24 put
dup 49 /g27 put
pop
end
%ADOEndSubsetFont
/IYLGPG+Calibri /CMKQMX+Calibri findfont ct_VMDictPut
/IYLGPG+Calibri*1 
[33{/.notdef}rp /g13 /g14 /g26 /g18 /g17 /g28 /g1 
/g2 /g9 /g6 /g4 /g25 /g15 /g31 /g23 
/g24 /g27 206{/.notdef}rp]
IYLGPG+Calibri nf
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
120.071 162.646 mo
(!"#)sh
143.739 162.646 mo
($%&'\(\)*')
[8.47247 8.95682 6.03012 4.06976 10.4147 9.29877 4.53598 0 ]xsh
116.071 183.646 mo
(+,-./%0&1')
[11.0737 9.49126 7.61227 9.45709 14.3783 8.95682 9.45709 6.03012 7.03993 0 ]xsh
107.817 232.026 mo
200.499 232.026 li
200.499 279.849 li
154.161 279.849 154.161 298.249 107.817 289.049 cv
cp
115.453 232.026 mo
115.453 225.826 li
207.502 225.826 li
207.502 273.949 li
204.003 273.949 200.499 274.282 200.499 274.282 cv
122.63 225.826 mo
122.63 219.776 li
215.477 219.776 li
215.477 267.749 li
211.49 267.749 207.502 267.999 207.502 267.999 cv
@
%ADOBeginSubsetFont: CMKQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IYLGPG+Calibri gcheck setglobal} if
1 3054 12 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>IYLGPG+Calibri AddT42Char 
IYLGPG+Calibri /CharStrings get begin
/g12 12 def
end
IYLGPG+Calibri /Encoding get
dup 50 /g12 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IYLGPG+Calibri*1 
[33{/.notdef}rp /g13 /g14 /g26 /g18 /g17 /g28 /g1 
/g2 /g9 /g6 /g4 /g25 /g15 /g31 /g23 
/g24 /g27 /g12 205{/.notdef}rp]
IYLGPG+Calibri nf
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
118.017 255.266 mo
(2,.#-%'\(\)*')
[8.27099 9.49126 9.45709 6.27478 7.61227 8.95682 4.06976 10.4147 9.29878 4.53598 0 ]xsh
115.017 276.266 mo
(+,-./%0&1')
[11.0737 9.49126 7.61227 9.45709 14.3783 8.95682 9.45709 6.03012 7.03993 0 ]xsh
236.096 127.155 mo
343.757 127.155 li
343.757 199.155 li
236.096 199.155 li
cp
@
%ADOBeginSubsetFont: CMKQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IYLGPG+Calibri gcheck setglobal} if
1 4310 16 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>IYLGPG+Calibri AddT42Char 
1 8814 32 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>IYLGPG+Calibri AddT42Char 
IYLGPG+Calibri /CharStrings get begin
/g16 16 def
/g32 32 def
end
IYLGPG+Calibri /Encoding get
dup 51 /g16 put
dup 52 /g32 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IYLGPG+Calibri*1 
[33{/.notdef}rp /g13 /g14 /g26 /g18 /g17 /g28 /g1 
/g2 /g9 /g6 /g4 /g25 /g15 /g31 /g23 
/g24 /g27 /g12 /g16 /g32 203{/.notdef}rp]
IYLGPG+Calibri nf
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
263.565 169.375 mo
(*03%4%#')
[4.53598 9.45709 9.45709 8.95682 7.79578 8.95682 6.27478 0 ]xsh
236.096 219.776 mo
343.757 219.776 li
343.757 291.354 li
236.096 291.354 li
cp
@
%ADOBeginSubsetFont: CMKQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IYLGPG+Calibri gcheck setglobal} if
1 2402 10 <00020063ff41058705210027003b008e401d0a2112281810014d28100f01
4d28140d014d28120c014d28180b014d28b80232400a00201c301c801c03
1c32b8ffe8b310014d32b8fff0b30f014d32b8ffecb30d014d32b8ffeeb3
0c014d32b8ffe8b30b014d32b80233b412210a0d2db80129b41753250437
b8012bb10d56003fedd4cd3fed123939012fe12b2b2b2b2bd45dc4e12b2b
2b2b2b123939313005140e0223222e0227060623222e0235343e0233321e
0215140e02071e0501342e0223220e0215141e0233323e020587050a0c06
145974843e31966392d58b444a94de948bd38f4813293e2a496e48281408
feac275b987070985f29265a9772719a5e2872171f1106213f5a3c1e2c56
a6f7a09af9af5f56a5f29d519484702d3c43220f132302e06ebc8b4e538d
ba6872bf8c4d548fbd00>IYLGPG+Calibri AddT42Char 
1 9102 33 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>IYLGPG+Calibri AddT42Char 
1 606 3 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>IYLGPG+Calibri AddT42Char 
1 5672 20 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>IYLGPG+Calibri AddT42Char 
1 6222 22 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>IYLGPG+Calibri AddT42Char 
IYLGPG+Calibri /CharStrings get begin
/g10 10 def
/g33 33 def
/g3 3 def
/g20 20 def
/g22 22 def
end
IYLGPG+Calibri /Encoding get
dup 53 /g10 put
dup 54 /g33 put
dup 55 /g3 put
dup 56 /g20 put
dup 57 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IYLGPG+Calibri*1 
[33{/.notdef}rp /g13 /g14 /g26 /g18 /g17 /g28 /g1 
/g2 /g9 /g6 /g4 /g25 /g15 /g31 /g23 
/g24 /g27 /g12 /g16 /g32 /g10 /g33 /g3 
/g20 /g22 198{/.notdef}rp]
IYLGPG+Calibri nf
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
266.51 252.628 mo
(5.%#6')
[12.1123 9.46606 8.96222 6.28018 8.15225 0 ]xsh
262.884 273.628 mo
(7.893%#')
[9.79031 9.46609 4.13828 4.13828 9.46609 8.96222 6.28018 0 ]xsh
362.237 359.2 mo
383.769 287.2 li
469.898 287.2 li
448.366 359.2 li
cp
@
%ADOBeginSubsetFont: CMKQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IYLGPG+Calibri gcheck setglobal} if
1 1814 8 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>IYLGPG+Calibri AddT42Char 
1 5408 19 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>IYLGPG+Calibri AddT42Char 
1 1658 7 <000100ac0000034b0514001a0048b90015ffe8b310014d15b8fff0b30f01
4d15b8fff0b30d014d15b8fff6b30c014d15b8ffe8b30b014d15b80211b4
00090f5215b8012bb10654003fed3f012fcde12b2b2b2b2b313025140e02
232122263511343e0233321e02151121321e02034b04090d09fdc4172908
1422181921140801d0090d09044b141b13091f2704ae080c070505070c08
fba109111c00>IYLGPG+Calibri AddT42Char 
IYLGPG+Calibri /CharStrings get begin
/g8 8 def
/g19 19 def
/g7 7 def
end
IYLGPG+Calibri /Encoding get
dup 58 /g8 put
dup 59 /g19 put
dup 60 /g7 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IYLGPG+Calibri*1 
[33{/.notdef}rp /g13 /g14 /g26 /g18 /g17 /g28 /g1 
/g2 /g9 /g6 /g4 /g25 /g15 /g31 /g23 
/g24 /g27 /g12 /g16 /g32 /g10 /g33 /g3 
/g20 /g22 /g8 /g19 /g7 195{/.notdef}rp]
IYLGPG+Calibri nf
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
382.916 320.975 mo
(:"&-;%3')
[15.3899 8.62207 6.03012 7.61227 9.45709 8.95682 9.45709 0 ]xsh
403.916 341.975 mo
(<81&')
[7.56714 4.13107 7.03992 6.03012 0 ]xsh
422.108 190.803 mo
422.108 186.047 434.159 182.191 449.023 182.191 cv
463.888 182.191 475.939 186.047 475.939 190.803 cv
475.939 225.251 li
475.939 230.007 463.888 233.863 449.023 233.863 cv
434.159 233.863 422.108 230.007 422.108 225.251 cv
cp
0 0 0 0 cmyk
ef
475.939 190.803 mo
475.939 195.559 463.888 199.415 449.023 199.415 cv
434.159 199.415 422.108 195.559 422.108 190.803 cv
.750179 .679652 .670191 .901488 cmyk
@
422.108 190.803 mo
422.108 186.047 434.159 182.191 449.023 182.191 cv
463.888 182.191 475.939 186.047 475.939 190.803 cv
475.939 225.251 li
475.939 230.007 463.888 233.863 449.023 233.863 cv
434.159 233.863 422.108 230.007 422.108 225.251 cv
cp
@
475.939 190.803 mo
475.939 186.047 487.989 182.191 502.854 182.191 cv
517.719 182.191 529.769 186.047 529.769 190.803 cv
529.769 225.251 li
529.769 230.007 517.719 233.863 502.854 233.863 cv
487.989 233.863 475.939 230.007 475.939 225.251 cv
cp
0 0 0 0 cmyk
ef
529.769 190.803 mo
529.769 195.559 517.719 199.415 502.854 199.415 cv
487.989 199.415 475.939 195.559 475.939 190.803 cv
.750179 .679652 .670191 .901488 cmyk
@
475.939 190.803 mo
475.939 186.047 487.989 182.191 502.854 182.191 cv
517.719 182.191 529.769 186.047 529.769 190.803 cv
529.769 225.251 li
529.769 230.007 517.719 233.863 502.854 233.863 cv
487.989 233.863 475.939 230.007 475.939 225.251 cv
cp
@
449.023 211.13 mo
449.023 206.374 461.074 202.518 475.939 202.518 cv
490.803 202.518 502.854 206.374 502.854 211.13 cv
502.854 245.579 li
502.854 250.335 490.803 254.191 475.939 254.191 cv
461.074 254.191 449.023 250.335 449.023 245.579 cv
cp
0 0 0 0 cmyk
ef
502.854 211.131 mo
502.854 215.887 490.803 219.743 475.939 219.743 cv
461.074 219.743 449.023 215.887 449.023 211.131 cv
.750179 .679652 .670191 .901488 cmyk
@
449.023 211.131 mo
449.023 206.374 461.074 202.518 475.939 202.518 cv
490.803 202.518 502.854 206.374 502.854 211.131 cv
502.854 245.579 li
502.854 250.335 490.803 254.191 475.939 254.191 cv
461.074 254.191 449.023 250.335 449.023 245.579 cv
cp
@
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
455.571 240.922 mo
(*03%4')
[4.53598 9.45706 9.45709 8.95685 7.79575 0 ]xsh
492.655 287.2 mo
600.315 287.2 li
600.315 359.2 li
492.655 359.2 li
cp
@
%ADOBeginSubsetFont: CMKQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal IYLGPG+Calibri gcheck setglobal} if
1 2712 11 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>IYLGPG+Calibri AddT42Char 
1 5914 21 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>IYLGPG+Calibri AddT42Char 
1 1188 5 <000100acfffa04500514002f00b8b43f3101230cb8ffe8b310014d0cb8ff
f0b30f014d0cb8fff0b30d014d0cb8fff6b30c014d0cb8ffe8b30b014d0c
b80211401c17240b1810014d0b100f014d0b100d014d0b0a0c014d0b180b
014d0bb802104017004015014d004013014d00401011014c00400c014d00
17b8ffc0b315014d17b8ffc0b613014d172a5224b8012c400fc00c01d00c
010c0c121d5212550555003f3f3f12392f5d71ed3f012f2b2bd42b2b2b2b
e12b2b2b2b2b3210e12b2b2b2b2b3231305d25140e0223222e0235112111
140e0223222e023511343e0233321e0215112111343e0233321e02150450
081421181a201408fdb308142119182214080814221819211408024d0814
201a182114081a080c070505070c08023efdc2080c070505070c0804da08
0c070505070c08fdfa0206080c070505070c0800>IYLGPG+Calibri AddT42Char 
1 8290 30 <00010021ffef03dc04ad0041003db22f4110b801f8b42b1e1e2b0fb801f9
400c03352b4148102bed3b354814b80104b3254d094c003f3fed3fcded32
3f012f32dde112392f10e1322f31300132161511140e0223222e02351121
11141633323e0233321e0215140e0423222e02351123222635343e023333
35343e0233321e02151503a81e160813201719201308fe2f374717241c14
0805090504081020292e174664401d7e0f1205080d087d07132018192012
0803b71b1afc97080b080404080b080315fe0a5d5f090a09050e18121d21
110e0906254b734e020e2024131a1107d6070c090404090c07d6>IYLGPG+Calibri AddT42Char 
1 9304 34 <0002000003b70151052f000b000c0014b900000271b40609030c48003fde
cd012fe131300114062322263534363332160101512c3b3a2b2c3b3a2bfe
af04cd3a2a29393a2a29feb1>IYLGPG+Calibri AddT42Char 
1 8266 29 <ffff0021ffef03ef052f0226001e000000070022029e0000>IYLGPG+Calibri AddT42Char 
IYLGPG+Calibri /CharStrings get begin
/g11 11 def
/g21 21 def
/g5 5 def
/g29 29 def
end
IYLGPG+Calibri /Encoding get
dup 61 /g11 put
dup 62 /g21 put
dup 63 /g5 put
dup 64 /g29 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/IYLGPG+Calibri*1 
[33{/.notdef}rp /g13 /g14 /g26 /g18 /g17 /g28 /g1 
/g2 /g9 /g6 /g4 /g25 /g15 /g31 /g23 
/g24 /g27 /g12 /g16 /g32 /g10 /g33 /g3 
/g20 /g22 /g8 /g19 /g7 /g11 /g21 /g5 
/g29 191{/.notdef}rp]
IYLGPG+Calibri nf
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
517.682 321.028 mo
(="0>80$')
[9.77399 8.62207 9.45709 8.1828 4.1311 9.45709 8.47247 0 ]xsh
510.853 342.028 mo
(?%.#81@-1')
[11.214 8.95685 9.45709 6.27478 4.13104 7.03992 10.028 7.61224 7.03992 0 ]xsh
485.362 449.094 mo
531.706 458.294 531.706 439.894 578.044 439.894 cv
578.044 392.071 li
485.362 392.071 li
cp
492.998 392.071 mo
492.998 385.87 li
585.047 385.87 li
585.047 433.994 li
581.548 433.994 578.044 434.327 578.044 434.327 cv
578.044 392.071 li
cp
500.175 385.87 mo
500.175 379.82 li
593.022 379.82 li
593.022 427.794 li
589.035 427.794 585.047 428.044 585.047 428.044 cv
585.047 385.87 li
cp
.108766 .0831922 .0831922 0 cmyk
ef
485.362 392.071 mo
578.044 392.071 li
578.044 439.894 li
531.706 439.894 531.706 458.294 485.362 449.094 cv
cp
492.998 392.071 mo
492.998 385.871 li
585.047 385.871 li
585.047 433.994 li
581.548 433.994 578.044 434.327 578.044 434.327 cv
500.175 385.871 mo
500.175 379.82 li
593.022 379.82 li
593.022 427.794 li
589.035 427.794 585.047 428.044 585.047 428.044 cv
.750179 .679652 .670191 .901488 cmyk
@
IYLGPG+Calibri*1 [18 0 0 -18 0 0 ]msf
507.775 415.677 mo
(="0>%3')
[9.77399 8.62207 9.45709 8.1828 8.95685 9.45709 0 ]xsh
522.615 436.677 mo
(<81&')
[7.56714 4.1311 7.03992 6.03009 0 ]xsh
.654545 lw
214.69 163.155 mo
234.143 163.155 li
@
236.127 163.155 mo
228.646 167.519 li
228.169 167.797 227.557 167.636 227.279 167.159 cv
227.001 166.682 227.162 166.069 227.639 165.791 cv
232.158 163.155 li
227.639 160.519 li
227.162 160.241 227.001 159.628 227.279 159.151 cv
227.279 159.151 li
227.557 158.674 228.169 158.513 228.646 158.791 cv
cp
ef
215.477 255.776 mo
234.118 255.606 li
@
236.102 255.588 mo
228.582 251.292 li
228.102 251.018 227.492 251.185 227.218 251.665 cv
226.944 252.144 227.111 252.755 227.59 253.029 cv
232.133 255.624 li
227.638 258.301 li
227.163 258.584 227.008 259.198 227.291 259.672 cv
227.291 259.672 li
227.573 260.147 228.187 260.302 228.661 260.02 cv
cp
ef
459.132 323.2 mo
490.647 323.2 li
@
492.632 323.2 mo
485.151 327.564 li
484.674 327.842 484.061 327.681 483.783 327.204 cv
483.505 326.727 483.666 326.115 484.143 325.836 cv
488.662 323.2 li
484.143 320.564 li
483.666 320.286 483.505 319.673 483.783 319.196 cv
483.783 319.196 li
484.061 318.719 484.674 318.558 485.151 318.836 cv
cp
ef
546.485 359.2 mo
546.598 377.841 li
@
546.61 379.825 mo
542.201 372.371 li
541.92 371.896 542.077 371.282 542.553 371.001 cv
543.028 370.72 543.641 370.877 543.922 371.353 cv
546.586 375.856 li
549.195 371.321 li
549.47 370.842 550.081 370.677 550.56 370.953 cv
550.56 370.953 li
551.039 371.228 551.204 371.839 550.929 372.318 cv
cp
ef
343.757 162.316 mo
475.944 162.316 li
475.944 200.519 li
@
475.944 202.504 mo
471.58 195.023 li
471.302 194.546 471.463 193.933 471.94 193.655 cv
472.417 193.377 473.03 193.538 473.308 194.015 cv
475.944 198.534 li
478.58 194.015 li
478.859 193.538 479.471 193.377 479.948 193.655 cv
479.948 193.655 li
480.425 193.933 480.586 194.546 480.308 195.023 cv
cp
ef
345.741 255.565 mo
382.944 255.565 li
382.944 208.003 li
420.147 208.003 li
@
343.757 255.565 mo
351.237 259.929 li
351.714 260.207 352.327 260.046 352.605 259.569 cv
352.883 259.092 352.722 258.479 352.245 258.201 cv
347.726 255.565 li
352.245 252.929 li
352.722 252.651 352.883 252.038 352.605 251.561 cv
352.605 251.561 li
352.327 251.084 351.714 250.923 351.237 251.201 cv
cp
ef
422.132 208.003 mo
414.651 203.639 li
414.174 203.36 413.561 203.522 413.283 203.999 cv
413.005 204.476 413.166 205.088 413.643 205.366 cv
418.162 208.003 li
413.643 210.639 li
413.166 210.917 413.005 211.529 413.283 212.006 cv
413.283 212.006 li
413.561 212.483 414.174 212.645 414.651 212.366 cv
cp
ef
345.741 255.565 mo
416.069 255.565 li
416.069 285.205 li
@
343.757 255.565 mo
351.237 251.201 li
351.714 250.923 352.327 251.084 352.605 251.561 cv
352.883 252.038 352.722 252.651 352.245 252.929 cv
347.726 255.565 li
352.245 258.201 li
352.722 258.479 352.883 259.092 352.605 259.569 cv
352.605 259.569 li
352.327 260.046 351.714 260.207 351.237 259.929 cv
cp
ef
416.069 287.19 mo
411.705 279.709 li
411.427 279.232 411.588 278.62 412.065 278.342 cv
412.542 278.063 413.155 278.224 413.433 278.702 cv
416.069 283.221 li
418.705 278.702 li
418.984 278.224 419.596 278.063 420.073 278.342 cv
420.073 278.342 li
420.55 278.62 420.711 279.232 420.433 279.709 cv
cp
ef
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/IYLGPG+Calibri*1 uf
/IYLGPG+Calibri uf
/CMKQMX+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 207 1375 a Fk(Figur)o(e)18 b(3:)24 b(Ov)o(er)o(view)c(of)h
Fn(S)t Fp(M)t(A)t(M)f Fk(appr)o(oach)p 0 TeXcolorgray
0 TeXcolorgray 442 1702 a(T)-7 b(able)19 b(2:)k(Extracted)c(Fields)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -152 1805
2182 7 v 0 TeXcolorgray 0.925 TeXcolorgray -152 1825
2182 21 v 0 TeXcolorgray 0.925 TeXcolorgray -152 1900
241 75 v 0 TeXcolorgray -107 1878 a Fg(S)e(No.)p 0.925
TeXcolorgray 89 1900 623 75 v 0 TeXcolorgray 89 w(Name)p
0.925 TeXcolorgray 712 1900 1318 75 v 0 TeXcolorgray
465 w(Description)p 0.925 TeXcolorgray -152 1913 2182
13 v 0 TeXcolorgray 0 TeXcolorgray -152 1917 2182 4 v
0 TeXcolorgray 1 TeXcolorgray -152 1938 2182 21 v 0 TeXcolorgray
1 TeXcolorgray -152 2012 241 75 v 0 TeXcolorgray 11 1990
a(1)p 1 TeXcolorgray 89 2012 623 75 v 0 TeXcolorgray
90 w(T)-5 b(ype)17 b(Name)p 1 TeXcolorgray 712 2012 1318
75 v 0 TeXcolorgray 317 w(Enclosing)h(class/interf)o(ace)k(name)17
b(of)g(the)h(method)p 0.975 TeXcolorgray -152 2087 241
75 v 0 TeXcolorgray 11 2065 a(2)p 0.975 TeXcolorgray
89 2087 623 75 v 0 TeXcolorgray 90 w(P)o(ackage)h(Name)p
0.975 TeXcolorgray 712 2087 1318 75 v 0 TeXcolorgray
228 w(P)o(ackage)g(name)e(of)g(the)h(enclosing)h(class)p
1 TeXcolorgray -152 2162 241 75 v 0 TeXcolorgray 11 2139
a(3)p 1 TeXcolorgray 89 2162 623 75 v 0 TeXcolorgray
90 w(Method)f(Name)p 1 TeXcolorgray 712 2162 1318 75
v 0 TeXcolorgray 242 w(Name)f(of)g(the)h(method)p 0.975
TeXcolorgray -152 2236 241 75 v 0 TeXcolorgray 11 2214
a(4)p 0.975 TeXcolorgray 89 2236 623 75 v 0 TeXcolorgray
90 w(Method)g(Modi\002ers)p 0.975 TeXcolorgray 712 2236
1318 75 v 0 TeXcolorgray 143 w(Access)g(modi\002ers)f(of)g(the)h
(method)p 1 TeXcolorgray -152 2311 241 75 v 0 TeXcolorgray
11 2289 a(5)p 1 TeXcolorgray 89 2311 623 75 v 0 TeXcolorgray
90 w(Exceptions)h(Thro)n(wn)p 1 TeXcolorgray 712 2311
1318 75 v 0 TeXcolorgray 103 w(Name)e(of)g(the)h(e)o(xceptions)h(thro)n
(wn)g(by)e(the)g(method)p 0.975 TeXcolorgray -152 2386
241 75 v 0 TeXcolorgray 11 2363 a(6)p 0.975 TeXcolorgray
89 2386 623 75 v 0 TeXcolorgray 90 w(P)o(arameters)p
0.975 TeXcolorgray 712 2386 1318 75 v 0 TeXcolorgray
331 w(Name)g(and)h(type)g(information)h(of)e(parameters)p
1 TeXcolorgray -152 2461 241 75 v 0 TeXcolorgray 11 2438
a(7)p 1 TeXcolorgray 89 2461 623 75 v 0 TeXcolorgray
90 w(Class)h(Description)p 1 TeXcolorgray 712 2461 1318
75 v 0 TeXcolorgray 155 w(Description)h(of)e(enclosing)j(type)p
0.975 TeXcolorgray -152 2535 241 75 v 0 TeXcolorgray
11 2513 a(8)p 0.975 TeXcolorgray 89 2535 623 75 v 0 TeXcolorgray
90 w(Method)e(Description)p 0.975 TeXcolorgray 712 2535
1318 75 v 0 TeXcolorgray 93 w(Description)h(of)e(the)h(method)p
1 TeXcolorgray -152 2548 2182 13 v 0 TeXcolorgray 0 TeXcolorgray
-152 2554 2182 7 v 0 TeXcolorgray 0 TeXcolorgray 35 2877
a Fp(documents.)p 0 TeXcolorgray -58 3035 a(2.)p 0 TeXcolorgray
37 w Fd(n)p Fp(,)26 b(the)e(total)g(number)i(of)e(gibbs)h(iteration,)g
(where)g(a)g(single)f(itera-)35 3122 y(tion)c(in)m(v)o(olv)o(es)g(a)f
(gibbs)h(sampler)g(sampling)g(a)g(topic)f(for)h(each)g(term)35
3209 y(occurring)g(in)f(the)g(corpus.)p 0 TeXcolorgray
-58 3367 a(3.)p 0 TeXcolorgray 37 w Fd(\013)p Fp(,)d(this)f(parameter)i
(af)n(fects)e(the)h(distrib)o(ution)f(of)h(topics)g(across)g(doc-)35
3455 y(uments.)23 b(A)17 b(high)h Fd(\013)f Fp(means)g(that)g(each)h
(document)g(is)f(lik)o(ely)g(to)g(con-)35 3542 y(tain)28
b(a)f(mixture)h(of)g(most)g(of)g(the)g(topics.)49 b(Con)m(v)o(ersely)-5
b(,)31 b(a)d(lo)n(w)g Fd(\013)35 3629 y Fp(means)e(each)f(document)i
(is)e(lik)o(ely)g(to)g(contain)g(mixture)h(of)f(fe)n(wer)35
3716 y(or)19 b(one)h(topic.)p 0 TeXcolorgray -58 3874
a(4.)p 0 TeXcolorgray 37 w Fd(\014)t Fp(,)34 b(this)c(parameter)h(af)n
(fects)g(the)g(distrib)o(ution)g(of)g(terms)f(in)h(each)35
3961 y(topic.)48 b(A)27 b(high)h Fd(\014)j Fp(means)d(that)f(each)g
(topic)h(is)e(lik)o(ely)i(to)f(contain)35 4049 y(a)22
b(uniform)h(distrib)o(ution)f(of)g(terms.)33 b(Con)m(v)o(ersely)-5
b(,)24 b(a)f(lo)n(w)f Fd(\014)k Fp(means)35 4136 y(terms)19
b(are)g(not)g(uniformly)g(distrib)o(uted)g(across)h(topics.)-152
4346 y Fo(5.)100 b(APPR)m(O)l(A)-5 b(CH)-152 4437 y Fp(W)f(e)19
b(\002rst)f(preprocess)i(the)f(API)f(documents)-152 4612
y(In)k(particular)f(we)g(e)o(xtract)g(the)h(\002elds)f(listed)g(in)g(T)
-6 b(able)21 b(2)g(\002elds)g(from)g(API)-152 4699 y(documents)-152
4873 y(W)-6 b(e)19 b(perform)g(the)g(follo)n(wing)g(pre-processing)p
0 TeXcolorgray -58 5132 a(1.)p 0 TeXcolorgray 37 w Fk(Lo)o(wer)o(case)h
Fp(Con)m(v)o(ert)f(the)g(te)o(xt)g(to)g(lo)n(wercase)p
0 TeXcolorgray -58 5290 a(2.)p 0 TeXcolorgray 37 w Fk(Split)28
b(Camelcase)i Fp(Split)e(the)i(camelcase)g(notation)g(of)f(the)h(class)
35 5378 y(name)20 b(and)f(method)h(name)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2111 -29 a Fk(Class)f(Name)p
Fp(:)24 b Fl(java)39 b(util)h(iter)2111 58 y Fk(Class)77
b(Description)p Fp(:)136 b Fl(iter)40 b(over)f(collect)g(iter)g(take)
2111 146 y(enumer)g(java)h(collect)f(framework)2111 233
y Fk(Method)18 b(Name)2565 201 y Fr(\003)2602 233 y Fp(:)23
b Fl(ha)39 b(next)2111 320 y Fk(Method)89 b(Description)p
Fp(:)164 b Fl(return)39 b(true)g(iter)g(ha)h(more)2111
407 y(element)f(other)g(word)h(return)f(true)g(next)g(would)2111
494 y(return)g(elementrather)f(than)i(throw)f(except)2111
637 y Fr(\003)2166 669 y Fp(Names)19 b(are)g(Camel-case)g(split)p
2040 -148 1993 5 v 2040 754 5 904 v 4028 754 V 2040 756
1993 5 v 2777 990 a Fk(Figur)o(e)f(4:)24 b(Query)p 0
TeXcolorgray 0 TeXcolorgray 2133 1256 a Fp(3.)p 0 TeXcolorgray
38 w Fk(Split)17 b(package)i(Notation)g Fp(Split)f(the)h(package)h
(notation)p 0 TeXcolorgray 2133 1439 a(4.)p 0 TeXcolorgray
38 w Fk(Remo)o(v)o(e)c(hr)o(ef)d(and)h(other)g(ja)n(v)o(adoc)i
(identi\002ers)d Fp(remo)o(v)o(e)i(the)f Fl(@Code,)2227
1526 y(@link)p Fp(...)21 b(lik)o(e)e Fl(JavaDoc)f Fp(identifers)2040
1803 y(First)h(we)i(parse)f(the)h(API)e(documents)j(of)f(source)g(and)g
(tar)o(get)f(API)f(library)2040 1891 y(and)j(store)g(it)f(in)g
(intermediate)h(representation)h(for)e(analysis.)32 b(In)21
b(particu-)2040 1978 y(lar)m(,)i(we)g(e)o(xtract)g(class,)h(interf)o
(ace)f(and)h(corresponding)h(method)f(descrip-)2040 2065
y(tions)g(from)g(API)f(documents.)39 b(Second,)25 b(we)f(then)g(create)
g(a)g(term)f(v)o(ector)2040 2152 y(representation)k(of)f(each)h(class)f
(description)h(and)g(method)g(descriptions.)2040 2239
y(V)-8 b(ector)19 b(space)g(model)h(or)f(term)f(v)o(ector)i(model)f(is)
f(an)i(algebraic)f(model)h(for)2040 2327 y(representing)d(te)o(xt)e
(documents)i(\(and)f(an)o(y)g(objects,)h(in)e(general\))h(as)g(v)o
(ectors)2040 2414 y(of)21 b(identi\002ers,)g(such)h(as,)g(for)f(e)o
(xample,)h(inde)o(x)g(terms.)29 b(In)21 b(our)h(case,)g(each)2040
2501 y(w)o(ord)d(is)f(considered)h(as)g(a)f(term)g(barring)h(the)f
(stop)h(w)o(ords)g(such)f(as)h(\(a,)f(the,)2040 2588
y(and)i(...\).)2040 2762 y(Finally)g(we)f(use)i(the)f(term)f(v)o(ector)
h(representation)h(of)f(a)g(method)h(descrip-)2040 2850
y(tion)g(in)g(a)g(source)h(API)e(to)h(query)i(term)d(v)o(ector)i
(representation)g(of)f(the)g(the)2040 2937 y(method)i(description)g(in)
g(tar)o(get)e(API.)g(The)i(results)f(are)g(rank)o(ed)i(based)f(on)2040
3024 y(the)f(T)-5 b(erm)22 b(Frequenc)o(y-In)m(v)o(erse)i(Document)g
(Frequenc)o(y)f(\(TF-IDF\))d(mea-)2040 3111 y(sure.)28
b(TF-IDF)19 b(is)h(a)h(numerical)g(statistic)f(which)h(re\003ects)f(ho)
n(w)h(important)2040 3198 y(a)h(w)o(ord)h(is)f(to)g(a)g(document)i(in)e
(a)g(collection)h(or)f(corpus.)34 b(It)21 b(is)h(often)h(used)2040
3285 y(as)c(a)g(weighting)g(f)o(actor)h(in)e(information)i(retrie)n(v)n
(al)f(and)g(te)o(xt)g(mining.)2040 3460 y(W)-6 b(e)19
b(ne)o(xt)g(b)o(uild)g(inde)o(x)o(es)2040 3634 y(Lucene)h(Inde)o(x)o
(es)2040 3808 y(using)g(Standard)f(English)g(Analyzer)2040
3983 y(follo)n(wing)g(\002elds:)2040 4157 y(Class)g(Base)g(Name)g
(Camel)g(Case)f(Split)2040 4332 y(Class)h(Description)2040
4506 y(Method)h(base)g(Name)f(Camel)g(Case)f(Split)2040
4680 y(Method)i(Description)2040 4855 y(Query)g(formulation:)2040
5029 y(heuristics)h(1)g(:)26 b(\002rst)20 b(tw)o(o)g(sentences)i(are)f
(pro)o(vide)g(a)g(reasonable)g(approxi-)2040 5116 y(mation)e(of)g(the)g
(most)g(important)h(k)o(e)o(yw)o(ords)g(of)f(an)g(method)2040
5290 y(heuristics)k(2)g(:)30 b(\002rst)22 b(paragraph)i(pro)o(vides)g
(a)f(reasonable)h(approximation)2040 5378 y(of)19 b(the)g(most)g
(important)g(k)o(e)o(yw)o(ords)i(of)e(a)g(class.)p 0
TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray -80 17 a Fa(hasNe)n(xt)-80
104 y Fl(boolean)39 b(hasNext\(\))-80 191 y Fp(Returns)30
b Fl(true)f Fp(if)g(the)h(iteration)g(has)g(more)h(elements.)56
b(\(In)30 b(other)-80 279 y(w)o(ords,)23 b(returns)f(true)f(if)h
Fl(next\(\))e Fp(w)o(ould)j(return)f(an)g(element)g(rather)-80
366 y(than)d(thro)n(wing)h(an)f(e)o(xception.\))-80 453
y Fk(Retur)o(ns)p Fp(:)-80 540 y Fl(true)f Fp(if)g(the)h(iteration)g
(has)g(more)g(elements)p -152 -148 1993 5 v -152 610
5 760 v 1837 610 V -152 612 1993 5 v 253 847 a Fk(Figur)o(e)f(5:)23
b(hasNext)c(method)g(of)f(Iterator)p 0 TeXcolorgray 0
TeXcolorgray 310 1086 a(T)-7 b(able)19 b(3:)k(Comparison)c(with)f
(SNIFF)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-152 1189 2212 8 v 0 TeXcolorgray 0.925 TeXcolorgray
-152 1210 2212 21 v 0 TeXcolorgray 0.925 TeXcolorgray
-152 1297 1566 88 v 0 TeXcolorgray -107 1271 a Fp(Query)p
0.925 TeXcolorgray 1414 1297 647 88 v 0 TeXcolorgray
1380 w(Rele)n(v)n(ant)h(Mtd)h(rank)p 0.925 TeXcolorgray
-152 1384 1566 88 v 0 TeXcolorgray 0.925 TeXcolorgray
1414 1384 294 88 v 0 TeXcolorgray 1459 1358 a(SNIFF)p
0.925 TeXcolorgray 1707 1384 354 88 v 0 TeXcolorgray
118 w Fn(S)t Fp(M)t(A)t(M)p 0.925 TeXcolorgray -152 1397
2212 13 v 0 TeXcolorgray 0 TeXcolorgray -152 1401 2212
4 v 0 TeXcolorgray 1 TeXcolorgray -152 1422 2212 21 v
0 TeXcolorgray 0.975 TeXcolorgray -152 1509 1566 88 v
0 TeXcolorgray -107 1483 a(get)f(acti)n(v)o(e)g(editor)g(windo)n(w)h
(from)f(eclipse)g(w)o(orkbench)p 0.975 TeXcolorgray 1414
1509 294 88 v 0 TeXcolorgray 258 w(1)p 0.975 TeXcolorgray
1707 1509 354 88 v 0 TeXcolorgray 316 w(1)p 1 TeXcolorgray
-152 1596 1566 88 v 0 TeXcolorgray -107 1570 a(parse)g(a)g(ja)o(v)n(a)g
(source)h(and)f(create)g(ast)p 1 TeXcolorgray 1414 1596
294 88 v 0 TeXcolorgray 744 w(1)p 1 TeXcolorgray 1707
1596 354 88 v 0 TeXcolorgray 316 w(1)p 0.975 TeXcolorgray
-152 1683 1566 88 v 0 TeXcolorgray -107 1657 a(connect)h(to)f(a)g
(database)h(using)f(jdbc)p 0.975 TeXcolorgray 1414 1683
294 88 v 0 TeXcolorgray 768 w(1)p 0.975 TeXcolorgray
1707 1683 354 88 v 0 TeXcolorgray 316 w(1)p 1 TeXcolorgray
-152 1771 1566 88 v 0 TeXcolorgray -107 1744 a(display)h(directory)f
(dialog)h(from)f(vie)n(wer)g(in)f(eclipse)p 1 TeXcolorgray
1414 1771 294 88 v 0 TeXcolorgray 336 w(1)p 1 TeXcolorgray
1707 1771 354 88 v 0 TeXcolorgray 316 w(1)p 0.975 TeXcolorgray
-152 1858 1566 88 v 0 TeXcolorgray -107 1832 a(read)h(a)g(line)g(of)g
(te)o(xt)g(from)g(a)f(\002le)p 0.975 TeXcolorgray 1414
1858 294 88 v 0 TeXcolorgray 880 w(1)p 0.975 TeXcolorgray
1707 1858 354 88 v 0 TeXcolorgray 316 w(1)p 1 TeXcolorgray
-152 1945 1566 88 v 0 TeXcolorgray -107 1919 a(return)h(an)g(audio)h
(clip)f(from)g(url)p 1 TeXcolorgray 1414 1945 294 88
v 0 TeXcolorgray 883 w(1)p 1 TeXcolorgray 1707 1945 354
88 v 0 TeXcolorgray 316 w(1)p 0.975 TeXcolorgray -152
2032 1566 88 v 0 TeXcolorgray -107 2006 a(e)o(x)o(ecute)h(SQL)e(query)p
0.975 TeXcolorgray 1414 2032 294 88 v 0 TeXcolorgray
1158 w(2)p 0.975 TeXcolorgray 1707 2032 354 88 v 0 TeXcolorgray
316 w(1)p 1 TeXcolorgray -152 2119 1566 88 v 0 TeXcolorgray
-107 2093 a(current)h(selection)h(from)f(eclipse)g(w)o(orkbench)p
1 TeXcolorgray 1414 2119 294 88 v 0 TeXcolorgray 498
w(1)p 1 TeXcolorgray 1707 2119 354 88 v 0 TeXcolorgray
316 w(1)p 1 TeXcolorgray -152 2132 2212 13 v 0 TeXcolorgray
0 TeXcolorgray -152 2138 2212 7 v 0 TeXcolorgray 0 TeXcolorgray
-152 2444 a Fo(6.)100 b(EV)-13 b(ALU)-6 b(A)d(TION)-152
2535 y Fp(W)j(e)24 b(conducted)h(an)f(e)n(v)n(aluation)h(to)f(assess)g
(the)g(ef)n(fecti)n(v)o(eness)h(of)e(our)h(ap-)-152 2623
y(proach.)48 b(In)27 b(our)g(e)n(v)n(aluation,)j(we)d(address)h(three)e
(main)i(research)f(ques-)-152 2710 y(tions:)p 0 TeXcolorgray
-41 2946 a Fi(\017)p 0 TeXcolorgray 38 w Fk(RQ1)p Fp(:)34
b(What)24 b(are)g(the)g(precision)h(and)g(recall)f(of)g(our)h(approach)
h(in)35 3034 y(identifying)20 b(API)e(mappings?)p 0 TeXcolorgray
-41 3175 a Fi(\017)p 0 TeXcolorgray 38 w Fk(RQ2)p Fp(:)28
b(Ho)n(w)22 b(do)g(the)f(mappings)i(inferred)f(by)g(our)f(approach)i
(com-)35 3262 y(pare)c(with)g(the)g(human)h(written)e(mappings?)-152
3456 y Fo(6.1)99 b(Subjects)-152 3547 y Fp(W)-6 b(e)22
b(used)i(the)e(API)g(documents)i(of)e(the)h(follo)n(wing)g(library)f
(pairs)h(as)f(sub-)-152 3634 y(jects)d(for)g(our)g(e)n(v)n(aluation.)
-152 3808 y Fk(J2ME-Andr)o(oid)p Fp(.)42 b(Ja)o(v)n(a)25
b(Platform,)i(Micro)e(Edition,)i(or)f(Ja)o(v)n(a)f(ME,)h(is)f(a)-152
3896 y(Ja)o(v)n(a)c(platform)g(designed)h(for)f(embedded)h(systems)f
(\(mobile)g(de)n(vices)h(are)-152 3983 y(one)29 b(kind)f(of)g(such)g
(systems\).)50 b(T)-6 b(ar)o(get)27 b(de)n(vices)h(range)h(from)f
(industrial)-152 4070 y(controls)d(to)g(mobile)g(phones)h(\(especially)
f(feature)g(phones\))h(and)f(set-top)-152 4157 y(box)o(es.)48
b(Ja)o(v)n(a)27 b(ME)g(w)o(as)g(formerly)g(kno)n(wn)h(as)f(Ja)o(v)n(a)g
(2)g(Platform,)h(Micro)-152 4244 y(Edition)19 b(\(J2ME\).)-152
4419 y(Android)j(is)f(a)g(Linux-based)h(operating)g(system)f(designed)i
(primarily)e(for)-152 4506 y(touchscreen)27 b(mobile)f(de)n(vices)h
(such)f(as)f(smartphones)i(and)f(tablet)f(com-)-152 4593
y(puters.)-152 4767 y Fk(J)o(a)n(v)o(a)c(-C#)-152 4942
y Fp(Ef)n(fecti)n(v)o(eness)f(in)e(free)h(form)g(queries:)-152
5116 y(Discussion)h(with)e(Authors)-152 5290 y(None)26
b(of)g(the)g(mapping)h(methods)f(point)g(to)g(AlertDIalog)f(Class)g(in)
h(An-)-152 5378 y(droid)h(that)f(seems)g(to)g(be)g(the)g(class)g
(implementing)h(alert)e(functionality)-5 b(.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2490 109 a Fk(T)e(able)18
b(4:)24 b(Comparison)19 b(with)e(Rosetta)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2040 211 2043 8 v 0 TeXcolorgray
0.925 TeXcolorgray 2040 233 2043 21 v 0 TeXcolorgray
0.925 TeXcolorgray 2040 320 279 88 v 0 TeXcolorgray 2085
294 a Fp(S.)h(No.)p 0.925 TeXcolorgray 2318 320 1264
88 v 0 TeXcolorgray 89 w(Method)p 0.925 TeXcolorgray
3582 320 501 88 v 0 TeXcolorgray 1035 w Fn(S)t Fp(M)t(A)t(M)i(Rank)p
0.925 TeXcolorgray 2040 333 2043 13 v 0 TeXcolorgray
0 TeXcolorgray 2040 337 2043 4 v 0 TeXcolorgray 1 TeXcolorgray
2040 357 2043 21 v 0 TeXcolorgray 0.975 TeXcolorgray
2040 445 279 88 v 0 TeXcolorgray 2236 418 a(1)p 0.975
TeXcolorgray 2318 445 1264 88 v 0 TeXcolorgray 90 w(Alert.setT)m
(imeout)p 0.975 TeXcolorgray 3582 445 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 532 279 88 v 0 TeXcolorgray 2236
506 a(2)p 1 TeXcolorgray 2318 532 1264 88 v 0 TeXcolorgray
90 w(Alert.setT)-6 b(ype)p 1 TeXcolorgray 3582 532 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 619 279 88
v 0 TeXcolorgray 2236 593 a(3)p 0.975 TeXcolorgray 2318
619 1264 88 v 0 TeXcolorgray 90 w(Can)m(v)n(as.getHeight)p
0.975 TeXcolorgray 3582 619 501 88 v 0 TeXcolorgray 1
TeXcolorgray 2040 706 279 88 v 0 TeXcolorgray 2236 680
a(4)p 1 TeXcolorgray 2318 706 1264 88 v 0 TeXcolorgray
90 w(Can)m(v)n(as.getW)m(idth)p 1 TeXcolorgray 3582 706
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 793 279
88 v 0 TeXcolorgray 2236 767 a(5)p 0.975 TeXcolorgray
2318 793 1264 88 v 0 TeXcolorgray 90 w(Can)m(v)n(as.repaint)p
0.975 TeXcolorgray 3582 793 501 88 v 0 TeXcolorgray 1
TeXcolorgray 2040 881 279 88 v 0 TeXcolorgray 2236 854
a(6)p 1 TeXcolorgray 2318 881 1264 88 v 0 TeXcolorgray
90 w(Can)m(v)n(as.serviceRepaints)p 1 TeXcolorgray 3582
881 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 968
279 88 v 0 TeXcolorgray 2236 942 a(7)p 0.975 TeXcolorgray
2318 968 1264 88 v 0 TeXcolorgray 90 w(Can)m(v)n(as.setFullScreenMode)p
0.975 TeXcolorgray 3582 968 501 88 v 0 TeXcolorgray 1
TeXcolorgray 2040 1055 279 88 v 0 TeXcolorgray 2236 1029
a(8)p 1 TeXcolorgray 2318 1055 1264 88 v 0 TeXcolorgray
90 w(Command.getCommandT)g(ype)p 1 TeXcolorgray 3582
1055 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040
1142 279 88 v 0 TeXcolorgray 2236 1116 a(9)p 0.975 TeXcolorgray
2318 1142 1264 88 v 0 TeXcolorgray 90 w(Command.getLabel)p
0.975 TeXcolorgray 3582 1142 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 1229 279 88 v 0 TeXcolorgray 2199
1203 a(10)p 1 TeXcolorgray 2318 1229 1264 88 v 0 TeXcolorgray
90 w(Display)h(.getCurrent)p 1 TeXcolorgray 3582 1229
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 1316
279 88 v 0 TeXcolorgray 2199 1290 a(11)p 0.975 TeXcolorgray
2318 1316 1264 88 v 0 TeXcolorgray 90 w(Display)g(.getDisplay)p
0.975 TeXcolorgray 3582 1316 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 1404 279 88 v 0 TeXcolorgray 2199
1377 a(12)p 1 TeXcolorgray 2318 1404 1264 88 v 0 TeXcolorgray
90 w(Display)g(.setCurrent)p 1 TeXcolorgray 3582 1404
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 1491
279 88 v 0 TeXcolorgray 2199 1465 a(13)p 0.975 TeXcolorgray
2318 1491 1264 88 v 0 TeXcolorgray 90 w(Displayable.addCommand)p
0.975 TeXcolorgray 3582 1491 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 1578 279 88 v 0 TeXcolorgray 2199
1552 a(14)p 1 TeXcolorgray 2318 1578 1264 88 v 0 TeXcolorgray
90 w(Displayable.getHeight)p 1 TeXcolorgray 3582 1578
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 1665
279 88 v 0 TeXcolorgray 2199 1639 a(15)p 0.975 TeXcolorgray
2318 1665 1264 88 v 0 TeXcolorgray 90 w(Displayable.getW)m(idth)p
0.975 TeXcolorgray 3582 1665 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 1752 279 88 v 0 TeXcolorgray 2199
1726 a(16)p 1 TeXcolorgray 2318 1752 1264 88 v 0 TeXcolorgray
90 w(Displayable.remo)o(v)o(eCommand)p 1 TeXcolorgray
3582 1752 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray
2040 1839 279 88 v 0 TeXcolorgray 2199 1813 a(17)p 0.975
TeXcolorgray 2318 1839 1264 88 v 0 TeXcolorgray 90 w(F)o(ont.charW)m
(idth)p 0.975 TeXcolorgray 3582 1839 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 1927 279 88 v 0 TeXcolorgray 2199
1900 a(18)p 1 TeXcolorgray 2318 1927 1264 88 v 0 TeXcolorgray
90 w(F)o(ont.getHeight)p 1 TeXcolorgray 3582 1927 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 2014 279
88 v 0 TeXcolorgray 2199 1988 a(19)p 0.975 TeXcolorgray
2318 2014 1264 88 v 0 TeXcolorgray 90 w(F)o(ont.stringW)m(idth)p
0.975 TeXcolorgray 3582 2014 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 2101 279 88 v 0 TeXcolorgray 2199
2075 a(20)p 1 TeXcolorgray 2318 2101 1264 88 v 0 TeXcolorgray
90 w(F)o(orm.addCommand)p 1 TeXcolorgray 3582 2101 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 2188 279
88 v 0 TeXcolorgray 2199 2162 a(21)p 0.975 TeXcolorgray
2318 2188 1264 88 v 0 TeXcolorgray 90 w(F)o(orm.setCommandListener)p
0.975 TeXcolorgray 3582 2188 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 2275 279 88 v 0 TeXcolorgray 2199
2249 a(22)p 1 TeXcolorgray 2318 2275 1264 88 v 0 TeXcolorgray
90 w(game.GameCan)m(v)n(as.getHeight)p 1 TeXcolorgray
3582 2275 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray
2040 2362 279 88 v 0 TeXcolorgray 2199 2336 a(23)p 0.975
TeXcolorgray 2318 2362 1264 88 v 0 TeXcolorgray 90 w(game.GameCan)m(v)n
(as.getW)m(idth)p 0.975 TeXcolorgray 3582 2362 501 88
v 0 TeXcolorgray 1 TeXcolorgray 2040 2450 279 88 v 0
TeXcolorgray 2199 2423 a(24)p 1 TeXcolorgray 2318 2450
1264 88 v 0 TeXcolorgray 90 w(game.GameCan)m(v)n(as.repaint)p
1 TeXcolorgray 3582 2450 501 88 v 0 TeXcolorgray 0.975
TeXcolorgray 2040 2537 279 88 v 0 TeXcolorgray 2199 2511
a(25)p 0.975 TeXcolorgray 2318 2537 1264 88 v 0 TeXcolorgray
90 w(game.GameCan)m(v)n(as.serviceRepaints)p 0.975 TeXcolorgray
3582 2537 501 88 v 0 TeXcolorgray 1 TeXcolorgray 2040
2624 279 88 v 0 TeXcolorgray 2199 2598 a(26)p 1 TeXcolorgray
2318 2624 1264 88 v 0 TeXcolorgray 90 w(game.GameCan)m(v)n
(as.setFullScreenMode)p 1 TeXcolorgray 3582 2624 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 2711 279
88 v 0 TeXcolorgray 2199 2685 a(27)p 0.975 TeXcolorgray
2318 2711 1264 88 v 0 TeXcolorgray 90 w(game.Layer)l(.getHeight)p
0.975 TeXcolorgray 3582 2711 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 2798 279 88 v 0 TeXcolorgray 2199
2772 a(28)p 1 TeXcolorgray 2318 2798 1264 88 v 0 TeXcolorgray
90 w(game.Layer)l(.getW)m(idth)p 1 TeXcolorgray 3582
2798 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040
2885 279 88 v 0 TeXcolorgray 2199 2859 a(29)p 0.975 TeXcolorgray
2318 2885 1264 88 v 0 TeXcolorgray 90 w(game.Layer)l(.setPostion)p
0.975 TeXcolorgray 3582 2885 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 2973 279 88 v 0 TeXcolorgray 2199
2947 a(30)p 1 TeXcolorgray 2318 2973 1264 88 v 0 TeXcolorgray
90 w(game.Sprite.paint)p 1 TeXcolorgray 3582 2973 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 3060 279
88 v 0 TeXcolorgray 2199 3034 a(31)p 0.975 TeXcolorgray
2318 3060 1264 88 v 0 TeXcolorgray 90 w(game.Sprite.setFrame)p
0.975 TeXcolorgray 3582 3060 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 3147 279 88 v 0 TeXcolorgray 2199
3121 a(32)p 1 TeXcolorgray 2318 3147 1264 88 v 0 TeXcolorgray
90 w(game.Sprite.setPosition)p 1 TeXcolorgray 3582 3147
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 3234
279 88 v 0 TeXcolorgray 2199 3208 a(33)p 0.975 TeXcolorgray
2318 3234 1264 88 v 0 TeXcolorgray 90 w(game.Sprite.setRefPix)o
(elPosition)p 0.975 TeXcolorgray 3582 3234 501 88 v 0
TeXcolorgray 1 TeXcolorgray 2040 3321 279 88 v 0 TeXcolorgray
2199 3295 a(34)p 1 TeXcolorgray 2318 3321 1264 88 v 0
TeXcolorgray 90 w(Graphics.clipRect)p 1 TeXcolorgray
3582 3321 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray
2040 3409 279 88 v 0 TeXcolorgray 2199 3382 a(35)p 0.975
TeXcolorgray 2318 3409 1264 88 v 0 TeXcolorgray 90 w(Graphics.dra)o
(wArc)p 0.975 TeXcolorgray 3582 3409 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 3496 279 88 v 0 TeXcolorgray 2199
3470 a(36)p 1 TeXcolorgray 2318 3496 1264 88 v 0 TeXcolorgray
90 w(Graphics.dra)o(wChar)p 1 TeXcolorgray 3582 3496
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 3583
279 88 v 0 TeXcolorgray 2199 3557 a(37)p 0.975 TeXcolorgray
2318 3583 1264 88 v 0 TeXcolorgray 90 w(Graphics.dra)o(wImage)p
0.975 TeXcolorgray 3582 3583 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 3670 279 88 v 0 TeXcolorgray 2199
3644 a(38)p 1 TeXcolorgray 2318 3670 1264 88 v 0 TeXcolorgray
90 w(Graphics.dra)o(wLine)p 1 TeXcolorgray 3582 3670
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 3757
279 88 v 0 TeXcolorgray 2199 3731 a(39)p 0.975 TeXcolorgray
2318 3757 1264 88 v 0 TeXcolorgray 90 w(Graphics.dra)o(wRect)p
0.975 TeXcolorgray 3582 3757 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 3844 279 88 v 0 TeXcolorgray 2199
3818 a(40)p 1 TeXcolorgray 2318 3844 1264 88 v 0 TeXcolorgray
90 w(Graphics.dra)o(wString)p 1 TeXcolorgray 3582 3844
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 3932
279 88 v 0 TeXcolorgray 2199 3905 a(41)p 0.975 TeXcolorgray
2318 3932 1264 88 v 0 TeXcolorgray 90 w(Graphics.\002llArc)p
0.975 TeXcolorgray 3582 3932 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 4019 279 88 v 0 TeXcolorgray 2199
3993 a(42)p 1 TeXcolorgray 2318 4019 1264 88 v 0 TeXcolorgray
90 w(Graphics.\002llRect)p 1 TeXcolorgray 3582 4019 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 4106 279
88 v 0 TeXcolorgray 2199 4080 a(43)p 0.975 TeXcolorgray
2318 4106 1264 88 v 0 TeXcolorgray 90 w(Graphics.\002llRoundRect)p
0.975 TeXcolorgray 3582 4106 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 4193 279 88 v 0 TeXcolorgray 2199
4167 a(44)p 1 TeXcolorgray 2318 4193 1264 88 v 0 TeXcolorgray
90 w(Graphics.\002llT)m(riangle)p 1 TeXcolorgray 3582
4193 501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040
4280 279 88 v 0 TeXcolorgray 2199 4254 a(45)p 0.975 TeXcolorgray
2318 4280 1264 88 v 0 TeXcolorgray 90 w(Graphics.getClipHeight)p
0.975 TeXcolorgray 3582 4280 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 4367 279 88 v 0 TeXcolorgray 2199
4341 a(46)p 1 TeXcolorgray 2318 4367 1264 88 v 0 TeXcolorgray
90 w(Graphics.getClipW)m(idth)p 1 TeXcolorgray 3582 4367
501 88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 4455
279 88 v 0 TeXcolorgray 2199 4428 a(47)p 0.975 TeXcolorgray
2318 4455 1264 88 v 0 TeXcolorgray 90 w(Graphics.getClipX)p
0.975 TeXcolorgray 3582 4455 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 4542 279 88 v 0 TeXcolorgray 2199
4516 a(48)p 1 TeXcolorgray 2318 4542 1264 88 v 0 TeXcolorgray
90 w(Graphics.getClipY)p 1 TeXcolorgray 3582 4542 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 4629 279
88 v 0 TeXcolorgray 2199 4603 a(49)p 0.975 TeXcolorgray
2318 4629 1264 88 v 0 TeXcolorgray 90 w(Graphics.setClip)p
0.975 TeXcolorgray 3582 4629 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 4716 279 88 v 0 TeXcolorgray 2199
4690 a(50)p 1 TeXcolorgray 2318 4716 1264 88 v 0 TeXcolorgray
90 w(Graphics.setColor)p 1 TeXcolorgray 3582 4716 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 4803 279
88 v 0 TeXcolorgray 2199 4777 a(51)p 0.975 TeXcolorgray
2318 4803 1264 88 v 0 TeXcolorgray 90 w(Graphics.setF)o(ont)p
0.975 TeXcolorgray 3582 4803 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 4890 279 88 v 0 TeXcolorgray 2199
4864 a(52)p 1 TeXcolorgray 2318 4890 1264 88 v 0 TeXcolorgray
90 w(Image.createImage)p 1 TeXcolorgray 3582 4890 501
88 v 0 TeXcolorgray 0.975 TeXcolorgray 2040 4978 279
88 v 0 TeXcolorgray 2199 4951 a(53)p 0.975 TeXcolorgray
2318 4978 1264 88 v 0 TeXcolorgray 90 w(Image.getGraphics)p
0.975 TeXcolorgray 3582 4978 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 5065 279 88 v 0 TeXcolorgray 2199
5039 a(54)p 1 TeXcolorgray 2318 5065 1264 88 v 0 TeXcolorgray
90 w(Image.getHeight)p 1 TeXcolorgray 3582 5065 501 88
v 0 TeXcolorgray 0.975 TeXcolorgray 2040 5152 279 88
v 0 TeXcolorgray 2199 5126 a(55)p 0.975 TeXcolorgray
2318 5152 1264 88 v 0 TeXcolorgray 90 w(Image.getW)m(idth)p
0.975 TeXcolorgray 3582 5152 501 88 v 0 TeXcolorgray
1 TeXcolorgray 2040 5165 2043 13 v 0 TeXcolorgray 0 TeXcolorgray
2040 5171 2043 7 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -152 -69 a Fp(Furthermore,)19 b(consider)h(the)f
(\002rst-mapping)-152 106 y Fl(Alert.setString)38 b(Paint.setAlpha;)g
(CompundButton.setChecked)-152 280 y Fp(None)20 b(of)g(the)g(mapped)h
(methods)f(set)g(te)o(xt)f(in)g(the)h(alert.)25 b(Ho)n(w)19
b(to)h(interpret)-152 367 y(the)f(mapping)i(in)d(such)i(cases?)-152
542 y(Amruta')l(s)f(Response)h(:)-152 716 y(First,)14
b(a)h(note)g(of)g(clari\002cation.)21 b(As)15 b(e)o(xplained)h(in)e
(the)h(paper)m(,)h(we)f(restricted)-152 803 y(ourselv)o(es)23
b(to)f(sequences)i(of)e(length)g(up)h(to)e(2)i(when)f(inferring)g
(mappings)-152 890 y(\(i.e.,)k(A->p;q,)h(or)e(A->p\).)42
b(So)25 b(this)g(might)g(mean)h(that)f(p-q)h(only)g(imple-)-152
977 y(ments)17 b(some)h(of)e(the)h(functionality)h(of)e(A)h(on)g(the)g
(tar)o(get)f(platform,)h(and)h(we)-152 1065 y(still)g(count)i(this)f
(as)f(a)h(v)n(alid)h(mapping.)-152 1239 y(W)m(ith)27
b(that)g(said,)i(let)d(me)h(answer)h(your)g(questions:)40
b(Let')l(s)27 b(consider)h(the)-152 1326 y(mapping:)23
b("Alert.setString)13 b(->)h(P)o(aint.setAlpha;)i
(CompundButton.setCheck)o(ed".)-152 1413 y(In)f(man)o(y)h(of)f(our)g
(traces,)g(we)g(observ)o(ed)h(that)f(setting)g(a)g(string)f(\002rst)g
(in)m(v)o(olv)o(es)-152 1500 y(setting)j(the)g(attrib)o(utes)g(of)g
(the)g(paint)g(\(with)f(is)h(used)g(to)g(dra)o(w)g(the)g(te)o(xt\),)g
(fol-)-152 1588 y(lo)n(wed)22 b(by)f(a)f(call)h(to)f(setT)-5
b(e)o(xt)21 b(method,)g(which)g(led)g(us)g(to)g(belie)n(v)o(e)g(that)g
(the)-152 1675 y(sequence)27 b("P)o(aint.setAlpha;)h
(CompundButton.setCheck)o(ed")h(could)d(be)-152 1762
y(a)21 b(lik)o(ely)f(mapping,)i(if)e(at)g(least)g(in)h(part.)27
b(The)20 b(same)h(reasoning)h(applies)f(to)-152 1849
y(mappings)g(of)e(the)f(other)i(tw)o(o)f(methods)h(in)e(your)i(list.)
-152 2023 y(T)-5 b(echnically)g(,)18 b(you')l(re)h(right)e(that)g
("Alert")h(related)g(methods)g(w)o(ould)g(be)g(im-)-152
2111 y(plemented)33 b(using)e(methods)i(of)e(the)g("AlertDialog")h
(class.)60 b(Ho)n(we)n(v)o(er)m(,)-152 2198 y("Alert")28
b(is)f(used)i(to)e(display)i(messages,)h(and)e(we)g(considered)h
(Android)-152 2285 y(methods/sequences)24 b(that)e(could)g(also)g(be)f
(used)i(to)e(display)h(messages)h(as)-152 2372 y(v)n(alid)18
b(mappings.)24 b(These)18 b(methods/sequences)j(may)d(not)g(strictly)f
(be)h(con-)-152 2459 y(sidered)h("AlertDialogs")f(in)f(the)h(Android)h
(sense,)f(b)o(ut)f(can)h(still)f(be)h(part)g(of)-152
2547 y(rendering)i(a)f(te)o(xt)g(message)h(on)f(the)g(screen.)-152
2758 y Fo(7.)100 b(DISCUSSION)24 b(AND)h(FUTURE)h(W)o(ORK)-152
2850 y Fp(W)-6 b(e)24 b(ne)o(xt)h(describe)h(the)f(limitations)f(and)h
(future)g(w)o(ork)g(of)i Fn(S)t Fp(M)t(A)t(M)r(,)d(fol-)-152
2937 y(lo)n(wed)c(by)f(discussions)h(on)g(threats)f(to)f(v)n(alidity)-5
b(.)-152 3111 y(A)27 b(k)o(e)o(y)h(limitation)e(of)h(the)g(presented)h
(w)o(ork)f(is)g(reliance)g(on)g(the)g(human)-152 3198
y(de)n(v)o(eloper)32 b(to)e(con\002rm)h(or)f(refute)h(mappings.)58
b(In)31 b(future,)i(we)d(plan)h(to)-152 3285 y(e)o(xtend)19
b(the)i Fn(S)t Fp(M)t(A)t(M)e(infrastructure)g(to)f(achie)n(v)o(e)h(an)
f(end-to-end)i(automa-)-152 3373 y(tion.)i(P)o(articularly)-5
b(,)15 b(we)f(plan)i(on)f(using)g(the)g(program)h(analysis)f
(techniques)-152 3460 y(such)20 b(as)f(type-analysis)h(proposed)g(in)f
(e)o(xisting)g(approaches)i([17,)10 b(30].)-152 3634
y(Sometimes)20 b(the)g(functionality)h(achie)n(v)o(ed)h(by)e(a)g
(method)h(call)f(in)g(a)g(source)-152 3721 y(API,)j(is)g(achie)n(v)o
(ed)i(by)g(a)e(sequence)j(of)d(method)i(calls)e(in)h(the)g(destination)
-152 3808 y(API)17 b(and)i(vice)f(v)o(ersa.)23 b(Although)e
Fn(S)t Fp(M)t(A)t(M)f(may)e(return)h(indi)n(vidual)g(meth-)-152
3896 y(ods)33 b(as)f(rele)n(v)n(ant,)37 b Fn(S)t Fp(M)t(A)t(M)d(does)e
(not)h(pro)o(vide)f(e)o(xplicit)g(sequences)i(of)-152
3983 y(method)24 b(calls)e(as)g(rele)n(v)n(ant)h(suggestions.)35
b(In)22 b(future,)h(we)g(plan)g(to)f(e)o(xtend)-152 4070
y(the)e(current)f(te)o(xt)g(mining)h(infrastructure)f(to)h(pro)o(vide)g
(method)g(sequences)-152 4157 y(as)j(rele)n(v)n(ant)h(suggestions)h
(when)e(applicable.)36 b(In)24 b(particular)m(,)f(we)g(plan)h(to)-152
4244 y(le)n(v)o(erage)18 b(the)g(NLP)e(techniques)i(such)g(as)g
(speci\002cation)f(inference)h([19])g(to)-152 4332 y(identify)h(method)
h(sequences.)-152 4506 y(From)15 b(an)h(implementation)g(perspecti)n(v)
o(e,)j Fn(S)t Fp(M)t(A)t(M)e(does)f(not)f(tak)o(e)h(into)g(ac-)-152
4593 y(count)k(the)f(API)f(\002elds.)23 b(This)18 b(limits)i
Fn(S)t Fp(M)t(A)t(M)r(s)e(ability)h(in)g(reporting)g(map-)-152
4680 y(pings)g(in)m(v)o(olving)f(API)f(\002elds.)23 b(F)o(or)17
b(instance,)h(the)g(functionality)g(achie)n(v)o(ed)-152
4767 y(by)23 b(a)g(method)g(call)f(in)h(a)f(source)i(API)d(may)i(be)g
(achie)n(v)o(ed)h(by)f(accessing)h(a)-152 4855 y(API)i(\002eld)h(in)f
(destination)i(API.)e(Ho)n(we)n(v)o(er)m(,)j(this)d(is)h(a)f
(limitation)h(of)g(the)-152 4942 y(current)21 b(implementation)f(and)h
(in)e(future)h(iterations)g(of)i Fn(S)t Fp(M)t(A)t(M)f(we)f(plan)-152
5029 y(to)f(include)h(API)e(\002elds)g(in)h(the)g(inde)o(x)o(es.)-152
5203 y(Finally)-5 b(,)27 b Fn(S)t Fp(M)t(A)t(M)g(operates)e(under)g
(the)f(assumption)i(of)e(the)h(a)o(v)n(ailability)-152
5290 y(of)20 b(the)f(API)f(documents.)26 b(Thus)21 b
Fn(S)t Fp(M)t(A)t(M)g(is)e(not)g(applicable)h(in)f(situations)-152
5378 y(where)e(API)f(documents)j(are)d(lo)n(w)h(quality)g(or)g(are)g
(una)o(v)n(ailable)g(altogether)l(.)p 0 TeXcolorgray
0 TeXcolorgray 2040 -69 a(In)23 b(future,)h(we)f(plan)g(to)g(e)o(xtend)
j Fn(S)t Fp(M)t(A)t(M)e(infrastructure)f(to)g(w)o(orkaround)2040
19 y(such)33 b(situations)f(by)h(inte)o(grating)g(with)e(e)o(xisting)i
(source)g(code)g(mining)2040 106 y(based)21 b(approaches.)26
b(Speci\002cally)19 b(we)h(plan)g(to)f(le)n(v)o(erage)h(techniques)h
(lik)o(e)2040 193 y(code)f(summarisation)g([24])f(and)g(IR)g(based)g
(approaches)i(lik)o(e)e(Exoa)h([11].)2040 412 y Fo(7.1)99
b(Thr)n(eats)26 b(to)f(V)-9 b(alidity)2040 503 y Fp(The)22
b(primary)h(threat)f(to)g(e)o(xternal)g(v)n(alidity)h(is)e(the)i
(representati)n(v)o(eness)g(of)2040 590 y(our)k(e)o(xperimental)f
(subjects)h(to)f(the)g(real)g(w)o(orld)h(softw)o(are.)45
b(T)-6 b(o)26 b(address)2040 678 y(this)f(threat)g(we)h(chose)g(real)f
(w)o(orld)h(API)e(pairs:)37 b(1\))25 b(J2ME)h(and)g(Android)2040
765 y(APIs)20 b(are)g(tw)o(o)h(ja)o(v)n(a)f(based)h(platforms)g(to)f
(de)n(v)o(elop)i(mobile)f(applications;)2040 852 y(2\))g(Ja)o(v)n(a)f
(and)i(C#)e(APIs)g(are)g(the)h(top)g(object-oriented)g(programming)h
(lan-)2040 939 y(guage)j(APIs)e(used)h(for)f(generic)i(application)f
(de)n(v)o(elopment.)39 b(The)23 b(threat)2040 1026 y(can)16
b(be)g(further)g(minimized)g(by)h(e)n(v)n(aluating)i
Fn(S)t Fp(M)t(A)t(M)e(on)f(more)g(APIs)f(from)2040 1113
y(dif)n(ferent)k(domains.)2040 1288 y(Our)26 b(chief)g(threat)g(to)g
(internal)g(v)n(alidity)g(is)g(the)g(accurac)o(y)h(of)h
Fn(S)t Fp(M)t(A)t(M)f(in)2040 1375 y(identifying)f(API)e(mappings.)43
b(T)-6 b(o)25 b(minimize)g(this)g(threat)g(we)g(compared)2040
1462 y(the)f(mappings)h(inferred)f(by)i Fn(S)t Fp(M)t(A)t(M)f(with)e
(the)h(mappings)h(pro)o(vided)g(by)2040 1549 y(pre)n(vious)d
(approaches.)30 b(W)-6 b(e)20 b(thank)i(Gokhale)f(et)f(al.)g([6])h(for)
f(sharing)i(with)2040 1636 y(us)15 b(the)g(J2ME)h(and)f(Android)h(API)e
(mappings)j(inferred)e(by)g(their)g(approach.)2040 1724
y(W)-6 b(e)22 b(also)h(thank)g(Nguyen)h(et)e(al.)g([17])h(for)f(making)
i(their)e(mappings)i(pub-)2040 1811 y(licly)e(a)o(v)n(ailable.)34
b(Furthermore,)24 b(\002rst)d(tw)o(o)i(did)g(manually)g(identify)g
(some)2040 1898 y(of)33 b(the)g(mappings)h(that)e(could)i(not)f(be)g
(compared)h(to)e(pre)n(vious)i(w)o(ork.)2040 1985 y(Thus,)26
b(human)h(errors)e(may)g(af)n(fect)g(our)g(results.)41
b(T)-6 b(o)25 b(minimized)h(the)f(ef-)2040 2072 y(fect,)19
b(\002rst)f(tw)o(o)h(authors)h(randomly)g(sampled)g(and)f(inspected)h
(each)g(others)2040 2159 y(w)o(ork.)2040 2378 y Fo(8.)99
b(CONCLUSION)2040 2470 y Fp(API)19 b(mapping)h(across)g(dif)n(ferent)g
(platforms/languages)h(mappings)g(f)o(acil-)2040 2557
y(itate)k(machine-based)j(migration)e(of)f(an)h(application)h(from)e
(one)i(API)d(to)2040 2644 y(another)l(.)k(Thus)21 b(automated)h
(inference)f(of)f(such)h(mappings)h(is)e(highly)h(de-)2040
2731 y(sirable.)53 b(In)29 b(this)f(paper)m(,)k(we)d(presented)j
Fn(S)t Fp(M)t(A)t(M)r(:)c(a)h(lightweight)g(te)o(xt-)2040
2818 y(mining)f(based)h(approach)g(to)e(infer)h(API)e(mappings.)53
b Fn(S)t Fp(M)t(A)t(M)29 b(compli-)2040 2906 y(ments)18
b(e)o(xisting)h(mapping)g(inference)g(techniques)g(by)g(le)n(v)o
(eraging)g(natural)2040 2993 y(language)25 b(descriptions)e(in)g(API)f
(documents)j(instead)e(of)g(relying)h(on)f(e)o(x-)2040
3080 y(istence)k(of)g(manually)h(ported)g(\(or)f(at)g(least)f
(functionally)i(similar\))f(code)2040 3167 y(across)21
b(source)g(and)g(tar)o(get)f(API')l(s.)26 b(W)-6 b(e)20
b(demonstrated)i(the)e(ef)n(fecti)n(v)o(eness)2040 3254
y(of)25 b Fn(S)t Fp(M)t(A)t(M)g(by)f(comparing)h(the)e(inferred)h
(mappings)h(with)d(state-of-the-)2040 3341 y(art)15 b(code)h(mining)f
(based)i(approaches.)23 b(Our)15 b(results)g(indicate)h(that)h
Fn(S)t Fp(M)t(A)t(M)2040 3429 y(is)g(ef)n(fecti)n(v)o(e)g(in)h
(inferring)f(API)g(mappings)h(\(from)f(o)o(v)o(er)h(human-annotated)
2040 3516 y(API)g(sentences\))i(with)f(the)g(more)g(than)g(XX)g
(accurac)o(y)-5 b(.)2040 3735 y Fo(9.)99 b(A)-5 b(CKNO)g(WLEDGMENTS)
2040 3826 y Fp(This)15 b(w)o(ork)h(is)e(supported)j(by)f(xx.)22
b(An)o(y)15 b(opinions)i(e)o(xpressed)f(in)f(this)g(report)2040
3913 y(are)i(those)g(of)g(the)f(author\(s\))i(and)f(do)g(not)g
(necessarily)h(re\003ect)e(the)g(vie)n(ws)h(of)2040 4000
y(XX.)h(Finally)-5 b(,)19 b(we)f(thank)i(the)f(Realsearch)h(research)f
(group)h(for)f(pro)o(viding)2040 4088 y(helpful)g(feedback)i(on)e(this)
g(w)o(ork.)2040 4307 y Fo(10.)99 b(REFERENCES)p 0 TeXcolorgray
2077 4394 a Fp([1])p 0 TeXcolorgray 38 w(D.)18 b(M.)h(Blei,)f(A.)g(Y)
-10 b(.)19 b(Ng,)g(and)g(M.)g(I.)f(Jordan.)i(Latent)e(dirichlet)2202
4481 y(allocation.)h Fm(the)g(J)n(ournal)h(of)f(mac)o(hine)h(Learning)f
(r)m(esear)m(c)o(h)p Fp(,)2202 4568 y(3:993\2261022,)i(2003.)p
0 TeXcolorgray 2077 4664 a([2])p 0 TeXcolorgray 38 w(S.)d(Chatterjee,)g
(S.)g(Juv)o(ekar)m(,)i(and)f(K.)g(Sen.)f(Snif)n(f:)23
b(A)18 b(search)i(engine)2202 4751 y(for)e(ja)o(v)n(a)g(using)h
(free-form)g(queries.)f(In)h Fm(Fundamental)g(Appr)m(oac)o(hes)2202
4838 y(to)g(Softwar)m(e)g(Engineering)p Fp(,)h(pages)g(385\226400.)h
(Springer)m(,)e(2009.)p 0 TeXcolorgray 2077 4933 a([3])p
0 TeXcolorgray 38 w(U.)f(Dek)o(el)i(and)f(J.)g(D.)f(Herbsleb)m(.)h
(Impro)o(ving)h(API)e(Documentation)2202 5021 y(Usability)h(with)f(Kno)
n(wledge)i(Pushing.)g(In)f Fm(Pr)m(oc.)f(31st)h(ICSE)p
Fp(,)2202 5108 y(pages)h(320\226330,)h(2009.)p 0 TeXcolorgray
2077 5203 a([4])p 0 TeXcolorgray 38 w(M.)e(El-Ramly)-5
b(,)18 b(R.)g(Eltayeb,)h(and)g(H.)g(Alla.)f(An)h(e)o(xperiment)g(in)
2202 5290 y(automatic)g(con)m(v)o(ersion)i(of)e(le)o(gac)o(y)g(Ja)o(v)n
(a)g(programs)h(to)f(C#.)f(In)2202 5378 y Fm(Pr)m(oc.)g(IEEE)g(CSA)p
Fp(,)g(pages)i(1037\2261045,)h(2006.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1310 236 a Fk(T)-7 b(able)19
b(5:)k(Comparison)c(with)f(T)o(ien)g(Nyugen)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -58 267 3980 8 v 0 TeXcolorgray
0.925 TeXcolorgray -58 288 3980 21 v 0 TeXcolorgray 0.925
TeXcolorgray -59 375 260 88 v 0 TeXcolorgray -14 349
a Fp(S.No.)p 0.925 TeXcolorgray 201 375 1382 88 v 0 TeXcolorgray
89 w(Source)h(Class)p 0.925 TeXcolorgray 1582 375 1742
88 v 0 TeXcolorgray 993 w(T)-6 b(ar)o(get)19 b(Class)p
0.925 TeXcolorgray 3324 375 597 88 v 0 TeXcolorgray 1375
w Fn(S)t Fp(M)t(A)t(M)i(Ranking)p 0.925 TeXcolorgray
-58 388 3980 13 v 0 TeXcolorgray 0 TeXcolorgray -58 392
3980 4 v 0 TeXcolorgray 1 TeXcolorgray -58 413 3980 21
v 0 TeXcolorgray 1 TeXcolorgray -59 500 260 88 v 0 TeXcolorgray
119 474 a(1)p 1 TeXcolorgray 201 500 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.concurrent.atomic.AtomicBoolean)p
1 TeXcolorgray 1582 500 1742 88 v 0 TeXcolorgray 1 TeXcolorgray
3324 500 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59
587 260 88 v 0 TeXcolorgray 119 561 a(2)p 0.975 TeXcolorgray
201 587 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.jar)l
(.JarInputStream)p 0.975 TeXcolorgray 1582 587 1742 88
v 0 TeXcolorgray 0.975 TeXcolorgray 3324 587 597 88 v
0 TeXcolorgray 1 TeXcolorgray -59 674 260 88 v 0 TeXcolorgray
119 648 a(3)p 1 TeXcolorgray 201 674 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.jar)l(.Attrib)o(utes)p 1 TeXcolorgray
1582 674 1742 88 v 0 TeXcolorgray 1 TeXcolorgray 3324
674 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 761
260 88 v 0 TeXcolorgray 119 735 a(4)p 0.975 TeXcolorgray
201 761 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.jar)l(.Manifest)p
0.975 TeXcolorgray 1582 761 1742 88 v 0 TeXcolorgray
0.975 TeXcolorgray 3324 761 597 88 v 0 TeXcolorgray 1
TeXcolorgray -59 849 260 88 v 0 TeXcolorgray 119 823
a(5)p 1 TeXcolorgray 201 849 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Link)o(edHashMap)p 1 TeXcolorgray
1582 849 1742 88 v 0 TeXcolorgray 623 w(System.Collections.Hashtable)p
1 TeXcolorgray 3324 849 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 936 260 88 v 0 TeXcolorgray 119 910
a(6)p 0.975 TeXcolorgray 201 936 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.AbstractCollection)p 0.975 TeXcolorgray
1582 936 1742 88 v 0 TeXcolorgray 558 w(System.Collections.ICollection)
p 0.975 TeXcolorgray 3324 936 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 1023 260 88 v 0 TeXcolorgray 119 997
a(7)p 1 TeXcolorgray 201 1023 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Date)p 1 TeXcolorgray 1582 1023
1742 88 v 0 TeXcolorgray 981 w(System.DateT)m(ime)p 1
TeXcolorgray 3324 1023 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 1110 260 88 v 0 TeXcolorgray 119 1084
a(8)p 0.975 TeXcolorgray 201 1110 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.HashSet)p 0.975 TeXcolorgray 1582
1110 1742 88 v 0 TeXcolorgray 873 w
(ILOG.J2CsMapping.Collections.HashedSet)p 0.975 TeXcolorgray
3324 1110 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
1197 260 88 v 0 TeXcolorgray 119 1171 a(9)p 1 TeXcolorgray
201 1197 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.SortedSet)p
1 TeXcolorgray 1582 1197 1742 88 v 0 TeXcolorgray 831
w(ILOG.J2CsMapping.Collections.SortedSet)p 1 TeXcolorgray
3324 1197 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 1285 260 88 v 0 TeXcolorgray 82 1258 a(10)p 0.975
TeXcolorgray 201 1285 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.Set)p 0.975 TeXcolorgray 1582 1285 1742 88 v
0 TeXcolorgray 1026 w(ILOG.J2CsMapping.Collections.ISet)p
0.975 TeXcolorgray 3324 1285 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 1372 260 88 v 0 TeXcolorgray 82 1346
a(11)p 1 TeXcolorgray 201 1372 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.T)m(reeSet)p 1 TeXcolorgray 1582
1372 1742 88 v 0 TeXcolorgray 892 w
(ILOG.J2CsMapping.Collections.SortedSet)p 1 TeXcolorgray
3324 1372 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 1459 260 88 v 0 TeXcolorgray 82 1433 a(12)p 0.975
TeXcolorgray 201 1459 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.BitSet)p 0.975 TeXcolorgray 1582 1459 1742 88
v 0 TeXcolorgray 934 w(ILOG.J2CsMapping.Collections.BitSet)p
0.975 TeXcolorgray 3324 1459 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 1546 260 88 v 0 TeXcolorgray 82 1520
a(13)p 1 TeXcolorgray 201 1546 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Hashtable)p 1 TeXcolorgray 1582
1546 1742 88 v 0 TeXcolorgray 824 w(System.Collections.Hashtable)p
1 TeXcolorgray 3324 1546 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 1633 260 88 v 0 TeXcolorgray 82 1607
a(14)p 0.975 TeXcolorgray 201 1633 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.T)m(reeMap)p 0.975 TeXcolorgray
1582 1633 1742 88 v 0 TeXcolorgray 852 w(System.Collections.SortedList)
p 0.975 TeXcolorgray 3324 1633 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 1720 260 88 v 0 TeXcolorgray 82 1694
a(15)p 1 TeXcolorgray 201 1720 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.SortedMap)p 1 TeXcolorgray 1582
1720 1742 88 v 0 TeXcolorgray 791 w(System.Collections.SortedList)p
1 TeXcolorgray 3324 1720 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 1808 260 88 v 0 TeXcolorgray 82 1781
a(16)p 0.975 TeXcolorgray 201 1808 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Iterator)p 0.975 TeXcolorgray 1582
1808 1742 88 v 0 TeXcolorgray 902 w
(ILOG.J2CsMapping.Collections.IIterator)p 0.975 TeXcolorgray
3324 1808 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
1895 260 88 v 0 TeXcolorgray 82 1869 a(17)p 1 TeXcolorgray
201 1895 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.IdentityHashMap)
p 1 TeXcolorgray 1582 1895 1742 88 v 0 TeXcolorgray 601
w(System.Collections.Hashtable)p 1 TeXcolorgray 3324
1895 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 1982
260 88 v 0 TeXcolorgray 82 1956 a(18)p 0.975 TeXcolorgray
201 1982 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.V)-8
b(ector)p 0.975 TeXcolorgray 1582 1982 1742 88 v 0 TeXcolorgray
927 w(System.Collections.ArrayList)p 0.975 TeXcolorgray
3324 1982 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
2069 260 88 v 0 TeXcolorgray 82 2043 a(19)p 1 TeXcolorgray
201 2069 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.W)i(eakHashMap)p
1 TeXcolorgray 1582 2069 1742 88 v 0 TeXcolorgray 665
w(System.Collections.Hashtable)p 1 TeXcolorgray 3324
2069 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 2156
260 88 v 0 TeXcolorgray 82 2130 a(20)p 0.975 TeXcolorgray
201 2156 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.StringT)g(ok)o
(enizer)p 0.975 TeXcolorgray 1582 2156 1742 88 v 0 TeXcolorgray
644 w(ILOG.J2CsMapping.Util.StringT)g(ok)o(enizer)p 0.975
TeXcolorgray 3324 2156 597 88 v 0 TeXcolorgray 1 TeXcolorgray
-59 2243 260 88 v 0 TeXcolorgray 82 2217 a(21)p 1 TeXcolorgray
201 2243 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Ev)o(entObject)p
1 TeXcolorgray 1582 2243 1742 88 v 0 TeXcolorgray 750
w(ILOG.J2CsMapping.Util.Ev)o(entObject)p 1 TeXcolorgray
3324 2243 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 2331 260 88 v 0 TeXcolorgray 82 2304 a(22)p 0.975
TeXcolorgray 201 2331 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.Locale)p 0.975 TeXcolorgray 1582 2331 1742 88
v 0 TeXcolorgray 919 w(System.Globalization.CultureInfo)p
0.975 TeXcolorgray 3324 2331 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 2418 260 88 v 0 TeXcolorgray 82 2392
a(23)p 1 TeXcolorgray 201 2418 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Map.Entry)p 1 TeXcolorgray 1582
2418 1742 88 v 0 TeXcolorgray 801 w(System.Collections.DictionaryEntry)
p 1 TeXcolorgray 3324 2418 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 2505 260 88 v 0 TeXcolorgray 82 2479
a(24)p 0.975 TeXcolorgray 201 2505 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.UUID)p 0.975 TeXcolorgray 1582 2505
1742 88 v 0 TeXcolorgray 935 w(System.Guid)p 0.975 TeXcolorgray
3324 2505 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
2592 260 88 v 0 TeXcolorgray 82 2566 a(25)p 1 TeXcolorgray
201 2592 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Ev)o
(entListener)p 1 TeXcolorgray 1582 2592 1742 88 v 0 TeXcolorgray
704 w(ILOG.J2CsMapping.Util.IEv)o(entListener)p 1 TeXcolorgray
3324 2592 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 2679 260 88 v 0 TeXcolorgray 82 2653 a(26)p 0.975
TeXcolorgray 201 2679 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.AbstractList)p 0.975 TeXcolorgray 1582 2679 1742
88 v 0 TeXcolorgray 752 w(System.Collections.ArrayList)p
0.975 TeXcolorgray 3324 2679 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 2766 260 88 v 0 TeXcolorgray 82 2740
a(27)p 1 TeXcolorgray 201 2766 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.T)m(imerT)g(ask)p 1 TeXcolorgray
1582 2766 1742 88 v 0 TeXcolorgray 803 w(ILOG.J2CsMapping.Util.IlT)m
(imerT)g(ask)p 1 TeXcolorgray 3324 2766 597 88 v 0 TeXcolorgray
0.975 TeXcolorgray -59 2854 260 88 v 0 TeXcolorgray 82
2827 a(28)p 0.975 TeXcolorgray 201 2854 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.T)m(imer)p 0.975 TeXcolorgray 1582
2854 1742 88 v 0 TeXcolorgray 942 w(ILOG.J2CsMapping.Util.IlT)m(imer)p
0.975 TeXcolorgray 3324 2854 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 2941 260 88 v 0 TeXcolorgray 82 2915
a(29)p 1 TeXcolorgray 201 2941 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.EmptyStackException)p 1 TeXcolorgray
1582 2941 1742 88 v 0 TeXcolorgray 455 w(System.Exception)p
1 TeXcolorgray 3324 2941 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 3028 260 88 v 0 TeXcolorgray 82 3002
a(30)p 0.975 TeXcolorgray 201 3028 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Collections)p 0.975 TeXcolorgray
1582 3028 1742 88 v 0 TeXcolorgray 782 w
(ILOG.J2CsMapping.Collections.Collections)p 0.975 TeXcolorgray
3324 3028 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
3115 260 88 v 0 TeXcolorgray 82 3089 a(31)p 1 TeXcolorgray
201 3115 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.ListIterator)p
1 TeXcolorgray 1582 3115 1742 88 v 0 TeXcolorgray 785
w(ILOG.J2CsMapping.Collections.IListIterator)p 1 TeXcolorgray
3324 3115 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 3202 260 88 v 0 TeXcolorgray 82 3176 a(32)p 0.975
TeXcolorgray 201 3202 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.HashMap)p 0.975 TeXcolorgray 1582 3202 1742 88
v 0 TeXcolorgray 833 w(System.Collections.Hashtable)p
0.975 TeXcolorgray 3324 3202 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 3290 260 88 v 0 TeXcolorgray 82 3263
a(33)p 1 TeXcolorgray 201 3290 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Calendar)p 1 TeXcolorgray 1582 3290
1742 88 v 0 TeXcolorgray 853 w(ILOG.J2CsMapping.Util.Calendar)p
1 TeXcolorgray 3324 3290 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 3377 260 88 v 0 TeXcolorgray 82 3351
a(34)p 0.975 TeXcolorgray 201 3377 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.ResourceBundle)p 0.975 TeXcolorgray
1582 3377 1742 88 v 0 TeXcolorgray 630 w
(System.Resources.ResourceManager)p 0.975 TeXcolorgray
3324 3377 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
3464 260 88 v 0 TeXcolorgray 82 3438 a(35)p 1 TeXcolorgray
201 3464 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Properties)p
1 TeXcolorgray 1582 3464 1742 88 v 0 TeXcolorgray 819
w(ILOG.J2CsMapping.Util.Properties)p 1 TeXcolorgray 3324
3464 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 3551
260 88 v 0 TeXcolorgray 82 3525 a(36)p 0.975 TeXcolorgray
201 3551 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Stack)p
0.975 TeXcolorgray 1582 3551 1742 88 v 0 TeXcolorgray
956 w(System.Collections.Stack)p 0.975 TeXcolorgray 3324
3551 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59 3638
260 88 v 0 TeXcolorgray 82 3612 a(37)p 1 TeXcolorgray
201 3638 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.MissingResourceException)p 1 TeXcolorgray 1582
3638 1742 88 v 0 TeXcolorgray 303 w
(System.Resources.MissingManifestResourceException)p
1 TeXcolorgray 3324 3638 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 3725 260 88 v 0 TeXcolorgray 82 3699
a(38)p 0.975 TeXcolorgray 201 3725 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Comparator)p 0.975 TeXcolorgray
1582 3725 1742 88 v 0 TeXcolorgray 766 w(System.Collections.IComparer)p
0.975 TeXcolorgray 3324 3725 597 88 v 0 TeXcolorgray
1 TeXcolorgray -59 3813 260 88 v 0 TeXcolorgray 82 3786
a(39)p 1 TeXcolorgray 201 3813 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.ArrayList)p 1 TeXcolorgray 1582
3813 1742 88 v 0 TeXcolorgray 831 w(System.Collections.ArrayList)p
1 TeXcolorgray 3324 3813 597 88 v 0 TeXcolorgray 0.975
TeXcolorgray -59 3900 260 88 v 0 TeXcolorgray 82 3874
a(40)p 0.975 TeXcolorgray 201 3900 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Collection)p 0.975 TeXcolorgray
1582 3900 1742 88 v 0 TeXcolorgray 811 w
(System.Collections.ICollection)p 0.975 TeXcolorgray
3324 3900 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59
3987 260 88 v 0 TeXcolorgray 82 3961 a(41)p 1 TeXcolorgray
201 3987 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Map)p
1 TeXcolorgray 1582 3987 1742 88 v 0 TeXcolorgray 986
w(System.Collections.IDictionary)p 1 TeXcolorgray 3324
3987 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 4074
260 88 v 0 TeXcolorgray 82 4048 a(42)p 0.975 TeXcolorgray
201 4074 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.ConcurrentModi\002cationException)p 0.975 TeXcolorgray
1582 4074 1742 88 v 0 TeXcolorgray 100 w(System.In)m(v)n
(alidOperationException)p 0.975 TeXcolorgray 3324 4074
597 88 v 0 TeXcolorgray 1 TeXcolorgray -59 4161 260 88
v 0 TeXcolorgray 82 4135 a(43)p 1 TeXcolorgray 201 4161
1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Arrays)p
1 TeXcolorgray 1582 4161 1742 88 v 0 TeXcolorgray 919
w(System.Array)p 1 TeXcolorgray 3324 4161 597 88 v 0
TeXcolorgray 0.975 TeXcolorgray -59 4248 260 88 v 0 TeXcolorgray
82 4222 a(44)p 0.975 TeXcolorgray 201 4248 1382 88 v
0 TeXcolorgray 90 w(ja)o(v)n(a.util.Currenc)o(y)p 0.975
TeXcolorgray 1582 4248 1742 88 v 0 TeXcolorgray 0.975
TeXcolorgray 3324 4248 597 88 v 0 TeXcolorgray 1 TeXcolorgray
-59 4336 260 88 v 0 TeXcolorgray 82 4309 a(45)p 1 TeXcolorgray
201 4336 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.NoSuchElementException)p 1 TeXcolorgray 1582
4336 1742 88 v 0 TeXcolorgray 331 w(System.In)m(v)n
(alidOperationException)p 1 TeXcolorgray 3324 4336 597
88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 4423 260 88
v 0 TeXcolorgray 82 4397 a(46)p 0.975 TeXcolorgray 201
4423 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Enumeration)p
0.975 TeXcolorgray 1582 4423 1742 88 v 0 TeXcolorgray
737 w(ILOG.J2CsMapping.Collections.IIterator)p 0.975
TeXcolorgray 3324 4423 597 88 v 0 TeXcolorgray 1 TeXcolorgray
-59 4510 260 88 v 0 TeXcolorgray 82 4484 a(47)p 1 TeXcolorgray
201 4510 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.Link)o(edList)p
1 TeXcolorgray 1582 4510 1742 88 v 0 TeXcolorgray 795
w(ILOG.J2CsMapping.Collections.Link)o(edList)p 1 TeXcolorgray
3324 4510 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 4597 260 88 v 0 TeXcolorgray 82 4571 a(48)p 0.975
TeXcolorgray 201 4597 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.Gre)o(gorianCalendar)p 0.975 TeXcolorgray 1582
4597 1742 88 v 0 TeXcolorgray 552 w(ILOG.J2CsMapping.Util.Gre)o
(gorianCalendar)p 0.975 TeXcolorgray 3324 4597 597 88
v 0 TeXcolorgray 1 TeXcolorgray -59 4684 260 88 v 0 TeXcolorgray
82 4658 a(49)p 1 TeXcolorgray 201 4684 1382 88 v 0 TeXcolorgray
90 w(ja)o(v)n(a.util.Random)p 1 TeXcolorgray 1582 4684
1742 88 v 0 TeXcolorgray 870 w(System.Random)p 1 TeXcolorgray
3324 4684 597 88 v 0 TeXcolorgray 0.975 TeXcolorgray
-59 4771 260 88 v 0 TeXcolorgray 82 4745 a(50)p 0.975
TeXcolorgray 201 4771 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n
(a.util.PropertyResourceBundle)p 0.975 TeXcolorgray 1582
4771 1742 88 v 0 TeXcolorgray 0.975 TeXcolorgray 3324
4771 597 88 v 0 TeXcolorgray 1 TeXcolorgray -59 4859
260 88 v 0 TeXcolorgray 82 4832 a(51)p 1 TeXcolorgray
201 4859 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.List)p
1 TeXcolorgray 1582 4859 1742 88 v 0 TeXcolorgray 1005
w(System.Collections.IList)p 1 TeXcolorgray 3324 4859
597 88 v 0 TeXcolorgray 0.975 TeXcolorgray -59 4946 260
88 v 0 TeXcolorgray 82 4920 a(52)p 0.975 TeXcolorgray
201 4946 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.re)o(ge)o(x.P)o
(attern)p 0.975 TeXcolorgray 1582 4946 1742 88 v 0 TeXcolorgray
729 w(ILOG.J2CsMapping.T)h(e)o(xt.P)o(attern)p 0.975
TeXcolorgray 3324 4946 597 88 v 0 TeXcolorgray 1 TeXcolorgray
-59 5033 260 88 v 0 TeXcolorgray 82 5007 a(53)p 1 TeXcolorgray
201 5033 1382 88 v 0 TeXcolorgray 90 w(ja)o(v)n(a.util.re)o(ge)o
(x.Matcher)p 1 TeXcolorgray 1582 5033 1742 88 v 0 TeXcolorgray
692 w(ILOG.J2CsMapping.T)g(e)o(xt.Matcher)p 1 TeXcolorgray
3324 5033 597 88 v 0 TeXcolorgray 1 TeXcolorgray -58
5046 3980 13 v 0 TeXcolorgray 0 TeXcolorgray -58 5052
3980 7 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray -114 -69 a Fp([5])p 0 TeXcolorgray
37 w(W)-7 b(.)18 b(Frak)o(es.)h(Introduction)h(to)f(information)g
(storage)h(and)f(retrie)n(v)n(al)10 19 y(systems.)g Fm(Space)p
Fp(,)h(14:10,)g(1992.)p 0 TeXcolorgray -114 114 a([6])p
0 TeXcolorgray 37 w(A.)e(Gokhale,)i(V)-10 b(.)19 b(Ganapathy)-5
b(,)19 b(and)h(Y)-10 b(.)19 b(P)o(admanaban.)h(Inferring)10
201 y(lik)o(ely)f(mappings)i(between)e(APIs.)f(In)h Fm(Pr)m(oc.)f(35nd)
i(ICSE)p Fp(,)e(2013.)p 0 TeXcolorgray -114 297 a([7])p
0 TeXcolorgray 37 w(M.)h(Grechanik,)h(C.)e(Fu,)g(Q.)g(Xie,)h(C.)f
(McMillan,)h(D.)f(Poshyv)n(an)o(yk,)10 384 y(and)i(C.)e(Cumby)-5
b(.)19 b(A)g(search)h(engine)g(for)e(\002nding)i(highly)f(rele)n(v)n
(ant)10 471 y(applications.)h(In)f Fm(Softwar)m(e)g(Engineering)o(,)h
(2010)g(A)n(CM/IEEE)10 558 y(32nd)g(International)g(Confer)m(ence)h(on)
p Fp(,)e(v)o(olume)g(1,)g(pages)10 645 y(475\226484.)i(IEEE,)c(2010.)p
0 TeXcolorgray -114 741 a([8])p 0 TeXcolorgray 37 w(A.)h(E.)g(Hassan)i
(and)g(R.)e(C.)g(Holt.)g(A)h(lightweight)g(approach)h(for)10
828 y(migrating)f(web)h(frame)n(w)o(orks.)f Fm(Inf)o(.)f(Softw)-6
b(.)19 b(T)-7 b(ec)o(hnol.)p Fp(,)10 915 y(47\(8\):521\226532,)22
b(Jun)d(2005.)p 0 TeXcolorgray -114 1011 a([9])p 0 TeXcolorgray
37 w(A.)f(Hindle,)h(E.)f(T)-6 b(.)19 b(Barr)m(,)f(Z.)g(Su,)g(M.)h
(Gabel,)g(and)g(P)-8 b(.)18 b(De)n(v)n(anb)o(u.)i(On)10
1098 y(the)f(naturalness)h(of)f(softw)o(are.)g(In)g Fm(Softwar)m(e)g
(Engineering)h(\(ICSE\),)10 1185 y(2012)g(34th)g(International)g
(Confer)m(ence)g(on)p Fp(,)f(pages)h(837\226847.)10 1272
y(IEEE,)d(2012.)p 0 TeXcolorgray -152 1368 a([10])p 0
TeXcolorgray 38 w(Ja)o(v)n(a)i(2)g(CSharp)g(T)m(ranslator)g(for)g
(Eclipse.)f Fh(http://)10 1455 y
(sourceforge.net/projects/j2cstranslator/)o Fp(.)p 0
TeXcolorgray -152 1550 a([11])p 0 TeXcolorgray 38 w(J.)h(Kim,)f(S.)g
(Lee,)g(S.-w)-5 b(.)18 b(Hw)o(ang,)h(and)h(S.)e(Kim.)g(T)-6
b(o)n(w)o(ards)19 b(an)10 1637 y(intelligent)g(code)h(search)f(engine.)
h(In)f Fm(AAAI)p Fp(,)e(2010.)p 0 TeXcolorgray -152 1733
a([12])p 0 TeXcolorgray 38 w(G.)h(Little)g(and)i(R.)e(C.)g(Miller)l(.)g
(K)n(e)o(yw)o(ord)i(programming)h(in)d(Ja)o(v)n(a.)h(In)10
1820 y Fm(Pr)m(oc.)f(22nd)j(ASE)p Fp(,)d(pages)h(84\22693,)i(2007.)p
0 TeXcolorgray -152 1916 a([13])p 0 TeXcolorgray 38 w(Apache)f(Lucene)g
(Core.)10 2003 y Fh(http://lucene.apache.org/core/)p
Fp(.)p 0 TeXcolorgray -152 2098 a([14])p 0 TeXcolorgray
38 w(C.)e(D.)h(Manning,)h(P)-8 b(.)17 b(Ragha)o(v)n(an,)j(and)g(H.)e
(Sch\374tze.)h Fm(Intr)m(oduction)h(to)10 2185 y(information)g(r)m
(etrie)o(val)p Fp(,)f(v)o(olume)g(1.)g(Cambridge)g(uni)n(v)o(ersity)h
(press)10 2273 y(Cambridge,)g(2008.)p 0 TeXcolorgray
-152 2368 a([15])p 0 TeXcolorgray 38 w(A.)e(K.)h(McCallum.)g(MALLET:)e
(A)i(machine)h(learning)f(for)10 2455 y(language)i(toolkit.)d(2002.)p
0 TeXcolorgray -152 2551 a([16])p 0 TeXcolorgray 38 w(M.)h(Mossienk)o
(o.)i(Automated)e(Cobol)h(to)e(Ja)o(v)n(a)i(rec)o(ycling.)f(In)g
Fm(Pr)m(oc.)10 2638 y(7th)g(CSMR)p Fp(,)g(pages)h(40\226,)f(2003.)p
0 TeXcolorgray -152 2733 a([17])p 0 TeXcolorgray 38 w(A.)f(T)-6
b(.)19 b(Nguyen,)h(H.)e(A.)g(Nguyen,)i(T)-6 b(.)19 b(T)-6
b(.)18 b(Nguyen,)i(and)g(T)-6 b(.)18 b(N.)10 2821 y(Nguyen.)i
(Statistical)e(learning)h(approach)i(for)d(mining)i(API)e(usage)10
2908 y(mappings)i(for)f(code)h(migration.)f(In)g Fm(Pr)m(oceedings)h
(of)e(the)h(29th)10 2995 y(A)n(CM/IEEE)e(international)j(confer)m(ence)
h(on)e(A)o(utomated)g(softwar)m(e)10 3082 y(engineering)p
Fp(,)h(pages)g(457\226468.)h(A)m(CM,)e(2014.)p 0 TeXcolorgray
-152 3178 a([18])p 0 TeXcolorgray 38 w(A.)f(T)-6 b(.)19
b(Nguyen,)h(T)-6 b(.)18 b(T)-6 b(.)19 b(Nguyen,)h(and)f(T)-6
b(.)19 b(N.)f(Nguyen.)i(Migrating)10 3265 y(code)g(with)e(statistical)g
(machine)i(translation.)f(In)g Fm(Companion)10 3352 y(Pr)m(oceedings)h
(of)f(the)g(36th)g(International)h(Confer)m(ence)h(on)10
3439 y(Softwar)m(e)f(Engineering)p Fp(,)g(pages)f(544\226547.)i(A)m
(CM,)e(2014.)p 0 TeXcolorgray -152 3534 a([19])p 0 TeXcolorgray
38 w(R.)f(P)o(andita,)h(X.)f(Xiao,)h(H.)f(Zhong,)h(T)-6
b(.)19 b(Xie,)f(S.)g(One)o(y)-5 b(,)19 b(and)10 3622
y(A.)f(P)o(aradkar)l(.)h(Inferring)g(method)h(speci\002cations)g(from)f
(natural)10 3709 y(language)i(API)d(descriptions.)h(In)g
Fm(Pr)m(oc.)f(34th)i(ICSE)p Fp(,)e(2012.)p 0 TeXcolorgray
-152 3804 a([20])p 0 TeXcolorgray 38 w(A.)g(P)o(anichella,)h(B.)f(Dit,)
g(R.)g(Oli)n(v)o(eto,)h(M.)g(Di)f(Penta,)10 3891 y(D.)g(Poshyv)n(an)o
(yk,)j(and)e(A.)g(De)f(Lucia.)h(Ho)n(w)g(to)g(ef)n(fecti)n(v)o(ely)g
(use)10 3979 y(topic)g(models)h(for)f(softw)o(are)g(engineering)h
(tasks?)k(an)19 b(approach)10 4066 y(based)h(on)f(genetic)h
(algorithms.)f(In)g Fm(Pr)m(oc.)f(35th)i(ICSE)p Fp(,)e(pages)10
4153 y(522\226531,)j(2013.)p 0 TeXcolorgray -152 4248
a([21])p 0 TeXcolorgray 38 w(S.)c(P)-8 b(.)17 b(Reiss.)h
(Semantics-based)h(code)g(search.)f(In)g Fm(Pr)m(oc.)g(31st)g(ICSE)p
Fp(,)10 4336 y(pages)i(243\226253,)h(2009.)p 0 TeXcolorgray
-152 4431 a([22])p 0 TeXcolorgray 38 w(M.)e(P)-8 b(.)18
b(Robillard,)g(E.)g(Bodden,)i(D.)e(Ka)o(wryk)o(o)n(w)-5
b(,)20 b(M.)f(Mezini,)g(and)10 4518 y(T)-6 b(.)19 b(Ratchford.)g
(Automated)h(API)e(property)h(inference)h(techniques.)10
4605 y Fm(IEEE)e(T)l(r)o(ans.)g(on)i(Softwar)m(e)f(Engineering)p
Fp(,)h(39\(5\):613\226637,)h(2013.)p 0 TeXcolorgray -152
4701 a([23])p 0 TeXcolorgray 38 w(A.)d(Singhal.)h(Modern)h(information)
g(retrie)n(v)n(al:)j(A)c(brief)f(o)o(v)o(ervie)n(w)-5
b(.)10 4788 y Fm(IEEE)18 b(Data)h(Eng)o(.)f(Bull.)p Fp(,)g
(24\(4\):35\22643,)j(2001.)p 0 TeXcolorgray -152 4884
a([24])p 0 TeXcolorgray 38 w(G.)d(Sridhara,)h(L.)f(Pollock,)h(and)g(K.)
g(V)l(ijay-Shank)o(er)l(.)f(Generating)10 4971 y(parameter)i(comments)f
(and)h(inte)o(grating)f(with)g(method)10 5058 y(summaries.)g(In)g
Fm(Pr)m(oc.)f(of)h(19th)h(ICPC)p Fp(,)d(pages)j(71\22680,)g(2011.)p
0 TeXcolorgray -152 5153 a([25])p 0 TeXcolorgray 38 w(C.)e(T)m(reude,)i
(M.)e(Robillard,)h(and)h(B.)e(Dagenais.)h(Extracting)10
5241 y(de)n(v)o(elopment)i(tasks)e(to)g(na)o(vigate)g(softw)o(are)g
(documentation.)p 0 TeXcolorgray -152 5336 a([26])p 0
TeXcolorgray 38 w(A.)f(v)n(an)i(Deursen)g(and)f(T)-6
b(.)19 b(K)o(uipers.)g(Identifying)g(objects)h(using)p
0 TeXcolorgray 0 TeXcolorgray 2202 -69 a(cluster)f(and)g(concept)h
(analysis.)g(In)e Fm(Pr)m(oc.)h(21st)g(ICSE)p Fp(,)f(pages)2202
19 y(246\226255,)j(1999.)p 0 TeXcolorgray 2040 114 a([27])p
0 TeXcolorgray 38 w(R.)d(C.)g(W)-6 b(aters.)18 b(Program)h(translation)
g(via)g(abstraction)h(and)2202 201 y(reimplementation.)f
Fm(IEEE)f(T)l(r)o(ans.)g(on)i(Softwar)m(e)g(Engineering)p
Fp(,)2202 288 y(14\(8\):1207\342)2582 272 y(\013)2565
288 y(A)8 b(\270)-33 b(S\2261228,)22 b(1988.)p 0 TeXcolorgray
2040 384 a([28])p 0 TeXcolorgray 38 w(W)-7 b(.)18 b(Zheng,)h(Q.)g
(Zhang,)g(and)g(M.)g(L)l(yu.)g(Cross-library)g(API)2202
471 y(recommendation)i(using)e(web)h(search)f(engines.)h(In)f
Fm(Pr)m(oc.)f(13th)2202 558 y(ESEC/FSE)p Fp(,)f(pages)j(480\226483,)h
(2011.)p 0 TeXcolorgray 2040 654 a([29])p 0 TeXcolorgray
38 w(H.)d(Zhong,)i(S.)e(Thummalapenta,)i(T)-6 b(.)18
b(Xie,)g(L.)g(Zhang,)i(and)2202 741 y(Q.)e(W)-6 b(ang.)19
b(Mining)h(API)e(mapping)i(for)f(language)h(migration.)f(In)2202
828 y Fm(Pr)m(oc.)f(32nd)i(ICSE)p Fp(,)e(pages)i(195\226204,)h(2010.)p
0 TeXcolorgray 2040 923 a([30])p 0 TeXcolorgray 38 w(H.)d(Zhong,)i(L.)e
(Zhang,)h(T)-6 b(.)18 b(Xie,)h(and)g(H.)g(Mei.)f(Inferring)i(resource)
2202 1011 y(speci\002cations)f(from)g(natural)g(language)i(api)e
(documentation.)h(In)2202 1098 y Fm(Pr)m(oc.)e(24th)i(ASE)p
Fp(,)e(pages)i(307\226318,)g(2009.)p 0 TeXcolorgray 2040
1193 a([31])p 0 TeXcolorgray 38 w(H.)e(Zhou,)h(F)-6 b(.)18
b(Chen,)h(and)h(H.)e(Y)-7 b(ang.)19 b(De)n(v)o(eloping)h(Application)
2202 1280 y(Speci\002c)e(Ontology)i(for)f(Program)g(Comprehension)i(by)
2202 1368 y(Combining)f(Domain)f(Ontology)h(with)f(Code)g(Ontology)-5
b(.)20 b(In)f Fm(Pr)m(oc.)2202 1455 y(8th)g(QSIC)p Fp(,)f(pages)i(225)g
(\226234,)g(2008.)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
